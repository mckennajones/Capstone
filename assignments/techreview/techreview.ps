%!PS-Adobe-2.0
%%Creator: dvips(k) 5.996 Copyright 2016 Radical Eye Software
%%Title: techreview.dvi
%%CreationDate: Mon Nov 14 20:26:37 2016
%%Pages: 14
%%PageOrder: Ascend
%%BoundingBox: 0 0 612 792
%%DocumentFonts: URWPalladioL-Roma NimbusSanL-Bold NimbusSanL-Regu
%%+ URWPalladioL-Bold NimbusSanL-ReguItal
%%DocumentPaperSizes: Letter
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -R -Poutline -t letter techreview.dvi -o
%+ techreview.ps
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2016.11.14:2026
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
% $Id: pstricks.pro 919 2014-05-19 18:42:47Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 1.24, 2016/04/22
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
% Define the follwing gs-functions if not known, eg when using distiller
%
systemdict /.setopacityalpha known not {/.setopacityalpha { pop } def } if
systemdict /.setblendmode known not {/.setblendmode { pop } def } if
systemdict /.setshapealpha known not {/.setshapealpha { pop } def } if
%
/tx@Dict 200 dict def 				% the main PSTricks dictionary
tx@Dict begin
/ADict 25 dict def				% The arrow dictionary
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Sqrt { dup 0 lt { pop 0 } { sqrt } ifelse } def  % return 0 for negative arguments 
/Atan { /atan load stopped { pop pop 0 } if } def % return 0 if atan not known
/ATAN1 {neg -1 atan 180 sub } def		% atan(x) (only one parameter)
/Div { dup 0 eq { pop } { div } ifelse } def  	% control the division
/Log { dup 1e-20 lt { pop -1e30 }{ log } ifelse } def % control the log
/tan { dup cos abs 1.e-10 lt 
  { pop 1.e10 } 				% return 1.e10 as infinit
  { dup sin exch cos div } ifelse 		% default sin/cos
} def
/Tan { dup sin exch cos Div } def 		% sin(x)/cos(x) x in degrees
/Acos {dup dup mul neg 1 add dup 0 lt {		% arc cos, returns 0 when negative root
  pop pop 0 }{ sqrt exch atan} ifelse } def
/Acos2 { 2 dict begin 
  /x ED /y ED
  y abs 1.0e-20 lt { 1.0e30 } if
  x y div 
  dup dup mul neg 1 add dup 0 lt {		% arc cos needs two values x,y
  pop pop 0 }{ sqrt exch atan} ifelse 
  y 0 lt { 180 add } if
} def
/NET { neg exch neg exch T } def	      	% change coordinate system to the negative one		
/Pyth { dup mul exch dup mul add sqrt } def   	% Pythagoras, expects 2 parameter
/Pyth2 {					% Pythagoras, xA yA xB yB
  3 -1 roll 		% xA xB yB yA
  sub			% xA xB yB-yA
  3 1 roll 		% yB-yA xA xB
  sub			% yB-yA xA-xB
  Pyth } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def % Polar to Cartesian
/PtoCab { dup cos 4 -1 roll mul 3 1 roll sin mul } def % Polar to Cartesian (Ellipse) a b phi-> x y 
%/Rand { rand 4294967295 div } def		% a real random number
/Rand { rand 2147483447 div } def		% a real random number between 0 and 1
%----------------- hv added 20050516 ---------------
/PiDiv2 1.57079632680 def
/Pi 3.14159265359 def 
/TwoPi 6.28318530718 def
/Euler 2.71828182846 def 
%/e Euler bind def
%
/RadtoDeg { 180 mul Pi div } bind def 		% convert from radian to degrees
/DegtoRad { Pi mul 180 div } bind def 		% viceversa
%
/startGlobal { true setglobal globaldict begin } bind def
/endGlobal { end false setglobal } bind def
/pssetRGBcolor /setrgbcolor load def
/pssetCMYKcolor /setcmykcolor load def
/pssetGraycolor /setgray load def
%
%----------------- hv end---------------------------
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def } def
%
/PathLength { 
  flattenpath /z 0 def 
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def }
  { /y ED /x ED PathLength@ } 
  {} 
  { /y y2 def /x x2 def PathLength@ }
  /pathforall load stopped { pop pop pop pop } if 
  z 
} def
%
/STP { .996264 dup scale } def			% BP/PT scaling
/STV { SDict begin normalscale end STP  } def	% 
%
/DashLine {
    dup 0 gt
    { /a .5 def PathLength exch div }
    { pop /a 1 def PathLength } ifelse
    /b ED % pattern should fit evenly in b
    dup /X ED % pattern array
    0 get /y ED % length of first black segment
    /z 0 X {add} forall def % length of the full pattern
    %% Computation of the scaling factor as described by van Zandt:
    b a .5 sub 2 mul y mul sub z Div round
    z mul a .5 sub 2 mul y mul add b exch Div
    %%%% scaling factor on stack.
    /z ED %% now, z is the scaling factor
    false % for the length test below
    X { z mul } forall X astore %% modification TN 04-08-07
    %%% Checking whether at least one dash in X has positive length:
    {0 gt or} forall
    { X 1 a sub y mul }
    { [ 1 0 ] 0 }
    ifelse
    setdash stroke
} def
%
/DotLine { 
  /b PathLength def 
  /a ED /z ED /y CLW def 
  /z y z add def 
  a 0 gt { 
    /b b a div def 
  }{ 
    a 0 eq { 
      /b b y sub def 
    }{ a -3 eq { 
      /b b y add def } if 
    } ifelse 
  } ifelse 
  [ 0 b b z Div round Div dup 0 le { pop 1 } if ] 
  a 0 gt { 0 }{ y 2 div a -2 gt { neg }if } ifelse 
  setdash 1 setlinecap stroke 
} def
%
/SymbolLine {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 div cvi /n ED     				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    %% for negative SymStep we calculate the distance 
    SymStep 0 lt 
      { %XYLength SymStep div abs cvi 
        /nSym SymStep abs cvi def } 
      { /nSym XYLength SymStep div cvi def }
    ifelse
    0.5 setflat
    /Shift Symbol stringwidth pop 2 div def 
    /deltaX XLength nSym div def
    /deltaY YLength nSym div def
    curveticks 
      { XA YA moveto }
      { XA Shift sub YA Shift sub moveto }
    ifelse 
    nSym { 
      gsave 
      curveticks 
        { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
          currentpoint translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
          Symbol show 
        }
      ifelse 
      grestore 
      deltaX deltaY rmoveto
    } repeat
    /YA YB def /XA XB def
  } repeat 
  curveticks 
    { XA YA moveto }
    { XA Shift sub YA Shift sub moveto }
  ifelse 
  gsave 
  curveticks 
    { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
      XA YA translate rotAngle rotate 
      0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
      SymbolLinewidth setlinewidth stroke
    }
    { 
      rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
    }
  ifelse 
  grestore
  pop 				% delete the mark symbol
} def
%
/LineFill { % hv ------------ patch 7 -------------
  gsave 
  abs /hatchWidthInc ED
  abs /hatchSepInc ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  2 setlinecap 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  x2 x1 sub 1 add { 
    x1 a mul y1 moveto 0 y2 rlineto stroke 
    /x1 x1 1 add 
      hatchWidthInc 0 gt { CLW add } if 
    def 
    hatchSepInc 0 gt hatchWidthInc 0 gt or { 
      /a a hatchSepInc add def
      CLW hatchWidthInc add SLW 
    } if
  } repeat 
  grestore 
  pop pop } def
%
/DotFill {%	 on stack: dot radius
  /dotRadius ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform 
  pathbbox % llx lly urx ury of smallest bounding box
  /y2 ED /x2 ED /y1 ED /x1 ED 
  y2 y1 sub a div 2 add cvi /Ny ED
  x2 x1 sub a div 2 add cvi /Nx ED
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  /yA y1 dotRadius add CLW add def
  /xA0 x1 dotRadius add CLW add def
  Ny {
     /xA xA0 def
     Nx { 
       newpath 
       xA yA dotRadius 0 360 arc 
       SolidDot { gsave fill grestore } if 
       stroke
       xA a add /xA ED
     } repeat
     yA a add /yA ED
  } repeat
  grestore
} def
%
/PenroseFill {%	 on stack: scaling factor
  /Scale ED
%  1 exch div round /penroseFactor ED 
%  a 0 dtransform round exch round exch
%  2 copy idtransform 
%  exch Atan rotate 
%  idtransform pop /a ED 
%  .25 .25 itransform pathbbox 
%  /y2 ED 
%  a Div ceiling cvi /x2 ED /y1 ED 
%  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
gsave
  220 150 translate
  Scale dup scale
  systemdict /setstrokeadjust known { true setstrokeadjust } if 
  /I/S/L/W/G/+/Z/F/E/D[/def/exch/for{E D}/add{s E get mul}
 { Z -36.2001 1 33 }{25 E S rlineto}{/q Z dup q G E q 1 + G}{Z 2 2}]{cvx def}forall
  [0 72 1008 {dup sin E cos }F ]1 setlinejoin/s W{/a W{/b I 10{/i I 4{/m I moveto
  i m +/j I 10{/l Z b m l + G a l G sub s m get div .2 + floor .3 + 25
  mul j l + S rmoveto}F i L j L stroke }F}F}F}F 
  grestore 
%  pop pop 
} def
%
/PenroseFillA {%  on stack: scaling factor, border color, kite color, dart color
  /Scale ED
  Scale dup scale
  /border_colour ED 
  /kite_colour ED 
  /dart_colour ED
  clip 
  newpath 
  gsave
  100 100 translate
  6 
  Scale 1 lt { 1 Scale dup add div mul cvi } if %%%%   Number of iterations
  10					%%%%   Long side length in millimeters
  /border_width { L 0.06 mul }def		%%%%   Choose the scalefactor for the borders
  /L exch 25.4 div 72 mul def		%%%%   Conversion: mm -> inches -> points
  /f{-1 5 sqrt add 2 div}bind def		%%%%   The reciprocal of the golden ratio
  /l{L f mul}bind def			%%%%   Short side length l = L*f
  /Ll{L l add}bind def			%%%%   Ll =  L + l
  /c{36 cos L mul}bind def		%%%%   c  =  L*cos(36)
  /s{36 sin L mul}bind def		%%%%   s  =  L*sin(36)
  /draw_tile { 0 0 moveto c s lineto 0 lineto gsave closepath gsave fill grestore
	     0 setlinewidth stroke grestore border_colour stroke } bind def
  /half_kite { dup dup 0 gt{ 1 sub gsave f f neg scale -36 rotate half_dart
			   Ll 0 translate 144 rotate kite grestore }
	      		 { kite_colour L draw_tile }ifelse
	     pop } bind def
  /half_dart { dup dup 0 gt{ 1 sub gsave f f scale half_kite
			   -144 rotate Ll neg 0 translate half_dart grestore }
	      		 { dart_colour l draw_tile }ifelse
  	     pop } bind def
  /kite{ gsave half_kite 1 -1 scale half_kite grestore }bind def
  border_width setlinewidth  1 setlinejoin  1 setlinecap
%  450 0 translate  
  dup f exch neg exp dup scale
  5 {kite 72 rotate } repeat stroke 
  grestore
} def
%
%
/TruchetFill { %	 on stack: scaling factor
  10 dict begin
  dup dup scale
  1 exch div round /penroseFactor ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  /ma a neg def
  /ha a 2 div def 
  /mha ha neg def
  /tile { 
    rand dup 2 idiv 2 mul eq { 90 rotate } if
    mha mha moveto ha mha lineto
    ha ha lineto mha ha lineto
%    closepath .1 setlinewidth stroke
    contents
  } def
  /contents{ 
    0 ha moveto ha 0 lineto
    0 mha moveto mha 0 lineto
%    1 setlinewidth stroke
  } def
  /dotiling {
    f ma mul a f a mul { 
      /i exch def
      f ma mul a f a mul { 
        /j exch def
        gsave i j translate
        tile stroke grestore
      } for
    } for
  } def
%
  /f 3 def 
  5 srand dotiling 
  end % local user dict
} def
%
/BeginArrow { 
  ADict begin 			% hold it local, for end see EndArrow
  /@mtrx CM def 
  gsave 
  2 copy T 
  2 index sub neg exch 
  3 index sub exch Atan 
  rotate newpath 
} def
%
/EndArrow { @mtrx setmatrix CP grestore end } def % end the ADict
%
/Arrow { 
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /a ED 
  { 0 h T 1 -1 scale } if 
  w neg h moveto 
  0 0 L w h L w neg a neg rlineto 
  gsave fill grestore 
} def
%
/ArrowD { % the sides are drawn as curves (hv 20071211)
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /Inset ED 
  { 0 h T 1 -1 scale } if % changes the direction
% we use y=w/h^2 * x^2 as equation for the control points
% for the coordinates the arrow is seen from top to bottom
% the bottom (tip) is (0;0)
  w neg h moveto % lower left of >
  w 9 div 4 mul neg h 3 div 2 mul
  w 9 div neg       h 3 div  
  0 0 curveto    % tip of >
  w 9 div        h 3 div  
  w 9 div 4 mul  h 3 div 2 mul
  w h curveto % upper left of >
  w neg Inset neg rlineto % move to x=0 and inset
  gsave fill grestore 
} def 
%
/Tbar { 
  CLW mul add /z ED 
  z -2 div CLW 2 div moveto 
  z 0 rlineto stroke 
  0 CLW moveto 
} def
%
/Bracket { 
  CLW mul add dup CLW sub 2 div 
  /x ED mul CLW add /y ED /z CLW 2 div def 
  x neg y moveto 
  x neg CLW 2 div L x CLW 2 div L x y L stroke 
  0 CLW moveto 
} def
%
/RoundBracket { 
  CLW mul add dup 2 div 
  /x ED mul /y ED /mtrx CM def 
  0 CLW 2 div T x y mul 0 ne { x y scale } if 
  1 1 moveto 
  .85 .5 .35 0 0 0 curveto 
  -.35 0 -.85 .5 -1 1 curveto 
  mtrx setmatrix stroke 0 CLW moveto 
} def
%
/SD { 0 360 arc fill } def
%
/EndDot { % DS is the dot size 
  { /z DS def } { /z 0 def } ifelse  	% outer or inner dimen 
  /b ED 				% the color definition
  0 z DS SD 
  b { 0 z DS CLW sub SD } if 
  0 DS z add CLW 4 div sub 
  moveto 
} def
%
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
  /closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
  load } if ] cvx newpath 3 1 roll T exec } def
%
/NArray { % holds the coordinates and on top of stack the showpoints boolean
  /showpoints ED 
  counttomark 2 div dup cvi /n ED  	% n 2 div on stack 
  n eq not { exch pop } if		% even numbers of points? delete one
  ] aload /Points ED 
  showpoints not { Points aload pop } if
%    { ] aload /Points ED } 
%    { n 2 mul 1 add -1 roll pop } ifelse	% delete the mark symbol 
} def
%
/Line { 
  NArray n 0 eq not 
    { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub def 
      n { Lineto } repeat 
      CP 4 2 roll ArrowB L pop pop 
    } if 
} def
%
/LineToYAxis {
  /Ox ED		% Save the x origin value 
  NArray            % all x-y pairs on stack
  n { 2 copy moveto % go to current point
    Ox exch Lineto   % line to y-axis
    pop             % delete old x-value
  } repeat
} def
%
/LineToXAxis{
  /Oy ED		% Save the y origin value 
  NArray		% all x-y pairs on stack
  n 0 eq not
    { n 1 eq { 0 0 /n 2 def } if
      ArrowA
      /n n 2 sub def
      CP 2 copy moveto pop Oy Lineto
      n { 2 copy moveto pop Oy Lineto } repeat
      CP
      4 2 roll
      ArrowB
      2 copy moveto pop Oy
      L
      pop pop } if
} def
%
/Arcto { 
  /a [ 6 -2 roll ] cvx def 
  a r 
  /arcto load stopped { 5 } { 4 } ifelse { pop } repeat 
  a 
} def
%
/CheckClosed { 
  dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
  and { pop pop /n n 1 sub def } if 
} def
%
/Polygon { 
  NArray n 2 eq { 0 0 /n 3 def } if 
  n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      n 2 mul -2 roll 
      /y0 ED /x0 ED /y1 ED /x1 ED  
      x1 y1 
      /x1 x0 x1 add 2 div def 
      /y1 y0 y1 add 2 div def 
      x1 y1 moveto 
      /n n 2 sub def 
      n { Lineto } repeat 
      x1 y1 x0 y0 6 4 roll Lineto
      Lineto pop pop closepath } ifelse 
} def
%
/SymbolPolygon {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 add /m ED
  2 copy m 2 roll				% copy last two
  m 2 div cvi /n ED    				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    /nSym XYLength SymStep Div cvi def
    /Shift Symbol stringwidth pop 2 Div def 
    /deltaX XLength nSym Div def
    /deltaY YLength nSym Div def
    XA Shift sub YA Shift sub moveto 
    nSym { 
      gsave rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
      grestore 
      deltaX deltaY rmoveto
    } repeat
%    XB Shift sub YB Shift sub moveto Symbol show
    /YA YB def /XA XB def
  } repeat 
  pop	% delete the mark symbol
} def
%
/Diamond { 
  /mtrx CM def 
  T rotate 
  /h ED 
  /w ED 
  dup 0 eq { pop } { CLW mul neg 
    /d ED 
    /a w h Atan def 
    /h d a sin Div h add def 
    /w d a cos Div w add def } ifelse 
  mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2 div 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false Line 
  closepath mtrx setmatrix } def
%
/Triangle { 
  /mtrx CM def 
  translate 
  rotate /h ED 2 div /w ED 
  dup CLW mul /d ED 
  /h h d w h Atan sin Div sub def 
  /w w d h w Atan 2 div dup cos exch sin Div mul sub def 
  mark 
  0 d w neg d 0 h w d 0 d 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false 
  Line 
  closepath 
  mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
  setmatrix pop 
} def
% DG/SR modification end
%
/CCA { 
  /y ED /x ED 
  2 copy y sub /dy1 ED 
  x sub /dx1 ED 
  /l1 dx1 dy1 Pyth def 
} def
%
/CC { 
  /l0 l1 def 
  /x1 x dx sub def 
  /y1 y dy sub def 
  /dx0 dx1 def 
  /dy0 dy1 def 
  CCA 
  /dx dx0 l1 c exp mul dx1 l0 c exp mul add def 
  /dy dy0 l1 c exp mul dy1 l0 c exp mul add def 
  /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos abs b exp a mul dx dy Pyth Div 2 div def 
  /x2 x l0 dx mul m mul sub def
  /y2 y l0 dy mul m mul sub def 
  /dx l1 dx mul m mul neg def 
  /dy l1 dy mul m mul neg def 
} def
%
/IC { 
  /c c 1 add def 
  c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if } ifelse 
  /a a 2 mul 3 div 45 cos b exp div def 
  CCA 
  /dx 0 def 
  /dy 0 def 
} def
%
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
%
/OpenCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { BOC /n n 3 sub def n { NC } repeat EOC } ifelse 
} def
%
/CurvePath { 
  %% for negative SymStep we calculate the distance 
  SymStep 0 lt { gsave PathLength SymStep div abs /SymStep ED grestore } if
  0.5 setflat
  flattenpath /z 0 def /z0 0 def
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def 
    x1 Shift sub y1 Shift sub moveto 
    gsave 
    curveticks 
      { x1 y1 translate startAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke      
      }
      { startAngle rotate Symbol show }
    ifelse 
    grestore /z0 z def }
  { /y ED /x ED PathLength@ z z0 sub SymStep ge {
      x Shift sub y Shift sub moveto 
      gsave 
      curveticks 
        { y yOld sub x xOld sub Atan 180 sub CorrAngle sub /rotAngle ED  
          x y translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
          Symbol show 
        }
      ifelse 
      grestore /z0 z def } if 
    /yOld y def /xOld x def } 
  {} %% the lineto part
  { /y y2 def /x x2 def PathLength@ 
    x Shift sub y Shift sub moveto 
    gsave
    curveticks 
      { y yOld sub x xOld sub Atan 180 sub /rotAngle ED  
        x y translate rotAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke
      }
      { 
        x Shift sub y Shift sub moveto 
        rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
        Symbol show 
      }
    ifelse 
    grestore
  }
  pathforall 
%  curveticks 
%   { gsave 
%     x y translate rotAngle rotate 
%     0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
%     SymbolLinewidth setlinewidth stroke grestore
%   } if
  z 
} def
%
/OpenSymbolCurve { 
  OpenCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/AltCurve { 
  { false NArray n 2 mul 2 roll 
    [ n 2 mul 3 sub 1 roll ] aload
    /Points ED 
    n 2 mul -2 roll } 
  { false NArray } ifelse 
  n 4 lt { n { pop pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse 
} def
%
/AltOpenSymbolCurve { 
  AltCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      6 copy n 2 mul 6 add 6 roll 
      IC CC x y moveto n { NC } repeat 
      closepath pop pop 
    } ifelse 
} def
%
/ClosedSymbolCurve { 
  ClosedCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/CalcBezierSpline {%  Christoph Bersch
  10 dict begin
  /getX { Points exch 2 mul get } def
  /getY { Points exch 2 mul 1 add get } def
  /n Points length 1 sub 2 idiv def
  /GetFirstControlPoints {
    /x n array def
    /tmp n array def
    /b 2 def
    x 0 rhs 0 get b div put
    1 1 n 1 sub {
      /i exch def
      tmp i 1 b div dup 4 1 roll put
      i n 1 sub lt { 4 }{ 3.5 } ifelse exch sub /b exch def
      x i rhs i get x i 1 sub get sub b div put
    } for
    1 1 n 1 sub {
      n exch sub
      dup dup x exch 1 sub 2 copy 6 2 roll
      get 3 1 roll tmp exch get
      exch x exch get mul sub
      put	
    } for
    x
  } def
  % 
  n 1 eq {
    0 getX 2 mul 1 getX add 3 div
    0 getY 2 mul 1 getY add 3 div
    exch dup 3 1 roll 2 mul 0 getX sub
    exch dup 3 1 roll 2 mul 0 getY sub
    [ 0 getX 0 getY 7 3 roll 1 getX 1 getY ] /outPoints exch def
  } {
    /outPoints 6 n mul 2 add array def
    0 1 n {
      dup dup 6 mul dup 1 add
      outPoints exch 5 -1 roll getY put
      outPoints exch 3 -1 roll getX put
    } for
    /rhs n array def
    1 1 n 2 sub {
      rhs exch dup dup getX 4 mul exch 1 add getX 2 mul add put
    } for
    rhs 0 0 getX 1 getX 2 mul add put
    rhs n 1 sub dup getX 8 mul n getX add 2 div put
    GetFirstControlPoints
    1 1 n 2 sub {
      rhs exch dup dup getY 4 mul exch 1 add getY 2 mul add put
    } for
    rhs 0 0 getY 1 getY 2 mul add put
    rhs n 1 sub dup getY 8 mul n getY add 2 div put
    GetFirstControlPoints
    0 1 n 1 sub {
      /i exch def
      2 copy
      i get outPoints 6 i mul 3 add 3 -1 roll put
      i get outPoints 6 i mul 2 add 3 -1 roll put
      2 copy
      i n 1 sub lt {
        i 1 add get i 1 add getY 2 mul exch sub outPoints 6 i mul 5 add 3 -1 roll put
        i 1 add get i 1 add getX 2 mul exch sub outPoints 6 i mul 4 add 3 -1 roll put
      }{
        n 1 sub get n getY add 2 div outPoints 6 n 1 sub mul 5 add 3 -1 roll put
        n 1 sub get n getX add 2 div outPoints 6 n 1 sub mul 4 add 3 -1 roll put
      } ifelse
    } for
    pop pop
  } ifelse
  outPoints
  end
} def
/Spline {
  /showpoints ED
  counttomark 2 div dup cvi /n ED
  n eq not { exch pop } if
  ] /Points ED
  n 1 gt {
    CalcBezierSpline
    mark exch aload pop
    ArrowA
    n 2 sub {
      6 2 roll 4 2 roll curveto
    } repeat
    6 2 roll 4 2 roll ArrowB curveto
  } if
} def
/OpenSymbolSpline {
  Spline
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore } def
%
/FontDot { 
  DS 2 mul dup 
  matrix scale matrix concatmatrix exch matrix
  rotate matrix concatmatrix exch 
  findfont exch makefont setfont 
} def
%
/Rect { 
  x1 y1 y2 add 2 div moveto 
  x1 y2 lineto 
  x2 y2 lineto 
  x2 y1 lineto
  x1 y1 lineto 
  closepath 
} def
%
/OvalFrame { 
  x1 x2 eq y1 y2 eq or 
    { pop pop x1 y1 moveto x2 y2 L } 
    { y1 y2 sub abs x1 x2 sub abs 2 copy gt 
      { exch pop } { pop } ifelse 
      2 div exch { dup 3 1 roll mul exch } if 
      2 copy lt { pop } { exch pop } ifelse
      /b ED 
      x1 y1 y2 add 2 div moveto 
      x1 y2 x2 y2 b arcto 
      x2 y2 x2 y1 b arcto
      x2 y1 x1 y1 b arcto 
      x1 y1 x1 y2 b arcto 
      16 { pop } repeat 
      closepath 
    } ifelse 
} def
%
/Frame { 
  CLW mul /a ED 
  3 -1 roll 
  2 copy gt { exch } if 
  a sub /y2 ED 
  a add /y1 ED 
  2 copy gt { exch } if 
  a sub /x2 ED 
  a add /x1 ED 
  1 index 0 eq { pop pop Rect } { OvalFrame } ifelse 
} def
%
/BezierNArray { 
  /f ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if 
  n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat 
  f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
%
/OpenBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { ArrowA n 4 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      6 2 roll 4 2 roll ArrowB curveto } ifelse 
} def
%
/OpenSymbolBezier { 
  OpenBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { moveto n 1 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      closepath } ifelse 
} def
%
/ClosedSymbolBezier { 
  /f ED				 % save showpoints value 
  2 copy /yEnd ED /xEnd ED
  counttomark -2 roll 2 copy /yStart ED /xStart ED
  counttomark 2 roll
  f
  ClosedBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
  [ xEnd yEnd xStart yStart SymbolLine 
} def
%
/BezierShowPoints { 
  gsave 
  Points aload length 2 div cvi /n ED 
  moveto 
  n 1 sub { lineto } repeat 
  CLW 2 div SLW [ 4 4 ] 0 setdash stroke 
  grestore 
} def
%
/Parab { 
  /y0 ED /x0 ED /y1 ED /x1 ED 
  /dx x0 x1 sub 3 div def 
  /dy y0 y1 sub 3 div def 
  x0 dx sub y0 dy add x1 y1 ArrowA
  x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 x0 y0 x0 2 mul x1 sub y1 ] def 
} def
%
/Parab1 { % 1 end  |  0 SP
  /ySP ED /xSP ED /y1 ED /x1 ED 
  /dx xSP x1 sub 3 div def 
  /dy ySP y1 sub 3 div def 
  newpath x1 y1 moveto xSP y1 lineto xSP ySP lineto 
                       x1 ySP lineto closepath clip 
  currentpoint
  newpath moveto
  xSP dx sub ySP dy add x1 y1 ArrowA
  xSP dx add ySP dy add xSP 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 xSP ySP xSP 2 mul x1 sub y1 ] def 
} def
%
/Grid { 
  newpath 
  /a 4 string def 
  /b ED % 				psk@gridlabels in pt
  /c ED % 				{ \pst@usecolor\psgridlabelcolor }
  /n ED % 				psk@griddots
  cvi dup 1 lt { pop 1 } if 
  /s ED % 				\psk@subgriddiv
  s div dup 0 eq { pop 1 } if 
  /dy ED s div dup 0 eq { pop 1 } if %	\pst@number\psyunit abs
  /dx ED dy div round dy mul %		\pst@number\psxunit abs
  /y0 ED dx div round dx mul 
  /x0 ED dy div round cvi 
  /y2 ED dx div round cvi 
  /x2 ED dy div round cvi 
  /y1 ED dx div round cvi 
  /x1 ED 
  /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def 
  /w x2 x1 sub 0 gt { 1 } { -1 } ifelse def 
  b 0 gt { 
    /z1 b 4 div CLW 2 div add def
%    /Helvetica findfont b scalefont setfont 
    /b b .95 mul CLW 2 div add def } if 
  systemdict /setstrokeadjust known 
    { true setstrokeadjust /t { } def }
    { /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
       exch itransform } bind def } ifelse 
  gsave n 0 gt { 1 setlinecap [ 0 dy n div ] dy n div 2 div setdash } { 2 setlinecap } ifelse 
  /i x1 def 
  /f y1 dy mul n 0 gt { dy n div 2 div h mul sub } if def 
  /g y2 dy mul n 0 gt { dy n div 2 div h mul add } if def 
  x2 x1 sub w mul 1 add dup 1000 gt { pop 1000 } if 
  { i dx mul dup y0 moveto 
    b 0 gt 
      { gsave c i a cvs dup stringwidth pop 
        /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse 
	h 0 gt {b neg}{z1} ifelse 
        rmoveto show grestore } if 
    dup t f moveto 
    g t L stroke 
    /i i w add def 
  } repeat 
  grestore 
  gsave 
  n 0 gt
  % DG/SR modification begin - Nov. 7, 1997 - Patch 1
  %{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
    { 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
  % DG/SR modification end
    { 2 setlinecap } ifelse 
  /i y1 def 
  /f x1 dx mul n 0 gt { dx n div 2 div w mul sub } if def 
  /g x2 dx mul n 0 gt { dx n div 2 div w mul add } if def 
  y2 y1 sub h mul 1 add dup 1000 gt { pop 1000 } if 
  { newpath i dy mul dup x0 exch moveto 
    b 0 gt { gsave c i a cvs dup stringwidth pop 
      /z2 ED 
      w 0 gt {z1 z2 add neg} {z1} ifelse 
      h 0 gt {z1} {b neg} ifelse 
      rmoveto show grestore } if 
    dup f exch t moveto 
    g exch t L stroke 
    /i i h add def 
  } repeat 
  grestore 
} def
%
/ArcArrow { 
  /d ED /b ED /a ED 
  gsave 
  newpath 0 -1000 moveto clip 
  newpath 
  0 1 0 0 b 
  grestore 
  c mul 
  /e ED 
  pop pop pop r a e d PtoC y add exch x add
  exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
  mul neg d 
} def
%
%
/isbool { type (booleantype) cvn eq } def
%
/Ellipse { 
  dup isbool { /MoveToStart ED }{ /MoveToStart false def }ifelse  % false or true
  /rotAngle ED
  /mtrx CM def 
  T 
  rotAngle rotate
  scale 
  MoveToStart { 0 0 moveto 1 0 rmoveto } if  % move to the start position
  0 0 1 5 3 roll arc 
  mtrx setmatrix 
} def
%
/ArcAdjust { %%%% Vincent Guirardel
% given a target length (targetLength) and an initial angle (angle0) [in the stack],
% let  M(angle0)=(rx*cos(angle0),ry*sin(angle0))=(x0,y0).
% This computes an angle t such that (x0,y0) is at distance 
% targetLength from the point M(t)=(rx*cos(t),ry*sin(t)).
% NOTE: this an absolute angle, it does not have to be added or substracted to angle0
% contrary to TvZ's code.
% To achieve, this, one iterates the following process: start with some angle t,
% compute the point M' at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)].
% Now take t' (= new angle) so that (0,0) M(t') and M' are aligned.
%
% Another difference with TvZ's code is that we need d (=add/sub) to be defined.
% the value of d = add/sub is used to know on which side we have to move.
% It is only used in the initialisation of the angle before the iteration.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Input stack:  1: target length 2: initial angle
% variables used : rx, ry, d (=add/sub)
%
  /targetLength ED /angle0 ED
  /x0 rx angle0 cos mul def
  /y0 ry angle0 sin mul def
% we are looking for an angle t such that (x0,y0) is at distance targetLength 
% from the point M(t)=(rx*cos(t),ry*sin(t)))
%initialisation of angle (using 1st order approx = TvZ's code)
  targetLength 57.2958 mul
  angle0 sin rx mul dup mul
  angle0 cos ry mul dup mul
  add sqrt div 
% if initialisation angle is two large (more than 90 degrees) set it to 90 degrees
% (if the ellipse is very curved at the point where we draw the arrow, %
% the value can be much more than 360 degrees !)
% this should avoid going on the wrong side (more than 180 degrees) or go near
% a bad attractive point (at 180 degrees)
  dup 90 ge { pop 90 } if 
  angle0 exch d % add or sub
% maximum number of times to iterate the iterative procedure:
% iterative procedure: takes an angle t on top of stack, computes a 
% better angle (and put it on top of stack)
  30 { dup
% compute distance D between (x0,y0) and M(t)
    dup cos rx mul x0 sub dup mul exch sin ry mul y0 sub dup mul add sqrt
% if D almost equals targetLength, we stop
    dup targetLength sub abs 1e-5 le { pop exit } if
% stack now contains D t
% compute the point M(t') at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)]:
% M(t')= ( (x(t)-x0)*targetLength/d+x0 , (y(t)-y0)*targetLength/d+y0 )
    exch dup cos rx mul x0 sub  exch sin ry mul y0 sub
% stack contains:  y(t)-y0, x(t)-x0, d
    2 index Div targetLength mul y0 add ry Div exch
    2 index Div targetLength mul x0 add rx Div
% stack contains x(t')/rx , y(t')/ry , d
% now compute t', and remove D from stack
    atan exch pop
  } repeat
% we don't look at what happened... in particular, if targetLength is greater 
% than the diameter of the ellipse...
% the final angle will be around /angle0 + 180. maybe we should treat this pathological case...
% after iteration, stack contains an angle t such that M(t) is the tail of the arrow
% to give back the result as a an angle relative to angle0 we could add the following line:
% angle0 sub 0 exch d
%
% begin bug fix 2006-01-11
% we want to adjust the new angle t' by a multiple of 360 so that  | t'-angle0 | <= 180
%(we don't want to make the ellipse turn more or less than it should)...
dup angle0 sub dup abs 180 gt { 180 add 360 div floor 360 mul sub } { pop } ifelse
% end bug fix
} def
%
/EllipticArcArrow {
  /d ED      % is add or sub
  /b ED      % arrow procedure
  /a1 ED     % angle
  gsave
  newpath
  0 -1000 moveto
  clip                  % Set clippath far from arrow.
  newpath
  0 1 0 0 b             % Draw arrow to determine length.
  grestore
% Length of arrow is on top of stack. Next 3 numbers are junk.
%
  a1 exch ArcAdjust   % Angular position of base of arrow.
  /a2 ED
  pop pop pop
  a2 cos rx mul xOrig add % hv 2007-08-29   x->xOrig
  a2 sin ry mul yOrig add % hv 2007-08-29   y->yOrig
  a1 cos rx mul xOrig add % 
  a1 sin ry mul yOrig add % 
% Now arrow tip coor and base coor are on stack.
  b pop pop pop pop       % Draw arrow, and discard coordinates.
  a2 CLW 8 div
% change value of d (test it by looking if  `` 1 1 d '' gives 2 or not )
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse
  ArcAdjust
% resets original value of d
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse  % Adjust angle to give overlap.
} def
%%------------------ tvz/DG/hv (2004-05-10) end -------------------%%
%
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
%
/RotBegin { 
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
  /a ED 
  a Rot /RAngle [ RAngle dup a add ] cvx def 
} def
%
/RotEnd { 
  /TMatrix [ TMatrix setmatrix ] cvx def 
  /RAngle [ RAngle pop ] cvx def 
} def
%
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/Uput {
  /a ED 
  add 2 div /h ED 2 
  div /w ED 
  /s a sin def 
  /c a cos def 
  /b s abs c abs 2 copy gt dup 
    /q ED 
    { pop } { exch pop } ifelse def 
  /w1 c b div w mul def 
  /h1 s b div h mul def 
  q { w1 abs w sub dup c mul abs }{ h1 abs h sub dup s mul abs } ifelse 
} def
%
/UUput { 
  5 dict begin
  /z ED 
  abs /y ED 
  /x ED 
  q { x s div c mul abs y gt }{ x c div s mul abs y gt } ifelse 
    { x x mul y y mul sub z z mul add sqrt z add } 
    { q { x s div } { x c div } ifelse abs 
    } ifelse 
  a PtoC 
  h1 add exch 
  w1 add exch 
  end
} def
%
end
%-----------------------------------------------------------------------------%
%
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-algparser.pro 0 0
% $Id: pst-algparser.pro 919 2014-05-19 18:42:47Z herbert $
%%
%% PostScript prologue for PSTricks algorithm parser
%% Version 0.07, 2014/08/01
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%%-----------------------------------------------------------------------------%
%
%currentdict /Pi known not { /Pi 3.14159265359 def } if
%
/AlgParser { tx@AlgToPs begin AlgToPs end } def  % Dominique Rodriguez
/I2P { AlgParser cvx exec } def  % Infix to Postfix
%
/tx@CoreAnalyzerDict 100 dict def tx@CoreAnalyzerDict begin
%
% PS ANALYZER FOR ALGEBRAIC EXPRESSION V1.13
%
% 09/2011 DR factorial with ! added
%
% E->T|E+T
% T->FS|T*FS
% FS -> F | +FS | -FS
% F->P|F^SF|P!
% P->(E)|literal
% literal->number|var|var[E]|func(params)
% params->E|E,param
% number->TOBEFINISHED
%
%% E expression, T term, SF signed factor, F factor, P power
%
%% parser
%
%% str
%
%% C->E<condition_operators>E
%% STR index -> STR index+lenExpr
/AnalyzeCond { AnalyzeExpr ReadCondOp AnalyzeExpr EvalCondOp  } def
%
%% analyze Expression List (separator , or | )
%% STR index -> STR index+lenExpr
%% /AnalyzeListOfE {
%%   { NextNonBlankChar pop AnalyzeExpr%%dup Strlen eq { exit } if NextNonBlankChar
%%     NextNonBlankChar dup 0 eq { pop exit } if
%%     dup 44 ne 1 index 124 ne and { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse } if
%%     pop NextNonBlankChar dup 0 eq { exit } if 124 ne { PROBLEMCONTACTBILLOU } if 1 add NextNonBlankChar 0 eq {toto} if } loop
%%   AnalyzeListOfEPostHook
%% } def
/AnalyzeListOfE {
  /NotFirst false def
  { NextNonBlankChar pop AnalyzeExpr
    NotFirst { EvalListOfExpr } { /NotFirst true def } ifelse
    dup Strlen eq { exit } if NextNonBlankChar
    dup 44 ne 1 index 124 ne and
    { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse }
    if  pop 1 add } loop
  AnalyzeListOfEPostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% E->T|E+T
%% STR index -> STR index+lenExpr
/AnalyzeExpr {
  AnalyzePreHook AnalyzeTerm IsEndingExpr
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeTerm PreEvalHook EvalAddSub IsEndingExpr { pop exit } if } loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% T->FS|T*FS
%% STR index
/AnalyzeTerm {
  AnalyzePreHook AnalyzeSignedFactor IsEndingTerm
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor PreEvalHook EvalMulDiv IsEndingTerm { pop exit } if} loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% FS -> F | +FS | -FS
%% STR index
/AnalyzeSignedFactor {
  AnalyzePreHook 2 copy get dup IsUnaryOp
  { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor EvalUnaryOp }
  { pop AnalyzeFactor }
  ifelse AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% F->P|F^P|P!
%% STR index
/AnalyzeFactor {
  AnalyzePreHook AnalyzePower IsEndingFactor
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { dup 33 eq%% is there a ! DR 09/2011
      { pop 1 add NextNonBlankChar pop EvalFactorial }
      { RollOp 1 add NextNonBlankChar pop AnalyzePower PreEvalHook EvalPower }
      ifelse
      IsEndingFactor { pop exit } if } loop }
  ifelse  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% P->(E)|literal
%% STR index
/AnalyzePower {
  %% depending of first char either a number, or a literal
  2 copy get dup 40 eq%%an open par
  { pop 1 add NextNonBlankChar pop AnalyzeExpr 1 add NextNonBlankChar pop }
  { AnalyzeLiteral }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index STR[index] -> STR index
%/AnalyzeLiteral { IsNumber { EvalNumber } { EvalLiteral } ifelse } def
/AnalyzeLiteral { dup IsUnaryOp exch IsNumber or { EvalNumber } { EvalLiteral } ifelse } def%%dr 09102006
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% recognize + or -
%% chr -> T/F
/IsUnaryOp { dup 43 eq exch 45 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsNumber { dup 48 ge exch dup 57 le 3 -1 roll and exch 46 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadNumber {
  exch dup 3 -1 roll dup 3 1 roll
  %%read mantissa
  { 1 add  2 copy dup Strlen eq { pop pop 0 exit } if get dup IsNumber not { exit } if pop } loop
  dup 101 eq exch 69 eq or
  %%% there is a "e" or "E" -> read exponant
  { 1 add 2 copy get dup IsUnaryOp
    { pop 1 add 2 copy get } if
    { IsNumber not { exit } if 1 add 2 copy get } loop }
  if
  dup 4 1 roll
  3 -1 roll exch 1 index sub getinterval
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsCondOp { dup 30 eq exch dup 60 ge exch 62 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadCondOp {
  NextNonBlankChar 1 index 4 1 roll
  { IsCondOp not { exit } if 1 add  2 copy get } loop
  2 copy 5 -1 roll
  exch 1 index sub getinterval 3 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can contain only : 0123456789.
%% chr -> T/F
/IsLiteral {%
  dup 48 ge exch dup  57 le 3 -1 roll and exch
  dup 65 ge exch dup  90 le 3 -1 roll and 3 -1 roll or exch
  dup 97 ge exch     122 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can be of the form [a-zA-Z][a-zA-Z0-9]*\(\((Expression)\)|\(\[Expression\]\)\)?
%% STR index -> literal STR index' nextchr
/ReadLiteral {
  exch dup 3 -1 roll dup 3 1 roll
  %%read literal core
  { 2 copy dup Strlen eq { pop pop 0 exit } if get dup IsLiteral not { exit } if pop 1 add } loop
  4 1 roll dup 5 1 roll 3 -1 roll exch 1 index sub getinterval 4 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a clpar
%% STR index -> STR index STR[index] T/F
/IsEndingExpr {%
  2 copy dup Strlen eq
  %% if end of str is reached -> end !
  { pop pop 0 true }
  %% ending chr -> clpar, comma, |, <, >, =, !,
  {get dup  dup  41 eq
       exch dup 124 eq
       exch dup  93 eq
       exch dup  44 eq
       exch dup  30 eq
       exch dup  60 ge exch 62 le and or or or or or}
  ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a +-
%% STR index -> STR index STR[index] T/F
/IsEndingTerm { IsEndingExpr { true } { dup dup 43 eq exch 45 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or */
%% STR index -> STR index STR[index] T/F
/IsEndingFactor { IsEndingTerm { true } { dup dup 42 eq exch 47 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or ^
%% STR index -> STR index STR[index] T/F
/IsEndingPower { IsEndingFactor { true } { dup 94 eq } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index STR[index]
/NextNonBlankChar { { dup Strlen eq { 0 exit } if 2 copy get dup neBlkChar { exit } if pop 1 add } loop } bind def
/neBlkChar { dup 32 ne exch dup 10 ne exch 9 ne and and } bind def
%%%%%%%%%%%%%%%%%%%%%%%%
%% DEBUG
/BRK {false} def
/BRKtrue {/BRK true def} def
/BRKStop {BRK {BRKtoto} if } def
/BRKEvalStop {BRK exch if } def
/BRKBRK2true {BRK {BRK2true} if } def
/BRK2 {false} def
/BRK2true {/BRK2 true def} def
/BRK2Stop {BRK2 {BRK2toto} if } def/BRK {false} def
end
%
%-------------------------------------------------------------------------------%
%
/tx@AlgToPs 12 dict def tx@AlgToPs begin
%
%% algExpr -> PSVector
/AlgToPs { tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE pop pop EndingSequence end } def
/EndingSequence { ExpressionVector aload length /end cvx exch 1 add array astore } def
/InitParser { /ExpressionVector [ /tx@AddMathFunc cvx /begin cvx ] def dup length /Strlen exch def 0 } def
/Strlen 0 def
/EvalListOfExpr {} def%
/EvalNumber {%
    ReadNumber  cvr /ExpressionVector ExpressionVector aload length dup 3 add -1 roll cvx
    exch 1 add array astore def NextNonBlankChar pop } def
/EvalAddSub {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  43 eq { /add } { /sub } ifelse cvx exch 1 add array astore def
} def
/EvalMulDiv {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  42 eq { /mul } { /div } ifelse cvx exch 1 add array astore def
} def
/EvalPower {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  pop /exp cvx exch 1 add array astore def
} def
/EvalFactorial {% DR 09/2011
  /ExpressionVector ExpressionVector aload length
  /fact cvx exch 1 add array astore def
} def
/EvalLiteral {%
  ReadLiteral
  dup 40 eq%%% there is an open par -> function call
  { pop 2 index
    dup (Sum) eq { EvalSum }
    { dup (IfTE) eq { EvalCond }
      { dup (Derive) eq { pop EvalDerive }
	{ pop 1 add NextNonBlankChar pop AnalyzeListOfE 2 index TrigoFunc
          /ExpressionVector ExpressionVector aload length dup 5 add -1 roll cvn cvx
	  exch 1 add array astore def 1 add NextNonBlankChar pop } ifelse } ifelse} ifelse }
  { /ExpressionVector ExpressionVector aload length dup 6 add -1 roll cvn cvx exch 1 add array astore def
    dup 91 eq%%% there is an open bracket -> vector element
    { pop 1 add NextNonBlankChar pop AnalyzeExpr
      /ExpressionVector ExpressionVector aload length /cvi cvx exch /get cvx exch 2 add array astore def 1 add }
    { pop NextNonBlankChar pop }
    ifelse}
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% the derive function : Derive(n,f(x))
%% firstparindex lastparindex ->
/EvalDerive {
  %% manage the function descripiton
  1 add ReadNumber 3 1 roll NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  1 add NextNonBlankChar pop
  3 -1 roll cvi
  dup 0 eq
  { pop AnalyzeExpr 3 -1 roll pop 1 add }
  { 1 sub 3 1 roll (x)  exch tx@Derive begin DeriveIndexed end 4 -1 roll
    { (x) tx@Derive begin Derive end } repeat
    ExpressionVector exch /ExpressionVector [] def
    AlgToPs aload length
    /ExpressionVector 1 index 3 add -1 roll aload length dup 3 add -1 roll  /l2 exch def /l1 exch def
    l1 l2 add 1 add l2 neg roll l1 l2 add array astore def 3 -1 roll pop 1 add
    1 index length /Strlen exch def } ifelse
} def
/EvalSum {%
  pop 1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  /ExpressionVector ExpressionVector aload length dup 7 add -3 roll 0 4 1 roll
  5 -1 roll 4 add array astore def
  %% keep ExpressionVector for later and create a new one for internal Sum computation
  ExpressionVector 3 1 roll /ExpressionVector [ 6 -1 roll cvn /exch cvx /def cvx ] def
  1 add NextNonBlankChar pop AnalyzeExpr
  %% add each term
  /ExpressionVector ExpressionVector aload length 1 add /add cvx exch array astore def
  /ExpressionVector 4 -1 roll aload length ExpressionVector cvx /for cvx 3 -1 roll 2 add
  array astore def 3 -1 roll pop 1 add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length 3.1415926 /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
/EvalCond {%
  pop 1 add AnalyzeCond NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  ExpressionVector 3 1 roll /ExpressionVector [] def
  1 add AnalyzeExpr ExpressionVector 3 1 roll /ExpressionVector [] def
  NextNonBlankChar 44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add AnalyzeExpr
  NextNonBlankChar 41 ne { ANALYZER_ERROR_missing_ending parenthesis_in_IfTE } if
  ExpressionVector
  /ExpressionVector 6 -1 roll aload length dup
  6 add -1 roll cvx exch dup 4 add -1 roll cvx /ifelse cvx 3 -1 roll 3 add array astore def
  1 add 3 -1 roll pop
} def
%% CondOp STR index
/EvalCondOp {%
  3 -1 roll
  dup (=) eq  { /eq } {%
  dup (<) eq  { /lt } {%
  dup (>) eq  { /gt } {%
  dup (>=) eq { /ge } {%
  dup (<=) eq { /ge } {%
  dup (!=) eq { /ne } { ERROR_non_valid_conditional_operator }
  ifelse } ifelse } ifelse } ifelse } ifelse } ifelse
  cvx exch pop
  /ExpressionVector ExpressionVector aload length dup 3 add -1 roll exch 1 add array astore def } def
/EvalUnaryOp {
  3 -1 roll 45 eq { /ExpressionVector ExpressionVector aload length /neg cvx exch 1 add array astore def } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook {} bind def
/PreEvalHook {} bind def
/AnalyzeListOfEPostHook {} bind def
/AnalyzePostHook {} def
/RollOp { 3 1 roll } bind def
end   %tx@CoreAnalyzerDict
%
%--------------------------------------------------------------------%
%
/tx@Derive 41 dict def tx@Derive begin
%%increase ^^ for each function added
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable -> PSVector
/Derive {
  10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE end
} def
/Strlen 0 def
/InitParser { dup length /Strlen exch def 0 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable index -> PSVector
/DeriveIndexed {%
  3 1 roll 10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser pop 4 -1 roll AnalyzeExpr 4 -2 roll pop pop 4 -2 roll exch pop end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u,v)'=-(u',v')
/EvalListOfExpr {%
  4 2 roll 2 copy 9 -1 roll dup length 4 1 roll putinterval add AddPipe
           2 copy 7 -1 roll dup length 4 1 roll putinterval add
  6 -2 roll pop pop
  2 copy pop 0 6 2 roll GetIntervalNewStr 5 1 roll 2 copy 0 exch getinterval 6 1 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (-u)'=-(u')
/EvalUnaryOp {
  4 -2 roll 4 index (0) eq
  { (0) StrConcat 7 -1 roll pop }
  { 7 -1 roll 45 eq
    { AddSub AddOpPar true } { false } ifelse
    3 1 roll 5 index StrConcat 3 -1 roll { AddClPar } if } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  7 -2 roll pop pop 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (number)'=0
/EvalNumber { ReadNumber (0) 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u+v)'=u'+v'
/EvalAddSub {%
  7 index dup (0) eq
  { pop true }%% du=0 nothing added
  { dup length exch 5 index 5 index 3 -1 roll putinterval 4 -1 roll add 3 1 roll false }
  ifelse
  5 index dup (0) eq
  { pop { (0) } { 4 -2 roll 2 copy pop 0  6 2 roll GetIntervalNewStr } ifelse }%%dv=0
  { exch
    { 5 -2 roll 7 index 45 eq { AddSub } if false } %%nothing yet added
    { 5 -2 roll 7 index 43 eq%%something yet added
      { AddAdd false } { AddSub AddOpPar true } ifelse }
    ifelse 11 1 roll
    3 -1 roll StrConcat 10 -1 roll { AddClPar } if
    2 copy pop 0 6 2 roll GetIntervalNewStr }
  ifelse
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)' or (u/v)'
/EvalMulDiv { 6 index 42 eq {EvalMul} {EvalDiv} ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)'=u'*v+u*v'
/EvalMul {%
  4 -2 roll 7 index dup (0) eq
  { pop false }%%du=0
  { (1) eq%%du=1
    { false }
    { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
    3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if
    true }%%du!=0
  ifelse
  5 1 roll 5 index (0) eq
  { 5 -1 roll not { (0) StrConcat } if }%%dv=0
  { 5 -1 roll { AddAdd } if
    4 index (1) eq
    { 8 index StrConcat }
    { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
    ifelse
  }%%dv!=0
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u/v)'=(u'*v-u*v')/v^2
/EvalDiv {%
  4 -2 roll
  4 index (0) eq%%dv=0 -> u'/v
  { 7 index (0) eq { (0) StrConcat } { AddOpPar 7 index StrConcat AddClPar AddDiv 5 index StrConcat } ifelse }
  { 7 index dup (0) eq
    { pop }%%du=0
    { (1) eq%%du=1
      { false }
      { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
      3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if}%%du!=0
    ifelse
      AddSub
      4 index (1) eq
      { 8 index StrConcat }
      { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
      ifelse
    %}%%dv!=0
    2 copy GetIntervalNewStr 3 1 roll pop 0 AddOpPar 3 -1 roll StrConcat AddClPar
    AddDiv AddOpPar 5 index StrConcat AddClPar 2 copy (^2) putinterval 2 add }
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str1 index str2 -> str1 index
/StrConcat { dup length 4 2 roll 2 copy 6 -1 roll putinterval 3 -1 roll add } bind def
/GetIntervalNewStr { 0 exch getinterval dup length string copy } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u^v)'=(u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
/EvalPower {%
  4 -2 roll 7 index (0) eq
  {%%if du=0 then (u^v)'=v'ln(u)u^v
    4 index (0) eq
    { (0) StrConcat }%%if dv=0 then (u^v)'=0
    { 4 index (1) ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if
      8 index (e) ne { (ln\() StrConcat 8 index StrConcat (\)*) StrConcat } if
      AddOpPar 8 index StrConcat (\)^\() StrConcat 5 index StrConcat AddClPar } ifelse
  }
  {%%du!=0
    4 index (0) eq
    {%%if dv=0 then (u^v)'=vu'u^(v-1)
      5 index dup IsStrNumber
      { dup (0) eq
        { StrConcat }
        { dup dup (1) eq exch (1.0) eq or
          { StrConcat  }
	  { StrConcat
	    7 index dup (1) ne exch (1.0) ne and%%%dr 09102006 insert du if <> 1
	    { (*\() StrConcat 7 index StrConcat (\)) StrConcat } if%%%dr 09102006
            (*\() StrConcat 8 index StrConcat (\)) StrConcat
            5 index  dup dup (2) eq exch (2.0) eq or
	    { pop } { cvr 1 sub 20 string cvs 3 1 roll (^) StrConcat 3 -1 roll StrConcat } ifelse } ifelse } ifelse }
      { pop AddOpPar 5 index StrConcat (\)*\() StrConcat 8 index StrConcat (\)^\() StrConcat
        5 index StrConcat (-1\)) StrConcat } ifelse
    }
    {%%if dv!=0 and du!=0 then (u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
      7 index (1) ne { AddOpPar 7 index StrConcat (\)*) StrConcat } if
      AddOpPar 5 index StrConcat (\)*\() StrConcat
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (-1\)+\() StrConcat
      4 index (1) ne { 4 index StrConcat (\)*\() StrConcat } if
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (\)*ln\() StrConcat
      8 index StrConcat AddClPar
    } ifelse
  } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for factorial ! only cst => null derivative
/EvalFactorial {% DR 09/2011
  4 index (0) eq
  { (0) mark 8 -2 roll  cleartomark 2 index 7 index dup 4 index exch sub getinterval exch 6 2 roll }
  { DERIVATIVE_ENGINE_ERROR_no_variable_in_factorial } ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str -> true/false
/IsStrNumber {%
  true exch
  { dup 48 lt exch dup 57 gt 3 -1 roll or
    exch dup 46 ne%%.
    exch dup 43 ne%%+
    exch 45 ne%%-
    and and and { pop false } if } forall
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalLiteral {%
  ReadLiteral dup 40 eq%%% there is an open par -> function call
  { pop (EvalFunc_             ) 9 4 index StrConcat 0 exch getinterval cvn cvx exec }
  { dup 91 eq%%% there is an open bracket -> vector element
    { DERIVATIVE_ENGINE_ERROR_vector_not_yet_implemented }
    { pop EvalVariable }
    ifelse }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% first last parpos Expr[first:parpos-1] ->
/EvalVariable { 2 index Variable eq { (1) } { (0) } ifelse 4 -1 roll exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (f(u))'=u'f'(u)
/EvalFunc {
  4 2 roll 4 index (1) ne
  { AddOpPar 4 index StrConcat (\)*) StrConcat } if
  (Eval             ) 4 8 index StrConcat 0 exch getinterval cvn cvx exec
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Func derivative -> Eval<func>
/EvalFunc_sin {%
  PreCommonFunc
  { (cos\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_cos {%
  PreCommonFunc
  { (\(-sin\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_tan {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/cos\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_asin {%
  PreCommonFunc
  { (1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_acos {%
  PreCommonFunc
  { (-1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_atg {%
  PreCommonFunc
  { (1/\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_floor {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ln {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_exp {%
  PreCommonFunc
  {  (exp\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_EXP {%
  PreCommonFunc
  {  (EXP\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_sqrt {%
  PreCommonFunc
  { dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\(2*sqrt\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Fact {%
  PreCommonFunc { DERIVATIVE_ENGINE_ERROR_no_variable_expression_in_Fact } if
  PostCommonFunc } def
/EvalFunc_sh {%
  PreCommonFunc
  { (ch\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ch {%
  PreCommonFunc
  { (sh\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_th {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/ch\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argsh {%
  PreCommonFunc
  { (1/sqrt\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argch {%
  PreCommonFunc
  { (1/sqrt\(\() StrConcat 5 index StrConcat (\)^2-1\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argth {%
  PreCommonFunc
  { (1/\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/PreCommonFunc {
  1 add NextNonBlankChar pop 3 -1 roll 5 1 roll AnalyzeExpr 1 add NextNonBlankChar pop
  4 2 roll 4 index (0) eq
  { (0) StrConcat false }
  { 4 index (1)  ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if true } ifelse
} def
/PostCommonFunc {
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
/EvalFunc_Derive {%
  1 add ReadNumber cvi 1 add dup cvr log 1 add cvi string cvs
  4 -1 roll pop 5 1 roll 1 add NextNonBlankChar pop AnalyzeExpr 1 add
  4 -2 roll (Derive\() StrConcat 7 -1 roll StrConcat (,) StrConcat 6 -1 roll StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr 6 -1 roll pop 2 index 6 index dup 4 index exch sub getinterval
  exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_Sum {%
  1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop 3 -1 roll pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_third_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_fourth_comma_in_Sum } if
  1 add NextNonBlankChar pop dup 6 1 roll 3 -1 roll pop AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 8 index dup 9 index exch sub getinterval StrConcat
  4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_IfTE {%
  3 -1 roll pop 1 add NextNonBlankChar pop SkipCond
  NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  1 add NextNonBlankChar pop dup 5 1 roll
  AnalyzeExpr NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add NextNonBlankChar pop
  AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 10 index dup 11 index exch sub getinterval StrConcat
  6 index StrConcat (,) StrConcat 4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% advance in str until a comma is found (no error detection!)
%% str index -> str index'
/SkipCond { { 1 add 2 copy get 44 eq {exit } if } loop } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length Pi /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for condition....
/EvalCondOp { 3 -1 roll pop } bind def
/PutIntervalOneAdd {putinterval 1 add} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddOpPar {2 copy (\() PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add close parenthesis in string at the given index
%% str index -> str index+1
/AddClPar {2 copy (\)) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add 0 in string at the given index
%% str index -> str index+1
/AddZero {2 copy (0) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddMul {2 copy (*) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddDiv {2 copy (/) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a plus sign in string at the given index
%% str index -> str index+1
/AddAdd {2 copy (+) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a minus sign in string at the given index
%% str index -> str index+1
/AddSub {2 copy (-) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a pipe sign in string at the given index
%% str index -> str index+1
/AddPipe {2 copy (|) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook { dup 5 1 roll } bind def
/PreEvalHook {} def
/AnalyzePostHook { 7 -1 roll pop } bind def
/AnalyzeListOfEPostHook { 6 -1 roll mark 6 1 roll cleartomark } bind def
/RollOp { 5 1 roll } bind def
end%%%tx@CoreAnalyzerDict
/tx@AddMathFunc 12 dict def tx@AddMathFunc begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% NEW FUNC
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% function arcsine in radians asin(x)=atan(x/sqrt(1-x^2))
%% x -> theta
/asin {%
  dup abs 1 gt { EQDFasinrangeerror  } if
  dup dup dup mul 1 exch sub sqrt atan exch 0 lt { 360 sub } if DegtoRad
} def
%% function arccosine in radians acos(x)=atan(sqrt(1-x^2)/x)
%% x -> theta
/acos {%
  dup abs 1 gt { EQDFacosrangeerror  } if
  dup dup mul 1 exch sub sqrt exch atan DegtoRad
} def
%% function arctangent in radians
%% x -> theta
/atg { 1 atan dup 90 gt { 360 sub } if DegtoRad } bind def
%% HYPERBOLIC FUNCTIONS
/sh { dup Ex exch neg Ex sub 2 div } def
/ch { dup Ex exch neg Ex add 2 div } def
/th { dup sh exch ch div } def
/Argsh { dup dup mul 1 add sqrt add ln } def
/Argch { dup dup mul 1 sub sqrt add ln } def
/Argth { dup 1 add exch 1 exch sub div ln 2 div } def
%% modified exponential funtion for 0
%% x n -> x^n
/Exp { dup 0 eq { pop pop 1 } { exp } ifelse } bind def
%% modified exponential funtion for 0
%% x -> e^x
/Ex { Euler exch exp } bind def
%%
%% factorial function
%% n -> n!
/Fact { 1 exch 2 exch 1 exch { mul } for } bind def
/fact { Fact } bind def
/! { Fact } bind def
end
%
% END pst-algparser.pro

%%EndProcSet
%%BeginProcSet: pst-tools.pro 0 0
% $Id: pst-tools.pro 842 2013-10-26 10:25:41Z herbert $
%
%% PostScript tools prologue for pstricks.tex.
%% Version 0.04, 2013/10/26
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
/Pi2 1.57079632679489661925640 def
/factorial { % n on stack, returns n! 
  dup 0 eq { 1 }{ 
    dup 1 gt { dup 1 sub factorial mul } if }
  ifelse } def 
%
/MoverN { % m n on stack, returns the binomial coefficient m over n
  2 dict begin
  /n exch def /m exch def
  n 0 eq { 1 }{
    m n eq { 1 }{
      m factorial n factorial m n sub factorial mul div } ifelse } ifelse 
  end
} def
%
/ps@ReverseOrderOfPoints { % on stack [P1 P2 P3 ...Pn]=>[Pn,Pn-1,...,P2,P1]
  5 dict begin       % all local
  aload length /n ED % number of coors
  n 2 div cvi /m ED  % number of Points
  /n1 n def
  m { n1 2 roll /n1 n1 2 sub def } repeat
  n array astore
  end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% subroutines for complex numbers, given as an array [a b] 
% which is a+bi = Real+i Imag
%
/cxadd {		% [a1 b1] [a2 b2] = [a1+a2 b1+b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  3 -1 roll		% [a2 b2] a2 [a1 b1]
  dup 0 get		% [a2 b2] a2 [a1 b1] a1
  3 -1 roll		% [a2 b2] [a1 b1] a1 a2
  add			% [a2 b2] [a1 b1] a1+a2
  3 1 roll		% a1+a2 [a2 b2] [a1 b1]
  1 get			% a1+a2 [a2 b2] b1
  exch 1 get		% a1+a2 b1 b2
  add 2 array astore
} def
%
/cxneg {		% [a b]
  dup 1 get		% [a b] b
  exch 0 get		% b a
  neg exch neg		% -a -b
  2 array astore
} def
%
/cxsub { cxneg cxadd } def  % same as negative addition
%
% [a1 b1][a2 b2] = [a1a2-b1b2 a1b2+b1a2] = [a3 b3]
/cxmul {		% [a1 b1] [a2 b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  exch 1 get		% [a1 b1] a2 b2
  3 -1 roll		% a2 b2 [a1 b1]
  dup 0 get		% a2 b2 [a1 b1] a1
  exch 1 get		% a2 b2 a1 b1
  dup			% a2 b2 a1 b1 b1
  5 -1 roll dup		% b2 a1 b1 b1 a2 a2
  3 1 roll mul		% b2 a1 b1 a2 b1a2
  5 -2 roll dup		% b1 a2 b1a2 b2 a1 a1
  3 -1 roll dup		% b1 a2 b1a2 a1 a1 b2 b2
  3 1 roll mul		% b1 a2 b1a2 a1 b2 a1b2
  4 -1 roll add		% b1 a2 a1 b2 b3
  4 2 roll mul		% b1 b2 b3 a1a2
  4 2 roll mul sub	% b3 a3
  exch 2 array astore
} def
%
% [a b]^2 = [a^2-b^2 2ab] = [a2 b2]
/cxsqr {		% [a b]   square root
  dup 0 get exch 1 get	% a b
  dup dup mul		% a b b^2
  3 -1 roll		% b b^2 a
  dup dup mul 		% b b^2 a a^2
  3 -1 roll sub		% b a a2
  3 1 roll mul 2 mul	% a2 b2	
  2 array astore
} def
%
/cxsqrt {		% [a b]
%  dup cxnorm sqrt /r exch def
%  cxarg 2 div RadtoDeg dup cos r mul exch sin r mul cxmake2 
  cxlog 		% log[a b]
  2 cxrdiv 		% log[a b]/2
  aload pop exch	% b a
  2.781 exch exp	% b exp(a)
  exch cxconv exch	% [Re +iIm] exp(a)
  cxrmul		%
} def
%
/cxarg { 		% [a b] 
  aload pop 		% a b
  exch atan 		% arctan b/a
  DegtoRad 		% arg(z)=atan(b/a)
} def
%
% log[a b] = [a^2-b^2 2ab] = [a2 b2]
/cxlog {		% [a b]
  dup 			% [a b][a b]
  cxnorm 		% [a b] |z|
  log 			% [a b] log|z|
  exch 			% log|z|[a b]
  cxarg 		% log|z| Theta
  cxmake2 		% [log|z| Theta]
} def
%
% square of magnitude of complex number
/cxnorm2 {		% [a b]
  dup 0 get exch 1 get	% a b
  dup mul			% a b^2
  exch dup mul add	% a^2+b^2
} def
%
/cxnorm {		% [a b]
  cxnorm2 sqrt
} def
%
/cxconj {		% conjugent complex
  dup 0 get exch 1 get	% a b
  neg 2 array astore	% [a -b]
} def
%
/cxre { 0 get } def	% real value
/cxim { 1 get } def	% imag value
%
% 1/[a b] = ([a -b]/(a^2+b^2)
/cxrecip {		% [a b]
  dup cxnorm2 exch	% n2 [a b]
  dup 0 get exch 1 get	% n2 a b
  3 -1 roll		% a b n2
  dup			% a b n2 n2
  4 -1 roll exch div	% b n2 a/n2
  3 1 roll div		% a/n2 b/n2
  neg 2 array astore
} def
%
/cxmake1 { 0 2 array astore } def % make a complex number, real given
/cxmake2 { 2 array astore } def	  % dito, both given
%
/cxdiv { cxrecip cxmul } def
%
% multiplikation by a real number
/cxrmul {		% [a b] r
  exch aload pop	% r a b
  3 -1 roll dup		% a b r r
  3 1 roll mul		% a r b*r
  3 1 roll mul		% b*r a*r
  exch 2 array astore   % [a*r b*r]
} def
%
% division by a real number
/cxrdiv {		% [a b] r
  1 exch div		% [a b] 1/r
  cxrmul
} def
%
% exp(i theta) = cos(theta)+i sin(theta) polar<->cartesian
/cxconv {		% theta
  RadtoDeg dup sin exch cos cxmake2
} def

%%%%% ### bubblesort ###
%% syntax : array bubblesort --> array2 trie par ordre croissant
%% code de Bill Casselman
%% http://www.math.ubc.ca/people/faculty/cass/graphics/text/www/
/bubblesort { % on stack must be an array [ ... ]
4 dict begin
   /a exch def
   /n a length 1 sub def
   n 0 gt {
      % at this point only the n+1 items in the bottom of a remain to
      % the sorted largest item in that blocks is to be moved up into
      % position n
      n {
         0 1 n 1 sub {
            /i exch def
            a i get a i 1 add get gt {
               % if a[i] > a[i+1] swap a[i] and a[i+1]
               a i 1 add
               a i get
               a i a i 1 add get
               % set new a[i] = old a[i+1]
               put
               % set new a[i+1] = old a[i]
               put
            } if
         } for
         /n n 1 sub def
      } repeat
   } if
   a % return the sorted array
end
} def
%
/concatstringarray{  %  [(a) (b) ... (z)] --> (ab...z)  20100422
  0 1 index { length add } forall 
  string     
  0 3 2 roll      
  { 3 copy putinterval length add }forall 
  pop  
} bind def
%
/dot2comma {% on stack a string (...) 
  2 dict begin
  /Output exch def
  0 1 Output length 1 sub { 
    /Index exch def 
    Output Index get 46 eq { Output Index 44 put } if 
  } for
  Output
  end
} def
%
/rightTrim { % on stack the string and the character number to be stripped  
  /charNo exch def
  dup
  length 1 sub -1 0 { 
    /i exch def dup i get charNo ne { exit } if 
  } for
  0 i 1 add getinterval
  dup length string copy
} bind def  % leaves the stripped string on the stack

/psStringwidth /stringwidth load def
/psShow /show load def

%/stringwidth{ 32 rightTrim psStringwidth } bind def

%/show { 32 rightTrim psShow } bind def
%-----------------------------------------------------------------------------%

/pgffunctions {
    /pgfsc{}bind def% stroke color is empty by default
    /pgffc{}bind def% fill color is empty by default
    /pgfstr{stroke}bind def%
    /pgffill{fill}bind def%
    /pgfeofill{eofill}bind def%
    /pgfe{a dup 0 rlineto exch 0 exch rlineto neg 0 rlineto closepath}bind def% rectangle
    /pgfw{setlinewidth}bind def% setlinewidth
    /pgfs{save pgfpd 72 Resolution div 72 VResolution div neg scale 
      magscale{1 DVImag div dup scale}if 
      pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind def% save
    /pgfr{pgfsd restore}bind def %restore
    userdict begin%
    /pgfo{pgfsd /pgfx currentpoint /pgfy exch def def @beginspecial}bind def %open
    /pgfc{newpath @endspecial pgfpd}bind def %close
    /pgfsd{globaldict /pgfdelta /delta where {pop delta} {0} ifelse put}bind def% save delta
    /pgfpd{/delta globaldict /pgfdelta get def}bind def % put delta
    /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse % install .setopacityalpha 
    /.pgfsetfillopacityalpha{/pgffoa exch def
      /pgffill{gsave pgffoa .setopacityalpha fill 1 .setopacityalpha newpath fill grestore newpath}bind def
      /pgfeofill{gsave pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore newpath}bind def}bind def
    /.pgfsetstrokeopacityalpha{/pgfsoa exch def /pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind def}bind def
    /pgffoa 1 def
    /pgfsoa 1 def
    end
} def
%-----------------------------------------------------------------------------%
% END pst-tools.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
% $Id: pst-dots.pro 801 2013-07-09 18:10:41Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 2.02,  2009/06/16
%%
%% For distribution, see pstricks.tex.
%%
%% Timothy Van Zandt <tvz@Princeton.EDU>
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%% Modified by Etienne Riga  - Dec. 16, 1999
%% Modified by Etienne Riga  - 2005/01/01 (er)
%% to add /Diamond, /SolidDiamond and /BoldDiamond
%% Modified by Herbert Voss (hv) - 2008/04/17 
%
10 dict dup begin			% hold local
  /FontType 3 def
  /FontMatrix [.001 0 0 .001 0 0] def
%  /FontBBox [-571.5 -742.5 571.5 742.5] def % changed to next line 20060616 hv
  /FontBBox [-1000 -1000 1000 1000] def  % See end of file in /BuildGlyph
  /Encoding 256 array def
  0 1 255 {Encoding exch /.notdef put} for % fill the array with /.notdef
  Encoding				   % replace with given dot names
    dup (b) 0 get /Bullet put		   % get the numerical position of b in ASCII
%					   % and save /Bullet at this place in Encoding 
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put	% 67
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
%%%		  
    dup (k) 0 get /Asterisk put
    dup (K) 0 get /BoldAsterisk put
    dup (J) 0 get /SolidAsterisk put
    dup (h) 0 get /Hexagon put
    dup (H) 0 get /BoldHexagon put
    dup (G) 0 get /SolidHexagon put
    dup (f) 0 get /Octogon put		% 2008-04-18 hv
    dup (F) 0 get /BoldOctogon put	% 2008-04-18 hv
    dup (g) 0 get /SolidOctogon put	% 2008-04-18 hv
    dup (a) 0 get /Add put
    dup (A) 0 get /BoldAdd put 		% 65
    dup (x) 0 get /Mul put
    dup (X) 0 get /BoldMul put
    dup (m) 0 get /Oplus put
    dup (M) 0 get /BOplus put
    dup (e) 0 get /SolidOplus put
    dup (n) 0 get /Otimes put
    dup (N) 0 get /BOtimes put
    dup (E) 0 get /SolidOtimes put
    dup (i) 0 get /Bar put
    dup (I) 0 get /BoldBar put
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
%%%  
/CharProcs 47 dict def
CharProcs begin
  /CirclePath {0 0 500 0 360 arc closepath} def
  /Bullet {CirclePath fill} def
  /Circle {CirclePath .9 .9 scale CirclePath eofill} def
  /BoldCircle {CirclePath .8 .8 scale CirclePath eofill} def
  /TrianglePath {0 660 moveto -571.5 -330 lineto 571.5 -330 lineto closepath} def
  /SolidTriangle {TrianglePath fill} def
  /Triangle {TrianglePath .85 .85 scale TrianglePath eofill} def
  /BoldTriangle {TrianglePath .7 .7 scale TrianglePath eofill} def
  /SquarePath {-450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto closepath} def
  /SolidSquare {SquarePath fill} def
  /Square {SquarePath .89 .89 scale SquarePath eofill} def
  /BoldSquare {SquarePath .78 .78 scale SquarePath eofill} def
  /PentagonPath {
    -337.8 -465 moveto 337.8 -465 lineto 546.6 177.6 lineto
    0 574.7 lineto -546.6 177.6 lineto closepath
  } def
  /SolidPentagon {PentagonPath fill} def
  /Pentagon {PentagonPath .89 .89 scale PentagonPath eofill} def
  /BoldPentagon {PentagonPath .78 .78 scale PentagonPath eofill} def
%-------------- hv begin 2004/07/25   from: er 2003/03/24
  /HexagonPath {
    0 550 moveto -476 275 lineto -476 -275 lineto
    0 -550 lineto 476 -275 lineto 476 275 lineto closepath
  } def
  /SolidHexagon {HexagonPath fill} def
  /Hexagon {HexagonPath .89 .89 scale HexagonPath eofill} def
  /BoldHexagon {HexagonPath .79 .79 scale HexagonPath eofill} def
%					2008-04-18 hv
  /OctogonPath { 
     550 dup 22.5 tan mul dup neg dup add /xMove exch def 
     exch moveto 7 { xMove 0 rlineto 45 rotate } repeat closepath } def 
  /SolidOctogon { OctogonPath fill                             } def
  /Octogon {      OctogonPath .89 .89 scale OctogonPath eofill } def
  /BoldOctogon {  OctogonPath .79 .79 scale OctogonPath eofill } def
%
  /AsteriskPath {
    20 0 moveto 10 250 180 500 0 500 curveto
    -180 500 -10 250 -20 0 curveto closepath
  } def
  /Asterisk {
    AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath
    60 rotate AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath fill
  } def
%
  /Basterp {50 250 220 500 0 500 curveto -220 500 -50 250 -50 30 cos 100 mul curveto} def
  /BoldAsteriskPath {
    50 30 cos 100 mul moveto  Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp closepath
  } def
  /BoldAsterisk {BoldAsteriskPath fill} def
  /SolidAsterisk {CirclePath .9 .9 scale BoldAsteriskPath eofill} def
  /CrossPath {
    40 550 moveto -40 550 lineto -40 40 lineto -550 40 lineto
    -550 -40 lineto -40 -40 lineto -40 -550 lineto 40 -550 lineto 
    40 -40 lineto 550 -40 lineto 550 40 lineto 40 40 lineto closepath
  } def
  /BoldCrossPath {80 550 moveto -80 550 lineto -80 80 lineto -550 80 lineto
    -550 -80 lineto -80 -80 lineto -80 -550 lineto 80 -550 lineto 
    80 -80 lineto 550 -80 lineto 550 80 lineto 80 80 lineto closepath
  } def
  /Add {CrossPath fill} def
  /Mul {45 rotate CrossPath fill} def
  /BoldAdd {BoldCrossPath fill} def
  /BoldMul {45 rotate BoldCrossPath fill} def
  /Oplus {CirclePath .9 .9 scale CirclePath eofill .775 .775 scale CrossPath fill } def 
  /SolidOplus {CirclePath .775 .775 scale BoldCrossPath eofill} def 
  /BOplus {CirclePath .8 .8 scale CirclePath eofill .775 .775 scale BoldCrossPath fill} def 
  /Otimes {CirclePath .9 .9 scale CirclePath eofill 45 rotate .775 .775 scale CrossPath fill} def 
  /BOtimes {CirclePath .8 .8 scale CirclePath eofill 45 rotate .775 .775 scale BoldCrossPath fill } def 
  /SolidOtimes {CirclePath 45 rotate .775 .775 scale BoldCrossPath eofill} def 
  /BarPath {40 660 moveto -40 660 lineto -40 -660 lineto 40 -660 lineto closepath} def
  /Bar {BarPath fill} def
  /BoldBarPath {80 660 moveto -80 660 lineto -80 -660 lineto 80 -660 lineto closepath} def
  /BoldBar {BoldBarPath fill} def
  /DiamondPath {0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto 428.5 0 lineto closepath} def
  /SolidDiamond {DiamondPath fill} def
  /Diamond {DiamondPath .865 .865 scale DiamondPath eofill} def
  /BoldDiamond {DiamondPath .73 .73 scale DiamondPath eofill} def
%%%
  /.notdef { } def
end
%
/BuildGlyph {
  exch
  begin 		
%  Metrics 1 index get exec 0
    0 0
%      BBoxes 3 index get exec
    -1000 -1000 1000 1000
%     -571.5 -742.5 571.5 742.5
    setcachedevice
    CharProcs begin load exec end
  end
} def
%
/BuildChar {
  1 index /Encoding get exch get
  1 index /BuildGlyph get exec
} bind def
%
end
/PSTricksDotFont exch definefont pop
%
%% end

%%EndProcSet
%%BeginProcSet: pst-node.pro 0 0
% $Id: pst-node.pro 40 2014-07-25 06:46:27Z herbert $
%%
%% PostScript prologue for pst-node.tex.
%% Version 1.15, 2014/01/27.
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%%%%  EMPTY lines are not aload!!! Problem with pst-eps -> \par
%
%
tx@Dict begin 			% from main pstricks dict
 /T /translate load def 
 /CP /currentpoint load def 
% /startGlobal { true setglobal globaldict begin } bind def
% /endGlobal { end false setglobal } bind def
end
/tx@NodeDict 400 dict def tx@NodeDict begin
/NewNode { % on stack: { x y } boolean N@name type InitXnode 
  gsave 
  NodeScale                     % a bugfix for xelatex, it's empty for dvips
  /next exch def 		% { x y } boolean N@name type  
  dict dup 			% { x y } boolean N@name dict dict
  3 1 roll def 			% { x y } boolean dict N@name dict def
  exch { dup 3 1 roll def } if  % { x y } dict boolean
  begin 			% { x y } dict begin
  tx@Dict begin 
    STV CP T exec 		% set scaling
  end 
  /NodeMtrx CM def 		% save CM
  next 				% InitXNode
  end
  grestore 
} def
%
/InitPnode { 
  /Y ED /X ED 
  /NodePos { NodeSep Cos mul NodeSep Sin mul } def
} def
%
/InitCnode { 
  /r ED /Y ED /X ED 
  /NodePos { NodeSep r add dup Cos mul exch Sin mul } def 
} def
%
/GetRnodePos { 
  Cos 0 gt { /dx r NodeSep add def } { /dx l NodeSep sub def } ifelse 
  Sin 0 gt { /dy u NodeSep add def } { /dy d NodeSep sub def } ifelse 
  dx Sin mul abs dy 
  Cos mul abs gt { dy Cos mul Sin div dy } { dx dup Sin mul Cos Div } ifelse 
} def
%
/InitRnode { 
  /Y ED /X ED X sub /r ED /l X neg def Y add neg /d ED Y sub /u ED 
  /NodePos { GetRnodePos } def 
} def
%
/DiaNodePos { 
  w h mul w Sin mul abs h Cos mul abs add Div NodeSep add dup
  Cos mul exch Sin mul 
} def
%
/TriNodePos { 
  Sin s lt 
    { d NodeSep sub dup Cos mul Sin Div exch } 
    { w h mul w Sin mul h Cos abs mul add Div 
      NodeSep add dup Cos mul exch Sin mul 
    } ifelse 
} def
%
/InitTriNode { 
  sub 2 div exch 
  2 div exch 
  2 copy T 
  2 copy 4 index index /d ED 
  pop pop pop pop 
  -90 mul rotate 
  /NodeMtrx CM def 
  /X 0 def /Y 0 def 
  d sub abs neg /d ED 
  d add /h ED 
  2 div h mul h d sub Div /w ED 
  /s d w Atan sin def 
  /NodePos { TriNodePos } def 
} def
%
/OvalNodePos { 
  /ww w NodeSep add def 
  /hh h NodeSep add def 
  Sin ww mul Cos hh mul Atan dup cos ww mul exch sin hh mul 
} def
%
/GetCenter { begin X Y NodeMtrx transform CM itransform end } def
%
/XYPos { 
  dup sin exch cos Do 
  /Cos ED /Sin ED /Dist ED 
  Cos 0 gt 
    { Dist Dist Sin mul Cos div }
    { Cos 0 lt 
      { Dist neg Dist Sin mul Cos div neg }
      { 0 Dist Sin mul } ifelse 
    } ifelse 
  Do 
} def
%
/GetEdge {
  dup 0 eq 
    { pop begin 1 0 NodeMtrx dtransform 
      CM idtransform 
      exch atan sub 
      dup 
      sin /Sin ED 
      cos /Cos ED 
      /NodeSep ED 
      NodePos NodeMtrx dtransform CM idtransform end }
    { 1 eq {{exch}} {{}} ifelse /Do ED pop XYPos } ifelse 
} def
%
/AddOffset { 
  1 index 0 eq 
    { pop pop } 
    { 2 copy 5 2 roll cos mul add 4 1 roll sin mul sub exch } ifelse 
} def
%
/GetEdgeA { 
  NodeSepA AngleA NodeA NodeSepTypeA GetEdge 
  OffsetA AngleA AddOffset 
  yA add /yA1 ED 
  xA add /xA1 ED 
} def
%
/GetEdgeB { 
  NodeSepB AngleB NodeB NodeSepTypeB GetEdge 
  OffsetB AngleB AddOffset 
  yB add /yB1 ED 
  xB add /xB1 ED 
} def
%
/GetArmA { 
  ArmTypeA 0 eq 
    { /xA2 ArmA AngleA cos mul xA1 add def 
      /yA2 ArmA AngleA sin mul yA1 add def } 
    { ArmTypeA 1 eq {{exch}} {{}} ifelse 
      /Do ED 
      ArmA AngleA XYPos OffsetA AngleA AddOffset 
      yA add /yA2 ED 
      xA add /xA2 ED } ifelse 
} def
%
/GetArmB { 
  ArmTypeB 0 eq 
    { /xB2 ArmB AngleB cos mul xB1 add def 
      /yB2 ArmB AngleB sin mul yB1 add def } 
    { ArmTypeB 1 eq {{exch}} {{}} ifelse 
      /Do ED
      ArmB AngleB XYPos OffsetB AngleB AddOffset 
      yB add /yB2 ED 
      xB add /xB2 ED } ifelse 
} def
%
/InitNC { 
  /b ED /a ED % second and first node
  /NodeSepTypeB ED /NodeSepTypeA ED 
  /NodeSepB ED /NodeSepA ED 
  /OffsetB ED /OffsetA ED 
  tx@NodeDict a known tx@NodeDict b known and dup { 
    /NodeA a load def 
    /NodeB b load def 
    NodeA GetCenter /yA ED /xA ED 
    NodeB GetCenter /yB ED /xB ED } if 
} def
%
/LPutLine { 
  4 copy 
  3 -1 roll sub neg 3 1 roll sub Atan /NAngle ED 
  1 t sub mul 
  3 1 roll 1 t sub mul 
  4 1 roll t mul add /Y ED 
  t mul add /X ED 
} def
%
/LPutLines { 
  mark LPutVar counttomark 2 div 1 sub /n ED 
%  t floor dup n gt 
  t floor dup n ge 		% to allow npos<= hv 2008-08-14
  { pop n 1 sub /t 1 def } { dup t sub neg /t ED } ifelse 
  cvi 2 mul { pop } repeat 
  LPutLine 
  cleartomark 
} def
%
/BezierMidpoint { 
  /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /y0 ED /x0 ED /t ED 
  /cx x1 x0 sub 3 mul def 
  /cy y1 y0 sub 3 mul def 
  /bx x2 x1 sub 3 mul cx sub def 
  /by y2 y1 sub 3 mul cy sub def 
  /ax x3 x0 sub cx sub bx sub def 
  /ay y3 y0 sub cy sub by sub def 
  ax t 3 exp mul bx t t mul mul add 
  cx t mul add x0 add ay t 3 exp mul 
  by t t mul mul add cy t mul add
  y0 add 3 ay t t mul mul mul 2 
  by t mul mul add cy add 3 ax t t mul mul mul 
  2 bx t mul mul add cx add atan /NAngle ED 
  /Y ED /X ED 
} def
%
/HPosBegin { yB yA ge { /t 1 t sub def } if /Y yB yA sub t mul yA add def
} def
%
/HPosEnd { /X Y yyA sub yyB yyA sub Div xxB xxA sub mul xxA add def
           /NAngle yyB yyA sub xxB xxA sub Atan def 
} def
/HPutLine { HPosBegin /yyA ED /xxA ED /yyB ED /xxB ED HPosEnd  } def
%
/HPutLines { HPosBegin yB yA ge 
  { /check { le } def } { /check { ge } def } ifelse 
  /xxA xA def 
  /yyA yA def 
  mark xB yB LPutVar 
    { dup Y check { exit } { /yyA ED /xxA ED } ifelse } 
  loop 
  /yyB ED /xxB ED cleartomark HPosEnd 
} def
%
/VPosBegin { 
  xB xA lt { /t 1 t sub def } if /X xB xA sub t mul xA add def
} def
%
/VPosEnd { /Y X xxA sub xxB xxA sub Div yyB yyA sub mul yyA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/VPutLine { VPosBegin /yyA ED /xxA ED /yyB ED /xxB ED VPosEnd  } def
/VPutLines { VPosBegin xB xA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { 1 index X check {
exit } { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark
VPosEnd  } def
/HPutCurve { gsave newpath /SaveLPutVar /LPutVar load def LPutVar 8 -2
roll moveto curveto flattenpath /LPutVar [ {} {} {} {} pathforall ] cvx
def grestore exec /LPutVar /SaveLPutVar load def 
} def
%
/NCCoor { 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def
  GetEdgeA GetEdgeB 
  /LPutVar [ xB1 yB1 xA1 yA1 ] cvx def 
  /LPutPos { LPutVar LPutLine } def 
  /HPutPos { LPutVar HPutLine } def 
  /VPutPos { LPutVar VPutLine } def 
  LPutVar 
} def
%
/NCLine { 
  NCCoor 
  tx@Dict begin 
  ArrowA CP 4 2 roll 
  ArrowB 
  lineto pop pop
  end 
} def
%
/NCLines { 
  false NArray 
  n 0 eq 
    { NCLine } 
    { 2 copy yA sub exch xA sub Atan /AngleA ED 
      n 2 mul dup index exch index yB sub exch xB sub 
      Atan /AngleB ED 
      GetEdgeA GetEdgeB 
      /LPutVar [ xB1 yB1 n 2 mul 4 add 4 roll xA1 yA1 ] cvx def 
      mark LPutVar 
      tx@Dict begin false Line end 
      /LPutPos { LPutLines } def 
      /HPutPos { HPutLines } def 
      /VPutPos { VPutLines } def 
    } ifelse 
} def
%
/NCCurve { 
  GetEdgeA 
  GetEdgeB 
  xA1 xB1 sub yA1 yB1 sub Pyth 2 div dup 3 -1
roll mul /ArmA ED mul /ArmB ED /ArmTypeA 0 def /ArmTypeB 0 def GetArmA
GetArmB xA2 yA2 xA1 yA1 tx@Dict begin ArrowA end xB2 yB2 xB1 yB1 tx@Dict
begin ArrowB end curveto /LPutVar [ xA1 yA1 xA2 yA2 xB2 yB2 xB1 yB1 ]
cvx def /LPutPos { t LPutVar BezierMidpoint } def /HPutPos { { HPutLines
} HPutCurve } def /VPutPos { { VPutLines } HPutCurve } def } def
%
/NCAngles { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform pop 
  xB2 yB2 mtrx transform exch pop 
  mtrx itransform 
  /y0 ED /x0 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def } def
%
/NCAngle { 
  GetEdgeA GetEdgeB GetArmB 
  /mtrx AngleA matrix rotate def 
  xB2 yB2 mtrx itransform pop xA1 yA1 mtrx itransform exch pop mtrx transform
  /y0 ED /x0 ED 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA1 yA1
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCBar { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def
  xA2 yA2 mtrx itransform pop 
  xB2 yB2 mtrx itransform pop 
  sub dup 0 mtrx transform 
  3 -1 roll 0 gt 
    { /yB2 exch yB2 add def /xB2 exch xB2 add def }
    { /yA2 exch neg yA2 add def /xA2 exch neg xA2 add def } ifelse 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCDiag { 
  /lineAngle ED
  GetEdgeA GetEdgeB GetArmA GetArmB mark
  lineAngle abs 0 gt {
    /xTemp xA2 10 add def
    /yTemp yA2 lineAngle dup sin exch cos div 10 mul add def
    /dY1 yTemp yA2 sub def
    /dX1 xTemp xA2 sub def
    /dY2 yB2 yB1 sub def
    /dX2 xB2 xB1 sub def
    dX1 abs 0.01 lt {
      /m2 dY2 dX2 div def
      /xB2 xA2 def
      /yB2 xA2 xB1 sub m2 mul yB1 add def
    }{
      dX2 abs 0.01 lt {
        /m1 dY1 dX1 div def
        /xB2 xB1 def
        /yB2 xB1 xA2 sub m1 mul yA2 add def
      }{%
        /m1 dY1 dX1 div def
        /m2 dY2 dX2 div def
        /xB2 m1 xA2 mul m2 xB1 mul sub yA2 sub yB1 add m1 m2 sub div def
        /yB2 xB2 xA2 sub m1 mul yA2 add def
      } ifelse
    } ifelse
  } if
  ArmB 0 ne { xB1 yB1 } if
  xB2 yB2 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
%
%  GetEdgeA GetEdgeB GetArmA GetArmB mark 
%  ArmB 0 ne { xB1 yB1 } if
%  xB2 yB2 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end
%  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCDiagg { 
  /lineAngle ED
  GetEdgeA GetArmA 
  lineAngle abs 0 gt 
    { lineAngle }
    { yB yA2 sub xB xA2 sub Atan 180 add } ifelse 
  /AngleB ED
  GetEdgeB mark
  lineAngle abs 0 gt {
    /dY2 yA2 yA1 sub def
    /dX2 xA2 xA1 sub def
    lineAngle abs 90 eq {
      /m2 dY2 dX2 div def
      /yA2 xB xA2 sub m2 mul yA2 add def
      /xA2 xB def
    }{
      /m1 lineAngle dup sin exch cos div def % tan alpha
      dX2 abs 0.01 lt {
        /yA2 xA1 xB sub m1 mul yB add def
        /xA2 xA1 def
      }{%
        /m2 dY2 dX2 div def
        /xA2 m1 xB mul m2 xA2 mul sub yA2 add yB sub m1 m2 sub div def
        /yA2 xA2 xB sub m1 mul yB add def
      } ifelse
    } ifelse
  } if
  xB1 yB1 xA2 yA2
  ArmA 0 ne { xA1 yA1 } if
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def
  /VPutPos { VPutLines } def
%
%  GetEdgeA GetArmA 
%  yB yA2 sub xB xA2 sub Atan 180 add /AngleB ED
%  GetEdgeB 
%  mark 
%  xB1 yB1 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end 
%  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCLoop { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform loopsize add /yA3 ED /xA3 ED 
  /xB3 xB2 yB2 mtrx transform pop def 
  xB3 yA3 mtrx itransform /yB3 ED /xB3 ED 
  xA3 yA3 mtrx itransform /yA3 ED /xA3 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
% DG/SR modification begin - May 9, 1997 - Patch 1
%/NCCircle { 0 0 NodesepA nodeA \tx@GetEdge pop xA sub 2 div dup 2 exp r
%r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
%exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
%mul add dup 5 1 roll 90 sub \tx@PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
%
/NCCircle { 
  NodeSepA 0 NodeA 0 GetEdge pop 
  2 div dup 2 exp r r mul sub abs sqrt 
  atan 2 mul /a ED 
  r AngleA 90 add PtoC yA add exch xA add 
  exch 2 copy 
  /LPutVar [ 4 2 roll r AngleA ] cvx def 
  /LPutPos { 
    LPutVar t 360 mul add dup 5 1 roll 90 sub PtoC 
    3 -1 roll add 
    /Y ED add /X ED /NAngle ED
% DG/SR modification end
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
  r AngleA 90 sub a add AngleA 270 add a sub 
  tx@Dict begin 
  /angleB ED /angleA ED /r ED 
  /c 57.2957 r Div def 
  /y ED /x ED 
} def
%
/NCBox { 
  /d ED /h ED 
  /AngleB yB yA sub xB xA sub Atan def 
  /AngleA AngleB 180 add def 
  GetEdgeA GetEdgeB 
  /dx d AngleB sin mul def 
  /dy d AngleB cos mul neg def 
  /hx h AngleB sin mul neg def 
  /hy h AngleB cos mul def 
  /LPutVar [ 
    xA1 hx add yA1 hy add xB1 hx add yB1 hy add 
    xB1 dx add yB1 dy add xA1 dx add yA1 dy add ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { xB yB xA yA LPutLine } def 
  /VPutPos { HPutPos } def 
  mark 
  LPutVar tx@Dict begin false Polygon end 
} def
%
/NCArcBox { 
  /l ED neg /d ED /h ED /a ED 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def 
  /tA AngleA a sub 90 add def 
  /tB tA a 2 mul add def 
  /r xB xA sub tA cos tB cos sub Div dup 0 eq { pop 1 } if def
  /x0 xA r tA cos mul add def 
  /y0 yA r tA sin mul add def 
  /c 57.2958 r div def 
  /AngleA AngleA a sub 180 add def 
  /AngleB AngleB a add 180 add def
  GetEdgeA GetEdgeB 
  /AngleA tA 180 add yA yA1 sub xA xA1 sub Pyth c mul sub def 
  /AngleB tB 180 add yB yB1 sub xB xB1 sub Pyth c mul add def 
  l 0 eq { 
    x0 y0 r h add AngleA AngleB arc x0 y0 r d add AngleB AngleA arcn 
  }{ 
    x0 y0 translate 
    /tA AngleA l c mul add def 
    /tB AngleB l c mul sub def
    0 0 r h add tA tB arc r h add 
    AngleB PtoC r d add 
    AngleB PtoC 2 copy 
    6 2 roll l arcto 4 { pop } repeat 
    r d add tB PtoC l arcto 4 { pop } repeat 
    0 0 r d add tB tA arcn r d add 
    AngleA PtoC r h add 
    AngleA PtoC 2 copy 6 2 roll 
    l arcto 4 { pop } repeat 
    r h add tA PtoC l arcto 4 { pop } repeat 
  } ifelse 
  closepath 
  /LPutVar [ x0 y0 r AngleA AngleB h d ] cvx def 
  /LPutPos { 
    LPutVar /d ED /h ED 
    /AngleB ED /AngleA ED 
    /r ED /y0 ED /x0 ED 
    t 1 le { 
      r h add AngleA 1 t sub mul AngleB t mul add dup 90 add /NAngle ED PtoC 
    }{t 2 lt { 
        /NAngle AngleB 180 add def r 2 t sub 
        h mul t 1 sub d mul add add AngleB PtoC 
      }{ 
        t 3 lt { 
          r d add AngleB 3 t sub mul AngleA 2 t sub
          mul add dup 90 sub /NAngle ED PtoC 
        }{ 
          /NAngle AngleA 180 add def 
          r 4 t sub d mul t 3 sub h mul add add AngleA PtoC 
        } ifelse 
      } ifelse 
    } ifelse
    y0 add /Y ED x0 add /X ED 
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
} def
%
/Tfan { /AngleA yB yA sub xB xA sub Atan def GetEdgeA w xA1 xB sub yA1 yB
sub Pyth Pyth w Div CLW 2 div mul 2 div dup AngleA sin mul yA1 add /yA1
ED AngleA cos mul xA1 add /xA1 ED /LPutVar [ xA1 yA1 m { xB w add yB xB
w sub yB } { xB yB w sub xB yB w add } ifelse xA1 yA1 ] cvx def /LPutPos
{ LPutLines } def /VPutPos@ { LPutVar flag { 8 4 roll pop pop pop pop }
{ pop pop pop pop 4 2 roll } ifelse } def /VPutPos { VPutPos@ VPutLine }
def /HPutPos { VPutPos@ HPutLine } def mark LPutVar tx@Dict begin
/ArrowA { moveto } def /ArrowB { } def false Line closepath end } def
%
/LPutCoor { 
  NAngle 
  tx@Dict begin /NAngle ED end 
  gsave 
  CM STV 
  CP Y sub neg exch X sub neg exch moveto 
  setmatrix CP 
  grestore 
} def
%
/LPut { 
  tx@NodeDict /LPutPos known 
    { LPutPos } { CP /Y ED /X ED /NAngle 0 def } ifelse 
  LPutCoor  
} def
%
/HPutAdjust { 
  Sin Cos mul 0 eq 
    { 0 } 
    { d Cos mul Sin div flag not { neg } if 
      h Cos mul Sin div flag { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { r add neg }{ l add } ifelse 
  X add /X ED 
} def
%
/VPutAdjust { 
  Sin Cos mul 
  0 eq 
    { 0 }
    { l Sin mul Cos div flag { neg } if
      r Sin mul Cos div flag not { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { d add } { h add neg } ifelse 
  Y add /Y ED 
} def
%
%
end
%
% END pst-node.pro

%%EndProcSet
%%BeginProcSet: pst-grad.pro 0 0
%!
% PostScript prologue for pst-grad.tex.
% Version 1.05, 2006/11/04 
% prepared by Herbert Voss
% For copying restrictions, see pstricks.tex.
%
% For the PSTricks gradient fillstyle.%
% Based on some EPS files by leeweyr!bill@nuchat.sccsi.com (W. R. Lee).%
% Syntax:% D.G. modification begin - Apr.  9, %1998
%%%%%% R0 G0 B0 R1 G1 B1 NumLines MidPoint Angle GradientFill
%   ifGradientCircle GradientScale %GradientPosX GradientPosY
%     R0 G0 B0 R1 G1 B1 NumLines MidPoint %Angle GradientFill
% D.G. modification end
%
/tx@GradientDict 40 dict def
tx@GradientDict begin
/GradientFill {
 /ifCMYK exch def   % do we have rgb or cmyk? hv 1.06
 rotate
 /MidPoint ED
 /NumLines ED
 ifCMYK {
    /LastBlack ED	% 1.06
    /LastYellow ED	% 1.06
    /LastMagenta ED	% 1.06
    /LastCyan ED	% 1.06
    /FirstBlack ED	% 1.06
    /FirstYellow ED	% 1.06
    /FirstMagenta ED	% 1.06
    /FirstCyan ED	% 1.06
 }{ /LastBlue ED
    /LastGreen ED
    /LastRed ED
    /FirstBlue ED
    /FirstGreen ED
    /FirstRed ED
 } ifelse
 /GradientPosY ED
 /GradientPosX ED
 /GradientScale ED
 /ifGradientCircle ED
 % This avoids gaps due to rounding errors:
 clip
 pathbbox           %leave llx,lly,urx,ury on stack
 4 copy /ury ED /urx ED /lly ED /llx ED
 /y ED /x ED
 ifGradientCircle
   { 0 GradientPosX eq { 0 GradientPosX eq {2 copy translate} if } if }
   {2 copy translate} ifelse
 y sub neg /y ED
 x sub neg /x ED  % This avoids gaps due to rounding errors:
 ifCMYK {				% 1.06
    LastCyan FirstCyan add 2 div	% 1.06
    LastMagenta FirstMagenta add 2 div	% 1.06
    LastYellow FirstYellow add 2 div	% 1.06
    LastBlack FirstBlack add 2 div	% 1.06
    setcmykcolor			% 1.06
  }{
    LastRed FirstRed add 2 div
    LastGreen FirstGreen add 2 div
    LastBlue FirstBlue add 2 div
    setrgbcolor
  } ifelse
 ifGradientCircle
   { /YSizePerLine y NumLines div def
     /CurrentY y 2 div def
     /MidLine NumLines 2 div 1 MidPoint sub mul abs cvi def
   }{
     fill
     /YSizePerLine y NumLines div def
     /CurrentY 0 def
     /MidLine NumLines 1 MidPoint sub mul abs cvi def
   } ifelse
 MidLine NumLines 2 sub gt 
   { /MidLine NumLines def }
   { MidLine 2 lt { /MidLine 0 def } if } ifelse
 MidLine 0 gt {
  ifCMYK {
    /Cyan FirstCyan def
    /Magenta FirstMagenta def
    /Yellow FirstYellow def
    /Black FirstBlack def
    /CyanIncrement LastCyan FirstCyan sub MidLine 1 sub div def
    /MagentaIncrement LastMagenta FirstMagenta sub MidLine 1 sub div def
    /YellowIncrement LastYellow FirstYellow sub MidLine 1 sub div def
    /BlackIncrement LastBlack FirstBlack sub MidLine 1 sub div def
  }{
    /Red FirstRed def
    /Green FirstGreen def
    /Blue FirstBlue def
    /RedIncrement LastRed FirstRed sub MidLine 1 sub div def
    /GreenIncrement LastGreen FirstGreen sub MidLine 1 sub div def
    /BlueIncrement LastBlue FirstBlue sub MidLine 1 sub div def
  } ifelse
  MidLine { GradientLoop } repeat
 } if
 MidLine NumLines lt {
  ifCMYK {
    /Cyan LastCyan def
    /Magenta LastMagenta def
    /Yellow LastYellow def
    /Black LastBlack def
    /CyanIncrement FirstCyan LastCyan sub NumLines MidLine sub 1 sub div def
    /MagentaIncrement FirstMagenta LastMagenta sub NumLines MidLine sub 1 sub div def
    /YellowIncrement FirstYellow LastYellow sub NumLines MidLine sub 1 sub div def
    /BlackIncrement FirstBlack LastBlack sub NumLines MidLine sub 1 sub div def
  }{
    /Red LastRed def
    /Green LastGreen def
    /Blue LastBlue def
    /RedIncrement FirstRed LastRed sub NumLines MidLine sub 1 sub div def
    /GreenIncrement FirstGreen LastGreen sub NumLines MidLine sub 1 sub div def
    /BlueIncrement FirstBlue LastBlue sub NumLines MidLine sub 1 sub div def
  } ifelse
  NumLines MidLine sub { GradientLoop } repeat  
 } if
} def/GradientLoop {
% D.G. modification begin - Jul. 23, 1997 / Apr.  9, 1998
  ifGradientCircle
   {CurrentY 0 gt {
% The default center used is the center of the bounding box of the object
      0 GradientPosX eq        {0 GradientPosX eq
           {/GradientPosX urx llx sub 2 div def
            /GradientPosY ury lly sub 2 div def} if} if
      GradientPosX GradientPosY CurrentY GradientScale mul 0 360 arc
      ifCMYK { Cyan Magenta Yellow Black setcmykcolor }
           { Red Green Blue setrgbcolor } ifelse 
      fill
      /CurrentY CurrentY YSizePerLine sub def
      ifCMYK {
        /Cyan Cyan CyanIncrement add def
        /Magenta Magenta MagentaIncrement add def
        /Yellow Yellow YellowIncrement add def
        /Black Black BlackIncrement add def
      }{	
        /Blue Blue BlueIncrement add def
        /Green Green GreenIncrement add def
        /Red Red RedIncrement add def
      } ifelse
  } if }   { 0 CurrentY moveto    x 0 rlineto
    0 YSizePerLine rlineto    x neg 0 rlineto    closepath
      ifCMYK { Cyan Magenta Yellow Black setcmykcolor }
           { Red Green Blue setrgbcolor } ifelse 
      fill    
      /CurrentY CurrentY YSizePerLine add def
      ifCMYK {
        /Cyan Cyan CyanIncrement add def
        /Magenta Magenta MagentaIncrement add def
        /Yellow Yellow YellowIncrement add def
        /Black Black BlackIncrement add def
      }{	
        /Blue Blue BlueIncrement add def
        /Green Green GreenIncrement add def
        /Red Red RedIncrement add def
      } ifelse
      } ifelse% D.G. modification end
    }def
%
/GradientFillHSB { %	hv 2006-11-04
  rotate
  /MidPoint ED
  /NumLines ED
  /LastBrightness ED
  /LastSaturation ED
  /LastHue ED
  /FirstBrightness ED
  /FirstSaturation ED
  /FirstHue ED
  % This avoids gaps due to rounding errors:
  clip
  pathbbox           %leave llx,lly,urx,ury on stack
  /y ED /x ED
  2 copy translate
  y sub neg /y ED
  x sub neg /x ED
  % This avoids gaps due to rounding errors:
  LastHue FirstHue add 2 div
  LastSaturation FirstSaturation add 2 div
  LastBrightness FirstBrightness add 2 div
  sethsbcolor
  fill
  /YSizePerLine y NumLines div def
  /CurrentY 0 def
  /MidLine NumLines 1 MidPoint sub mul abs cvi def
  MidLine NumLines 2 sub gt
  { /MidLine NumLines def }
  { MidLine 2 lt { /MidLine 0 def } if }
  ifelse
  MidLine 0 gt
  {
    /Hue FirstHue def
    /Saturation FirstSaturation def
    /Brightness FirstBrightness def
    /HueIncrement LastHue FirstHue sub MidLine 1 sub div def
    /SaturationIncrement LastSaturation FirstSaturation sub MidLine 1 sub
                         div def
    /BrightnessIncrement LastBrightness FirstBrightness sub MidLine 1 sub
                         div def
    MidLine { GradientLoopHSB } repeat
  } if
  MidLine NumLines lt
  {
    /Hue LastHue def
    /Saturation LastSaturation def
    /Brightness LastBrightness def
    /HueIncrement FirstHue LastHue sub NumLines MidLine sub 1 sub div def
    /SaturationIncrement FirstSaturation LastSaturation sub
                         NumLines MidLine sub 1 sub div def
    /BrightnessIncrement FirstBrightness LastBrightness sub
                         NumLines MidLine sub 1 sub div def
    NumLines MidLine sub { GradientLoopHSB } repeat
  } if
} def
/GradientLoopHSB {
  0 CurrentY moveto
  x 0 rlineto
  0 YSizePerLine rlineto
  x neg 0 rlineto
  closepath
  Hue Saturation Brightness sethsbcolor fill
  /CurrentY CurrentY YSizePerLine add def
  /Brightness Brightness BrightnessIncrement add def
  /Saturation Saturation SaturationIncrement add def
  /Hue Hue HueIncrement add def
} def
%
end
%
% END pst-grad.pro

%%EndProcSet
%%BeginProcSet: 8r.enc 0 0
% File 8r.enc  TeX Base 1 Encoding  Revision 2.0  2002-10-30
%
% @@psencodingfile@{
%   author    = "S. Rahtz, P. MacKay, Alan Jeffrey, B. Horn, K. Berry,
%                W. Schmidt, P. Lehman",
%   version   = "2.0",
%   date      = "27nov06",
%   filename  = "8r.enc",
%   email     = "tex-fonts@@tug.org",
%   docstring = "This is the encoding vector for Type1 and TrueType
%                fonts to be used with TeX.  This file is part of the
%                PSNFSS bundle, version 9"
% @}
% 
% The idea is to have all the characters normally included in Type 1 fonts
% available for typesetting. This is effectively the characters in Adobe
% Standard encoding, ISO Latin 1, Windows ANSI including the euro symbol,
% MacRoman, and some extra characters from Lucida.
% 
% Character code assignments were made as follows:
% 
% (1) the Windows ANSI characters are almost all in their Windows ANSI
% positions, because some Windows users cannot easily reencode the
% fonts, and it makes no difference on other systems. The only Windows
% ANSI characters not available are those that make no sense for
% typesetting -- rubout (127 decimal), nobreakspace (160), softhyphen
% (173). quotesingle and grave are moved just because it's such an
% irritation not having them in TeX positions.
% 
% (2) Remaining characters are assigned arbitrarily to the lower part
% of the range, avoiding 0, 10 and 13 in case we meet dumb software.
% 
% (3) Y&Y Lucida Bright includes some extra text characters; in the
% hopes that other PostScript fonts, perhaps created for public
% consumption, will include them, they are included starting at 0x12.
% These are /dotlessj /ff /ffi /ffl.
% 
% (4) hyphen appears twice for compatibility with both ASCII and Windows.
%
% (5) /Euro was assigned to 128, as in Windows ANSI
%
% (6) Missing characters from MacRoman encoding incorporated as follows:
%
%     PostScript      MacRoman        TeXBase1
%     --------------  --------------  --------------
%     /notequal       173             0x16
%     /infinity       176             0x17
%     /lessequal      178             0x18
%     /greaterequal   179             0x19
%     /partialdiff    182             0x1A
%     /summation      183             0x1B
%     /product        184             0x1C
%     /pi             185             0x1D
%     /integral       186             0x81
%     /Omega          189             0x8D
%     /radical        195             0x8E
%     /approxequal    197             0x8F
%     /Delta          198             0x9D
%     /lozenge        215             0x9E
%
/TeXBase1Encoding [
% 0x00
 /.notdef /dotaccent /fi /fl
 /fraction /hungarumlaut /Lslash /lslash
 /ogonek /ring /.notdef /breve
 /minus /.notdef /Zcaron /zcaron
% 0x10
 /caron /dotlessi /dotlessj /ff
 /ffi /ffl /notequal /infinity
 /lessequal /greaterequal /partialdiff /summation
 /product /pi /grave /quotesingle
% 0x20
 /space /exclam /quotedbl /numbersign
 /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus
 /comma /hyphen /period /slash
% 0x30
 /zero /one /two /three
 /four /five /six /seven
 /eight /nine /colon /semicolon
 /less /equal /greater /question
% 0x40
 /at /A /B /C
 /D /E /F /G
 /H /I /J /K
 /L /M /N /O
% 0x50
 /P /Q /R /S
 /T /U /V /W
 /X /Y /Z /bracketleft
 /backslash /bracketright /asciicircum /underscore
% 0x60
 /quoteleft /a /b /c
 /d /e /f /g
 /h /i /j /k
 /l /m /n /o
% 0x70
 /p /q /r /s
 /t /u /v /w
 /x /y /z /braceleft
 /bar /braceright /asciitilde /.notdef
% 0x80
 /Euro /integral /quotesinglbase /florin
 /quotedblbase /ellipsis /dagger /daggerdbl
 /circumflex /perthousand /Scaron /guilsinglleft
 /OE /Omega /radical /approxequal
% 0x90
 /.notdef /.notdef /.notdef /quotedblleft
 /quotedblright /bullet /endash /emdash
 /tilde /trademark /scaron /guilsinglright
 /oe /Delta /lozenge /Ydieresis
% 0xA0
 /.notdef /exclamdown /cent /sterling
 /currency /yen /brokenbar /section
 /dieresis /copyright /ordfeminine /guillemotleft
 /logicalnot /hyphen /registered /macron
% 0xB0
 /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered
 /cedilla /onesuperior /ordmasculine /guillemotright
 /onequarter /onehalf /threequarters /questiondown
% 0xC0
 /Agrave /Aacute /Acircumflex /Atilde
 /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis
 /Igrave /Iacute /Icircumflex /Idieresis
% 0xD0
 /Eth /Ntilde /Ograve /Oacute
 /Ocircumflex /Otilde /Odieresis /multiply
 /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls
% 0xE0
 /agrave /aacute /acircumflex /atilde
 /adieresis /aring /ae /ccedilla
 /egrave /eacute /ecircumflex /edieresis
 /igrave /iacute /icircumflex /idieresis
% 0xF0
 /eth /ntilde /ograve /oacute
 /ocircumflex /otilde /odieresis /divide
 /oslash /ugrave /uacute /ucircumflex
 /udieresis /yacute /thorn /ydieresis
] def


%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/@beginspecial{SDict begin/SpecialSave save N gsave
normalscale currentpoint TR @SpecialDefaults count/ocount X/dcount
countdictstack N}N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto
0 vs rlineto hs neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale
ang rotate rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}
ifelse scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale
llx neg lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly
lineto urx ury lineto llx ury lineto closepath clip}if/showpage{}N
/erasepage{}N/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{
count ocount sub{pop}repeat countdictstack dcount sub{end}repeat
grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
TeXDict begin @defspecial

 systemdict /pdfmark known{userdict /?pdfmark systemdict /exec get
put}{userdict /?pdfmark systemdict /pop get put userdict /pdfmark systemdict
/cleartomark get put}ifelse

 /DvipsToPDF{72.27 mul Resolution div} def/PDFToDvips{72.27 div Resolution
mul} def/BPToDvips{72 div Resolution mul}def/BorderArrayPatch{[exch{dup
dup type/integertype eq exch type/realtype eq or{BPToDvips}if}forall]}def/HyperBorder
{1 PDFToDvips} def/H.V {pdf@hoff pdf@voff null} def/H.B {/Rect[pdf@llx
pdf@lly pdf@urx pdf@ury]} def/H.S {currentpoint HyperBorder add /pdf@lly
exch def dup DvipsToPDF 72 add /pdf@hoff exch def HyperBorder sub /pdf@llx
exch def} def/H.L {2 sub dup/HyperBasePt exch def PDFToDvips /HyperBaseDvips
exch def currentpoint HyperBaseDvips sub /pdf@ury exch def/pdf@urx
exch def} def/H.A {H.L currentpoint exch pop vsize 72 sub exch DvipsToPDF
HyperBasePt sub sub /pdf@voff exch def} def/H.R {currentpoint HyperBorder
sub /pdf@ury exch def HyperBorder add /pdf@urx exch def currentpoint
exch pop vsize 72 sub exch DvipsToPDF sub /pdf@voff exch def} def
 
@fedspecial end
%%BeginFont: URWPalladioL-Roma
%!PS-AdobeFont-1.0: URWPalladioL-Roma 1.05
%%CreationDate: Wed Dec 22 1999
% Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development
% (URW)++,Copyright 1999 by (URW)++ Design & Development
% See the file COPYING (GNU General Public License) for license conditions.
% As a special exception, permission is granted to include this font
% program in a Postscript or PDF file that consists of a document that
% contains text to be displayed or printed using this font, regardless
% of the conditions or license applying to the document itself.
12 dict begin
/FontInfo 10 dict dup begin
/version (1.05) readonly def
/Notice ((URW)++,Copyright 1999 by (URW)++ Design & Development. See the file COPYING (GNU General Public License) for license conditions. As a special exception, permission is granted to include this font program in a Postscript or PDF file that consists of a document that contains text to be displayed or printed using this font, regardless of the conditions or license applying to the document itself.) readonly def
/Copyright (Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development) readonly def
/FullName (URW Palladio L Roman) readonly def
/FamilyName (URW Palladio L) readonly def
/Weight (Roman) readonly def
/ItalicAngle 0.0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/FontName /URWPalladioL-Roma def
/PaintType 0 def
/WMode 0 def
/FontBBox {-166 -283 1021 943} readonly def
/FontType 1 def
/FontMatrix [0.001 0.0 0.0 0.001 0.0 0.0] readonly def
/Encoding StandardEncoding def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BC2C03103C68570A7B354A4A280AE
6FBF7F9888E039AB60FCAF852EB4CE3AFEB979D5EA70FDE44A2AE5C8C0166C27
BF9665EEA11C7D2329C1A211DD26BB372BE5822F5EA70D99EB578C7BEFD44CDF
045A363056E5E1CC51525EA6FC061DCEBB337208EFF729802376A2801424F670
0E7E6397B28F15BC10B40012B0A3EAEB2693E8F7F627C4C9C7C6C5BFF105C1E4
1B2B9E8F09253B76040D268B80719E1B3F5A55AA45ACB756B8E2BF5B37627E46
DAFD4A4F741A859BB5F7D7C77FC7AA96EE6AC93C06CA829B81FE31E32D59C6DE
B1BF3B6CCC5C3C9296DC86D01487F08AB668F656CDD88EB816AEDD1EFA47F014
FF598E78C978DF18F8F66057351BC96B48015AF2E09E3E318053E952E9AD4037
BFC7EEF9CBFD7BC35746565B7EFBF241639793AE357220843147FADB929FBD24
01C88A382F00BF79554D125C543455330002B0FE6D229830470C78541E78DAD5
3E7C1A619B91215AE025F81561441BFC9ADA446035B8EB9C3D69BA746AD0CCAA
049D1FE4D905DF3F48D22900E02A23FB23F6B571DDC8B2CF7008431C1EAD7F6B
D92A2C42CAED94F9714F44E3CE31FBAF23A064AA2A7F13D6E5378E28539F0009
323A0755E58BA7564A408B142C230672A423DA6A6E54ED162AFBF8FADFA75B0B
FC648D5DA6EC31251B62B9F619AD9460876EEFCB8F9D2369CA3055820306533F
3C1D47D5A2EF97619FC2C780BCD9540A820748369FFDAB9D52492F130C0AC3C8
E0C87377DA6C21F1DE429C15AA939877876F84605F6785B5ADEA97321BF29DEF
3692AF535EEFE801975F94645272142128A3FEC8B1BCEB6E57B83520B5C4DD69
36DB8CDEF6E49B8944CA31C59F8790CD3FED58F1182D9AC6DCB2D75B4881B430
C67DB769B4745EA54233CDFD5600BB2A96209A83FD04C13D4AA4AE27DED97D25
93F6FDA5F64711EC7A2899AC98BD8D8879A6A348265832994C3BAD80E1D12291
CB05924302B780443A76A09E1C27E8DCDCD87FFE3BE17DE0421A47733C2BD723
9C876942155834190F65598810AF8CAD9842F8A1E3BBD2AE3348BD8FC9189FE2
ED5643EC4D87148775121702EEB7639ACD80EF4F07542BBBC09F98F81FB91A1C
89C691BF38CE4239B11C1C0D9A6B864753E204C0BCCB093E139F9D6104FE0584
DF022C621F86E5BFE2E047FD560E8A89B3872C87F7811E9EBCA9CF182472841A
88E7C421E5CE69DAD123B88D4E6C0FD85C86C74435BFCAE28C2B5CAD57D91A9B
4473906D044085B5336B066C6D9CE994D2B333F470AD32D3BC28BA2D699B7AE6
2B689CD50CE2D458501EBCD2381F3430C3059EDCA22D9F15CA03CD18CB160E59
C0E960F79010DC1E9EC40BA6914F9FB7951CB4D5AAFAA135C17D5D64CD848A32
C71A5C856CC9C94F24B6C9AF854B83771678C0B0B4C6A4D9C05ADE69E5C04697
8751F11D2AD4A508CC61D06884D6246FA607802124E77FC07620C1DC238000AD
F6AD8E9D7418065549E5A7DE64405908A078F353F447D44E968A8BA903DBE04F
677479DB92989DFABDF637FF627F4756AFF80F27EA2B9ACD21AA8BE59F75A8EA
AE3BF5ED74076F822C41086CCE1E87A943549450BDB18CEA58D596BDEDB2EA43
8085FC9662B6C313B5CB54A9AD8CCE8BAD25DBCE0ABE023261A1794761FA8430
E43AA6A59BFCDD7DCFEF07F933662CDC5724D3A5C43A25929B54898BA9B58D30
C6F19B4DAE1DDF8E068A8B441C5B5E1FE556DB195D2881FC9AAF598C88CEF222
74222E0FF68051E53B460935C2DF2D8A77807B4DEEAD3FAD1E46371B4494A4EC
B43C272E0A1DC0BFDFA816FBA451DCFC20B89F7603803A12861C0FECBE1F47EF
98C35E5DA9D57564EB8DD80FC43D47B3C5D419327F7870805E30810C134DCE8F
C1F5680ECAB52B7666FE5AD07FBCE7B6C7466C36C1FE04D8866F9251B149042D
71C931DDD8234BFF1BB6BC76E651CA85C0C845ACFDC98ECFD8D07A125E562356
B7D819379BCFBCA830A71389C246F771AF97AD574BFE9944461FCD9408C88D6A
3EB9ACEEE59EFAABD76D5677B231727E89E110AB58F78A4BE43408C7C2F6D446
5B31BDEBFFA59B2A6E9438E4F5075931668B04698B3CBE8F262043BC15C05289
17E8327FB8B6B10274907C8E9A28945C70BE2EC90FDE715D61801FE189AB7A75
30A0C7C921F074C2C63001A415D6978EC80CBBE250BA0562AB6D29135BA477FC
3021B6854484A0592796449AE8F9B27B222100FBD51A9BAE076457A0A9E830C0
658485CA6304D445AA4B08E97B5BD3466C6897065446F7653446FEF499C10BBF
BDCF134E1D1EB8B314610183673444B6645B55EAD0550D79E5E4655E10AE13C4
0486C064E7C7CF994BE8DE8672207703D00D9E6A2484139549A171890B36BD31
0D1A184C084913958D22575E85F99F8590F62933B22EC8CD48D81CC019C9B4E4
1A80822687CF6CE66357C4904B79B704C799AE090C2E12AE0D9889F2FF91CEC6
6A50A934E374045BB4457FA9E5B652C7DD22CD157327FC45056132D2861F781A
F45D555B786B9B2BC563CA35E60B85E210DA5E0740AC1751DE355F94117437A3
4D3F4F85AB32857E14E646AD69AE46D8C62864A6C967A44D7900D44790C42519
C77695497AD2EBD51CB4DAEB0D9834F4CC5F8EEBE00BE39EEC30136B8BBA284A
D932B98721AAC2F00DF496288F46F21FC15112897A82021211D00A7FF64F3150
5A2E1CDB32A589690504D097B10E30E7A4A75691C0BCF4E5B8032D1946A35928
9FE2140F4B10602A684CF11275E537A592BDA358B1A86900F1B8DC287C8B2340
D731E4BB3CC6EC6BFF929EF80FDB8C24F232C6D89B7278B910483A464448C070
9C17105A411052C53817770E78F441E5F78DB3A150F0A442EC30FFFE388E6A96
B840649848D48610D183AD58CFAE137758B183F086935E739FF030719400112E
AA300CB6910A4072C474D5DEC20D551CA856823786EEBBF290D88A354644A4FF
F38C3AD2A480AE36218B4F466B8C7B131B3883E24E8852E88A012D41DB6E1D3A
D6BD20856C95470908FBFB46E47AFE234F39950BC003FDB74489C8B45BF7E1D6
38375F2F1ADC2E07E91763D2F0F99D02647FBF68C82AFBCC7E3A3DED220746FF
2B7076B8337BC6B584B5914801AAC6E8C36EDEB819C7BDC6335716A87C2F39D5
4B03E9A983BF9EFA56EF946D8509F3B7D2D2999D3F3725FACB38C6E0C24DCE9A
0D654066CEA814469DA19702F997DB1854F135C2B69D0BE6D18336AC2CE0BE1E
D7139E62E7910590CDA5DD4588FC950C9A5CACCBE39F1A5B5922B70542CA8BB9
3B63EEB09F28F3966CBC449C788B427E50CA5BDC093DC971B1AE1279F582DD25
8C11C2B23574478290F37CC2C41A88139787246D4C8C41D27CD3F086246728F8
B4B968EBCABB09B17A7E85C7BE858BB0C683D1834FCCA9AD81FA94AB9C5F340C
AA0AC6745916FA18BB8DF0F66B3C1CC771158FAC11D76E7D163A7342A6CDD3C6
662F5AEC5B3E4A69FA7BA6EDD414F99F3459476AE973647334BF7EF2A742DD53
A70656C3E06A7AFE3BCC7EA7E4B18230728FA5537156C1FD8C81C3C8C2305F34
ABF61F1A074A1266D368699A779C424B40BAD55E954F8096414D8305558B5F99
A435D7AA3AD6C77FB5598C222D29454B656262BF46A872C86B8B98E210848F52
4A1A2EC2A5CA7EE3C578535D39CC4C6BC53064CBA51F6A78837E178446A5B0C7
C57D129D64B0DC0FBF1F3A16E5BA4F90BB140462D8955A1E06DCEA921B5088B1
1C34EB94E3C489B22D1ED797CE26E2403B89B3D916D30ED29B3E7301B06BD090
6D7C8F038DBEE3A896992A1CDABBC5D2C87F9C203979697C640416D38AF8998F
EC5B0C5230E17E4CC99545E0775D89C1D1836F6DFD97FBF9633F89417C286FB9
8AB2D2D3A6081AB500436204DE3F6F1EAF14CCB7901A3C1C54A705AE432416BF
4FE23DFDA51D40DD9BF5DDD3CB175F3E1E612CD544ECC7FEEFA841B2274570DC
E510E39D6CC4DB979186221ED7E0B65E32A8EEA6EC7A69671417426CA896BAEE
9F9EC2637429CB45EB3ECFF3EC05B35F6AAE9C67CAAE00C3B09AA29BF8966E11
E954B0AEE88EEF4385445A3E60BB759D894EC7B48A9F798B971EDBEE3650FCC7
C8B259CCBA8205E8F98F00E3D4850BC4A6FCBDD7123B07424671BF00797D681D
595B89297A87323DB82F4366E7F84F745A38C7631BEB3D095F3BDEB0FC0140FE
BE91C45AAB69F13798A4767C68AFFEBD29ED4B6E2AEAD7E6A538D79D6CBC1D6E
24C17BC4090A4CBBEF3B632DD50F52C8AF74E9B3FC245E6888A546966F9D7699
00193133B2F746F8517795ED6B0BE7AA1CD29495FCB31167ED06A5A340040C1C
50BA49524C71DD1D9114BA71BBFF779A727D18EA999ED76E138D519E428C90D3
0E716D592F48C9E47DDC1DB7FAA39EB5F85C96ABC52810FF6AF70D58A4D7D99D
11D1F0FD52825A689E15BA0AC79D3F8FBC31DBEE9CAC7E77D79B27E02132A165
44169E0C4A62F45F86C78A802997AC440DC8D5A6B1DCE8C3EF1B58A487BDB1B3
F7EBB749DC4440CF1B518E22A75CF5E9CB9A4DB1F4E6B4BCDBBFC85A3A92B3FB
7C199618D3B2D90A75AF58CC4CCFE35957B23CFEC70C91E1823C03F800BC86CA
8D726260B51E71CE4F9FA406446C3F30BDB2FCE712EB0B9BEF80D5A156E3EF0E
EA375E66905D49892B70588D73129F8DD1F0FAA258942085749E505F1FAE14DE
1883D530ADE4B196DE9E61C4C8D5FBF4CF991AF88820F123F95B43BDAFC180A6
1CD2FE2A391271413D1ADD6D779B654150041DB744518A0E8A80F687AA6A1FA1
45DFF761EF8B43F852E00722DB3532CD698397EC9FEC7BA6446656F2ADFE1C2A
B7F8582F33B2E19893421464A9501F94ABE2333BAE0E4F838E1342D1C351AB40
3B42027CEA384DF3A16FD969B5FDDF273E44AA0993D5479BF1CFB2FC96B01ED7
C2970B0AEAF74A19162BCECCEC91080AA036BC6CE74FF7CD37E72356EA559BC8
93542982FFDB6CF19FEE4D250CFEF414086CC569FE694A3090465C94CFA5C784
37A7440C8AA88B32FDEA21D73F36605627934E055273B2BFECF4FE50A760887F
52E83F24A890B95FC8BAD5F27D6E47F4FB9602AD6E1158543D00A6C821C8ACE3
01EECF257B1E9BA488552799E40E102D9E5646FEA24C0940D12507B823BA1B8B
C4AF53974D04BDABCC0C2A06849F5B712394804BD4BE709221871A09D6ECAED6
F3C14FB659E8B9BBEF8720614C303738994C150C2AC9AFB1163E58651D2D017D
8BAF922FF16B61334C671073A58AEFFDE86FA40B544AB1EEA5F27B91E98C2998
6B14D002B34AD21D01E1971AD8905004C227EB2475D77D38011585E14870C3C7
0C900B579CDE7D7C306DE84AB81E99DBF54BCF28B63386D2EA922C80E9702C61
E213FC3412FA8677AD4CDBF5D5E8524B0D4C7CBBF2A3552C50A5DE02C35AC220
A89123A74E0B57509BA75FA5613021A298F90AB39C197A0593B73F71DCFCBD2B
771A97BE327B917D1B6296D9453D491902C7EEBCC1ACFA39BCD273B7CADD7262
FA3D6C4CA5F9F22A72FDA487FC97405B9ED8E24200F1F2197F2EED6974E7B8A2
12D08F73B0278617E8DA35579FE7E7B9A29DF29B896AA8798E221313618DE78D
22F02EA81597EA427FED568F0287D043B4DB3C8CC888243B9F7305A874F81669
762B92A37D94A10B417B0B65C693E3FC65EFDB1BFF7763CF1E0CB43E13F1FA2C
B3EE64202C221D79BA01F71E56482BE924C444FEF0F24767A37E04B9A16FCE62
F33F0C59263F225101EB0711F288B2C51C8D0EDED5B42822FAC82C37490A0BEF
5642999E4D1F915D1ED09BB952BA6E68FABCD60608F52EB8B45BC3807D6C1C0F
75E57F66F06D0F94BF6E71CEDF718A506DE1D8C21DA48CA43FB0DF73DE5CB762
C32A349C4174811E9E24F8D944B1C140707E2734854E28C334B1CD93BF182F0D
75285DDA2EE72CC66F826A3A6924B4842F5DF54C9BA5C41117B358E59045747E
0EFF245F7682641E7F09BFCEB2EAC030318EA189CE32C32A66ACDECB128DAF44
2A563EC06644A4F7393C18B2E5AF2CB73F1FA7A9AADAA5CF5592EC91283F9549
F09CFC040831B45FBF8A1AF6AC115B7AAD0F27E911880F27B0FAC18F712403AC
ECAA5A63C6E2043B2EEB4A5EE20A546A99CDA28557AC34E8E9E673D3370769FB
78FB528B745B5178F171A96128E332BADC599B4CC8FEF413DBA605FCE061AD79
9B805D9C534721F4C9E1A4ADDCE036953C7ABE3A5A0BEAEA2CF3515F1C1E6FB8
5A0EDCE49BD38E2858E37BEDCA8C489F9EE00BD55CB7B31CFB6CC1ACB2AFF585
739853945C803FDAF2701DE88CD2453C09987E235D60CADB0700BAAEC1603E3C
A8A10A1DD39AA233EBB7A0BE5C47E19B535F782A7D14216F5E4A4B898478E856
FDE39C8495935984DB05E83E02A80937BF33358AAB8D0D2A4AE1EA695CEEAF70
E3B20CE4DB012E9F2066466E87F3FB543D252534225A580648809B514E60D191
5C995894C52C9CB3D5BB71B130C2A35AD8AD0704657176F17CE49A3A6957A9AA
3829881A778F27C71D37BF15AC54E8C39BF35E974C74DF0455B469309503D39A
45298E3035598F2B29F7BF43A43911F3E42113D5681A04596EB54B4DCE8141FC
B5B9FAF72464FB63A5C42A63D64F3E16A92AFB64C0891B14D9920F486D3C94CF
0C7669ED9E36DD33954846D9D0ACBD50177F5BC191C9077BF8E53EDB89D6070B
27D4919792C0BC103538CD284C9CFEAA2928802611B23B64DBE6B4B81BD89C82
D81A6F3E132606A8524D88E16F3112FA0F007C128202E58A1C945F77AB141695
47EE2D0E54A8D88B3F6E33199BC15C451E1A19099A0FEFF456286F94838CA95F
EDDFFA2FFD0EDCBE4E3B5C8D8DE89E242F9B6312BB5FCA67D1E215EA5CDF7FAF
F4A03B3ADC70E8E030DBAA42CF9D97FB643A70B156B885171AD9B0A46A77545E
769124737C044BBA551388D7D2F852F643A8A9C8FAF925C80301C58EB8FA125B
9C9CA9AC6190357D2163E289D996CFBEBCE833110C18F408B1242EDF8227B38B
16EE57A91EAA19E1D4CFB9A8CC25838F9CF20D5291634BB4E51E65D881D3FD23
483E066B2D0CB2862B29D8E7EDC7FBD12E00326B343F6AC581123D98A400AFC6
3A5D1833A73902E8459483FE5B31E9410E1FB3BF82618732F95D44EB4D596116
9CB33C96B970623B7971497AC7B8E493E6438512E558585171AA0BC6F39CF6B7
252091ED8FCE1AB47EC80423384A047BF32997B6EB21FA6D5B0DCA26D977FB2E
4A9CACFC2D95E34C980B10C45E2BD3C34396A5F0D016B8C50CD21979C66ADCC5
E9B907833E2EBE20810A00D1B8BB573DD0D6DE97CEF92D3565BC93A333CC8401
E19F4BEA4482C08888524A2CB6683C0ACD71100B937B2577896DBFBDA3843891
7588CAB3E59FB22C5B875345D178AC3FF3E73470AF85D8641D23C38A11CB71AD
3E4D82072B02CE4E7EC1FF11CA66D3DDF2BF363DD28D9EE550C085F9D118D88E
3365F7AB7CFEDCEDAECAF1284990FEAFE0A407C7C2B8079B2893B6E6BB280D37
3A56C6FE7504B5105BD2AB87A277B25C461ED0A8BF9124C4CDEBC99973D55751
D97A77A9547C21918D904DF26CA16DF9BAFFA28833F988A66AF56E7FE0437508
12E7A61C73DB3C8C771345EEFB47691CFB53B9CFF553550A45CE61B6D41A48BF
26259AD47E681417AA785DC3DD1E56F0FCB89765D3815BFAB2B94C0150293D8C
7198748B17B23410137585B8EE2BE046FEF515A57D4B87248B27210AF7C057AC
FE7260C023D3EDEB25D0564B1E3D9DF10AFEE39B7BBF6ACC5DFA9253BAC1D050
3E25B51A047381BE6DA0B284B2DFBDBF591AD94CE3DD3470C495420807071BFE
C6663C275934BF33671BD55C838F4ABD3541396F5741E280311FB6537C611BA2
451F461DD52B5C0726F68EDD3146F069085199CC16681FED2AD0A7B09F72A4D4
B36D153E5B17838D497D8CAB42412D8D6CDB8DBD1FADA5AA86EE07E447D8FED8
BFDB27007909F5D538637FEE65804AD9F47FD5D09FE551F14295537D6DA2E4F9
E5FA2905FB26784F9F27A3F3F226449C2F05D1CD18F7FE5FA60F8F48E2604F77
75BCC1B2C547639FCABFF4EC3BCC994CE1FD48E705F80B009ACC12142FCEC9B7
C23EE02FD19C327134B56197C411E3E1EA548FB2E402EB7ED23E493C2345D976
7C3966E5053D6DD6940D0780E8B6ABDBB695031B40EA1AEE0B67BC4CBDCE7EBE
0CEEADB782FFA929E83E3A8E4FF1964DD14A2B8998BAC8AEF2D4837251BBBF06
5C283B7C7B3BD08D72049185AE13AD4E96C8522735074AD649CABF3920190046
35622539CEBB6F132F08755C1B55A1BD2E212FA171248D2CF5C85D9B8D2CB5E8
5CC06BC191CF26E8D68CEBCCCC0CBD4D31E445F889CB210D919D86C106679FAD
F3E2C18B85D025B410F4524C49A43297C9CEDC20F96623E6932E86C0BA3D2AF8
649CE52A6A0351232C016B02B3B7A72894853F26465E017991478CD587D085F5
604285E85083D1F2F28A9FDBF61B342523889C729D6973CE3C2DAB27BE4C90BB
20530A0B4DAEB9836072A837B958ACE6FF2F30DBB73E9C482C38E329858F4F90
F3AFBA08F963B24D5ABBFE0FA1360C01D7A7A86EE2C49065C57D49B88B1C2591
4A4D3285ABF6AE47FC402C9185BDADEE7DEB5A5B3D74E6A726A1BD5906781599
AB1BB54FE371D94E6C99841F7C629F3B87495A9430D4F44003429BC673DD7173
47672963D0255D0ACF87AA716F2FD6ACA199792B561CABEDBD124DB68EDEA2D1
3AFC971805B0D3425553198E4683139ED701F1E78997938180606FDE2005ECA3
01E9C8921C9B7EF2D10EFCFF7628044477262F84083720D9B5CEB6E0B31EABC7
AADC6327B3325E51FE58FC26FAB5DBA6EFB6FDEC977F9C78F5BB0972FE7C9E20
161FE2C55B0728D0E49466DEE887E368A835569DB77B22E158BA172B6020F3BD
252C4251765311BCE783A4477F8C9D8D83343E890B83DE4E75722C9F37E4C9B4
9472454250B41613348781C99243D5F8211C9137700FC35A4323DE906C129679
CF5174EF6AD148FD770FA3A749F398CF43FB27CEFC1D9A7C450669651365B24A
8D0AF9FB54B9246AC401977B40002FB861E7FFE8CD78EB15DFC9F7A304EA700A
CDA0ACF34084EFB5664EEB490E5A832005EE49716BF925847F96EC18CAD7CFF6
81352F9FD2C6E23CE3AB0B98BA451610168201648E4ACE57ACF0C301CBEFD1D9
91DD96ECEF36931256D4D1590F31342AD2AD3E3CD65638C71342F27D79F7F5A4
2B5F5DF31302C020522380B3C65806969D5EF26E4D945D40438FA91F78252EEF
34AE634CF90C10307CC13A1050AFBCF102747C26F02A37CFDE467FCC9FD32739
4B92468D3FCE5F02790F2E1171CA5CB16CEEF53E5FEA85D3956E0D518510AABB
489BF46EEA0D7614C862FF6E6DDFB20AE1B843ACC7DE83ABB70782C9F6C646E9
169D885AF04A627278E243314F53B604CAD12A8C6771364CC604446A77975AA6
82A1E37C877C10AEFE73C9E3F0777350BE92FEE3430FB8AB80908253DFC47418
D617316E055603783278C6ECB538B1BF021B2F2C137A8437C97401626DF593F4
77A0F179C4069C0142E92EF03F94DC211CB2CB94A27524A4C2516A81623A6FB4
ECFE3ACCB88E5E52DDE2D9118A1747917E6A9F211EFE83412B07E613C4798B2B
B2DB9D168701DEC9254C99E8E45CBB75B7341F06D8E37285BEAA9AB71AABE3CB
F94BC5621797FB5B6216077AF948D21F19461C01EB6401098F10D28EC176F81A
2A2222B2117545EF265D6DD1B288192BA7E030922609E03905B37E88EDFA25F2
4D7A1E12BB3BF446C9FAF0EE7EE51BE13F6E5753A079544C1A46165052A2A629
2F0590D6F80A8EC804AC6287AA1D817607946AF750F7C23F1A9D8BD01BE47E22
9F38C94209D8C6F3157346034EC0768CDB9A5DE16767BA988F81231B1C610A5C
055D227C5093096F248572C1068F9ACF1ABCF9D668C042811718AF3E1A4481B7
E7A3FA5554A04A722EE96453DCD7156FDDB44E6B98168197C02C4AA53370C66A
8E3DEAD9ADB6D9ABC293DDF7781E5E437C25F547413DF5C0A1788B0A8CEEFF7C
2D937905BD910761A2E310CB2A9E435C594176C4D1C459B997250FEE679C2524
FA0A0111A1D5982BAD178165782D756144A925E5C17E24BAA7B5D130F8156743
9AF71853CF5BFB91F66FD17E838D6EDC3630005730241DAB13483740768B842E
6ED564600BCC6C2019EE7042DF390CC33978205427B2315A979FA011BD27F600
274597553AB51188F7C13FE76366B00418F9EC9CF5422C7025D4DB1FE98259B7
EF387B58E928AF7F55725B0E51381A8AF4123A844FB2C4E801ED47DDC97EA643
2BF69189225CEB53182A46B127092C4178B44FDC62FC09582DFA6399987EB4B4
016EA5D4FC5AC808C87C4DF17596EA3C0CF1B87D6BD8590BE46BA8A3CF64C14C
8D581F57BA30F881B28142845444EE78EFDBA4614A22B3FE593021A0B8767115
58617A966F1D91EDF726ADDA64D1CF6E993E7C33B72ED2509C7952CBC7C2B704
EC8F5DD90B7664FE894EB91DA785D6B36F31454CFAD8B1CAD6E195F9EB866BE6
D794D0948731B86706637E25732D339640C34F8E643B53372E4F87992C3AC923
2EEB78F834A9D108BC7D58A92835845BBD968665645FAA17EC581A5D15063C65
B5636B65B954E9F28CA209995849AE4ECE163D15D253A41C9309219AB0695AF2
5C6C25F9B26BEA23E3AED55AF7A01CC65CFA9E4C3E88106DAB1434E2CD823970
5F9179921E4931682DEEF3A582F17E53220BD0CA4566DD0501C1383CC666EBB9
0B84EED1592F11DA0A240B46142F1D95D9D3D0E82FC104711DDABCFCCEA0FEF0
0AC1247303F3A9FC97E82D1ACBF73BC5843CFEEFD858A58F55BA4E65EC060264
05D970EBE673BD00BE51509F685173FC157CA62976128D48E72C15E60CD78C8F
EF7A13CE20C001C40D69EA8266D480BE044D5753CD96A7E007631C8030242B34
686881B008E3290BB01918E8BA87EB215A5F7E4E11F2D685CFE8A6406E554B3C
847506AD631FE310D247FF0CDD078B2B3129F15B00AFD640FEC131372A2D75A4
5BF93230FCE4835D5DF59703030A2BE8F50BD058E563C64ABCF5B87853A3949C
818BA3A99A0DD8587BA20E0C3AAD787D8E62730C4E77C5E5496493A2220735B3
ED5FAA6F7B4264576D884F919160E9A8E4608181A88AD2D8B52C3DF24C50CF0C
C154D1DE9E5FF051211C69F1CE7BF79A93B105D6D08A93F036C537552364D1CB
358608FD6C02A1AB1084C189C3A2DA1341C20CF04B9614C7EC8D589754696943
405CB90949498D1526AD64D534A22A8276D5288CCD58B423821F9E1902B5341E
56AE630275554137EE91C4B72EE4A38222AF94D969BDF0E499DDF927887EB5EE
88CE86A7FC2E24B06822A81AC5B88FA303595107173E58F1B020509FE30ECAB7
01CB7FDB8DC7BF1DD4FC7500EB8009BEDC5A0FECD341EA18865B86F1D4FB2830
DB4DEBB392D25999681624E703982B8AAC942A8C8F66A783B67E1FE4BE9475B7
A95B3DE028283DAA7F99A55DB028501D5257A2FE86F0213F6D2790D9F623C837
53963CA85E894403076FB9A6B340F5BB512DC333468FB500D860BEFB092A4388
E3C3F61076183D794D012E55C69242F195F75851665387F4261444111E1CB316
702DAA740300CC2654A56ADE7BD54514602B2FB30C9A40DACB3A1AA64B9BF375
0AC345ABE590232CD6C8E17FFC724B0190424C7B39DE9C266AD62D05AFDCDCE4
E33091132D471EDCAE38607B7B17E71B0B7CC7787D549409481AC250F0399CCE
B87DCC5EE7DD8A6BA568E04DBF11A5A431F7134EE52F84F17968E5680E188A76
49D8D14370BA3E4E6970C7BD374CFFC9EDDE8F91B766494CFA384B94A8A7F314
CD4022E98360A53B761CAAED96AFDADB81FA1BCCCA28DB743BC92B2EC3F528E1
9051DDD2FE88048DAB5228DFE670A72F15DC8998AC0E556F1613285F3C64EB89
FB46B9EE0883E8874BA9A82C4250FF76C3A89B6783A0CE4003B7CCDCE6A8CF04
33C5A492D4174B092434B2496C634119B102CA00532FAD13593A1E93CB8DBBD1
D649719ACBB9F6402A736EF57BFEFA0FBA55408D68BC15091C9B89611F167865
82EDED1B808FAA3F58840BB8F785CB0FDA4BCDDF83ECE3C84544F223A6062461
53CABD0D25C92236404C8FC1DF2E6FF27F4D964D04DB23E90865168B0EED7182
95A2DC3679B9013982D51EC6F54579E2436C5D163596257CBF4CB216393EDE96
46B2D9FA3A6A4D51CB9509B9896F726C7D5CF5973AA1543F24A39F5DB331C3B2
4A9AED4951270E2DDA8F11192C78417DFEA9783B6EE91ACFA9F4B4D974B5BE7D
A792815D9824F49D5E747D0FACF1B6A49BF71A83539DC27D2C9F792B326AB96A
9734A03FE3585CFBDF46AC0906E5618C90BFB5A7712437908BA4B15ACFF0C7CC
2174A10F5C030972FC1C4488B38500FACFFA0B1A7DE3EC9CBB2AAC8968AEA916
30F248A6086ABBAF17058FBEF253CB5CA1DAE4C5E946AD9816CCC5114D9F7B05
CB9E58113AE54F273284BAEA0132B15956641BE8BBCC09EC875C706D16434081
9458CC38B85D03197A2D9073A7B574E91088A6A5AAE30BD9EAE632894C30DFFB
50B13FD9623ACCC0B988A690F433E0791E48F759225EA401DB454BCF258828E1
7D22E2175AC6DA8E03437CBA52F777D168879ECBCB3B02935E81DCFC02B7C16E
0F7F54D1D9E183EEF39AED664E81D721A4C80B11B6EF718E0AA342D014573FF5
FCB62D8869547EA70618E7DA1B93CD54D6F7D3E9B27217BF362D308876A8013C
A4AE218DE4A00AAD9CE98F2B71D986211480F22ECCBDBDB5A63297B06E72C892
9D5202D6A34CB22F76286366BBF044D9328356191A912ABAF404AA2A5F075D57
D8FCF1F8E9BE4D919570F2E5F06D7294F5DD4A56864E22BB0B70B8DA22B0E626
FA347E6989B76A91534C25E76655B8EA296706CCE3F92D22B20BC90EFF9B76FC
61ED07EC532870FD72E532947F3583BB36A19F78777A327DF7FC87C1E589F1CD
0B1DE13371A453BD5E362E36C64A01CDFEE8808039DAF68D119A8D2369B23FCF
F97469AFCE44901D78FBED7D0CD678772229E20EB400539F03C0A835348AB855
BED1396F9328DBE4D11C38CFFA260D8514038DDAC77A69D63C1484E7508FF67E
3733FDD218EABA2A4B2F74C86CB18C5985769D90CF174AC84344B9534F5B1A8F
6A3E5CC09BAC614F7AB885806930D7FB60E95B31AB47007EC9B5F8E0E2CDA001
1306A8DD9B6F1EC6463857D7FA76B2556B6F07D62052DE9D47E7141DE2EC6E1C
7FAD1779C1B196ACA5D9C6E8A065B8EC810904962CDCFF587F451119CE476848
430A7A7843AF11DD47CCE17AEE89646B3919C74133EF89CC4C0AEED813DC4FAA
97C01188ABA1F0D05D0372B1AE75E1C294FB58F87EAEE9AE43677F805D9E3B32
6AC2A8D2453D65A8C9D54A2B85D6A6B822C1ECEA70F5E2EF5983A1404F43990F
492E56478777008EC40FB9B70458F023A8E167C4CA2AD76B59C9482DDB8D99B7
708C8279469987BEFA6BAD558508524563E0DBF6C952CA6323E3A81BE3DB9E65
2AE653B59CF80ADE42FA68735C0BD50468DA72949CFBBB4B275602285CFB5E4C
594442C746461AAB4BC5B936728A7264DE7C1FDAC3E5BADFAB90A24543A5EF46
9AEFCEECAA1831E56B0D8EA6CCB76BB9DBB59CBCAA0685C7C24E70ACB822ED6D
AD52ED8FAF9CB0844D53C5BF8F96A53DFC82593B1F43C7E2B5C692A4534F1CCA
673CCCD67BCB849ACC6520E88FBAB0B2A4A7E80A786A99CDDAD2DCB910DD45D0
8B13FE9FAE65DB312E0E92C927E76EC7E06B54C9092243A88E7C8E172A05002F
3E3C9A35FB882D3E919F367CB9BF382CB9A261B21561FE9CA500BCCEFBC89C08
4BC3B550EC1F7AA4A8450059431E77BFA71B8A651C00F0301A30340E3C283EF9
BDDA94CBFD16FF390EDCB9E4258FB087B698901CCA4EE248D264A252291322AC
F12EE77EDB26E52B5EFC41C31EE56C74CE152AE8FD1D0E10D8E0802B93E6208D
655541EC4B0EF5986310A00847FC15C215BDE294CC1EAE5E2CF3921E8D1718EC
76B4126B94A214EE9EA3E3FDB5E578028773D649DBBB55EAC905C61F3A940EBD
9BD9071A75F5CF35385DC7379B98F649A62BC519FA0FE7B11825BD3D1FD5D9E2
0E4E1A315D87B159A703003BAA7E7804568E70CC705A143E9A83D94BCAA79202
1E7C42DA7EBD88A2937FCFEBB338F00B42914E9C57647EB8E268F0F4DB91183B
A60B6037B91E7E98D95221FBF06BADA8CD7E28A407FFF368268D0D61B383498A
2163876C1BB4BFF9EAB5E6E856E3C3E33D17E38FB2A662D90B5A8FC4DEF6F1B7
B4C6F79EB0022B662319D4116F398B9FE829119A34FADD9C4ECB04DC08F2817D
2FFC7B342D836906C2C77A9859F8E720D76DE416B3C7E2F2CCCE2B6CA0EECDB9
D21E7857FC8382CFB4369F20893BFFCB89DD057C02DCE32B342844EBDFB5F031
3C053033043A71C1A213BC5CF9AAEAA19B73202E9E6903C08C276AA28D13F8BA
D252042845524023250E9119D81E69269EABC50DFE53BC932FF22E2042A2BF47
5C480843ECF4CECB656253E9F5B882809974543B3403BE45ACABF6FCF1C7F031
E02AA401E38979D3C16CD48EB2230C8909B1597C842E8459E6171E7A77F97F4E
08480A303A1E376809B55EA36065BAFB71F09A046115D454937484F9408E86EF
316F90750EB1FDE51F8F9E029E464E1E36B7A73E0F4C2EC3B35DD2DEDB5E3A9E
DAF53BBB507902E72356091F8B401389219F01DD7E2283EDC56179E257509513
1A667FD57168BF42234468F9C3EB5C8E0A54607929C8AC83BCB2CA548242BFD6
47243FD13A1636696FB967BE4C4A5BB0E9C31966EADB2A387DCDD5DC37C77FF5
1705AB07291034417A881370A322F01404CE060B3CD05E8A133C4C11A7454FE5
75F2E02162A4A50057B21E4A92046776BD5C9CC6EC08DB9DEC5670442C353BFF
3858947A60BE8AD8FD28A9EF8EEB25F6A230DC6AB0708EA90178ACAED252C2CA
F15D3A748549B6F6A61F79CC9DA24EE525ABF5A06342869329971DB275402472
9BBB2824C0934462034C9E44C5390BA39A0D66BD196CC79CAF8348F559D6AD28
E34BD0C2B17F564FB9D11FBBD82D9B96338C80EC382ACA49DD2020416480563A
FE822F2CCD410465A0316226FBD34126600BB1ABB2DCC1FC2B75C17FC9452ABE
0FE0C8BA6B14638B101C9BA4E8B42A555B8BAC41E8797C7F3EE548C07FCD6CF9
DD7FCE890EC28AC97BA964C5F1C943FA793A6E415E9B9A77E4FACA6C596515F6
18C901EBCCB9EFC0FEF26FD2A1324BF20D9C28246A7FD1E48BAC0F2D43F34442
2377B8DBCAFD5D2F01E344B8711FF9CDF009A978654E56AEAA291C4F1A17A9A6
0C963EC169C8021353C49EE01E9BD6BECF50413F7B09FA68842BDB54214FD8D3
EF524154262B6451DCF7B39E698F905D52746D1173B556B896A27FF97F4A5564
374BA34BDAB4CA64606F06142CAC4E1A66E8E5F4BDF99D27BD64EDF7574B612B
85EAAB846B6EC144DE2CA99514DBD893D279F20F49DC8C5F2C43537EDC6CF443
B5BF673AAE3772C82AC0ED80420E4BCD787F6C1979B0A53A1B5FED7935DEC964
AEDB4721F177FC89A5AB13A0608C346437812FB523E2DFE4AF1A5646EA8EEC99
E2094F113662B6A487F14B9D9A5B20898C25C34DD931F1B64F0BB9BA120D8DB5
4879A0463788B5F261ECCF041294D0F5FFF3E574A8B3C5BBEC36409B7C691225
359FAE9CFA11DC0A3F4AD2FB7E0DD0875979470AF294A4CEFD38A33BBA2114DE
79D2D8C5FF468E14147ECFC0EDF5C1A835FBFD2B93D9F87CB8A6A1CB07C2C9E3
6E1A1833C74A1F05D9146E7F5F771F4B609B835A6210FDD7A99EDC07DDB51254
E87359F31AC51B5B4094EBE38D4334DB1728BEDDEF64192FFEEACC730C2FD36A
D835478CBFE7C08934ADE0FE8DDCC0064FF0FE0D721330543BB10733C06CC886
25501B04E6C5CE797F5DE06F407661E0FA59C8ADA7FC13B78F85C32E2F6B1C18
3879CB39765CAE0DA58F5DD704579B57E36A475373979424F6CE2ADCED28FA34
6BF944CBBB0EFB6DBB696035BC4760DFBE929FECAA9E19CD83A4B956B9C98761
81C53C2E41EB9C7B8D63E29661537A84CE281D7925FD5F89F09B25F786337813
90080EED7ECE4B5A1BE22A432EE212F87AF548BD84E2B993617095E813161CF0
4ED3E0A4E6C42783A2522097C88F5A2A7F75CC1D909407C93DE7A0DBDA00A352
AE3DE5D771C6EE73E622EA056774A78D3657B25137A409334E3B762830C96BBE
F2B917A8E8E6F92DBCD6BA5EA65650D5CFE820E0FF2A62C71EEA9AFA61BB1EFC
C46A77CCFC0E17F59396654488D111FBB54F680E61A062580B9FA11ECC75BB3E
9177998D69EC43448ED41F6515298A212699CAE379838A7CE11AE48CE6F57049
370A2F54B972D17AFBBC17A93D7173E37B28A51BA01A9EBC0A0BE4D725F63A6F
FD95BD8D54A96179A98C7D0F7A3B2458342C375FB0808476C7850D054DBD9ED9
187D215D8AF5B205854F9BF1F07A082183878F766C3674715D2BA761290D5965
58E60883C15F121BAA5F9D9225C484E58A824F84CBD58831FCA80B6BEDD0ED3B
E5D5861FFE02D044E8987CDE0CDC2FDD22CDEBFFDFD45ABFDE65A39390B2368B
7868C178B2A44722F5052A9D64B50B4889456D0FD791740A485248A20546AD33
1AC05EF80BB89B33E63820144C7EADD2B7D634CA858682DDD7E10A9FB28651E6
E9B993617095E813161CC6BBFA86DD9F4FA1AFBE70BB0DB0C4DF28361032F041
B4EAD29294D6B04101F8F792BCBDE50541206BE178320D01B45CF2277D8D8BB0
EDE87EF9D985D45679792EE1E4182ACCCC95EBEBB93031AA1FAEE78BB51ED054
9BAD624D9A1762B670A9A506C02981DDD677DE1CFB8F041A7DF0647C4175A9FB
3D7E1F335DD11218789F15196F9653441D5D99563AD6A015995764F5ECB43F18
FF4A412EB9E00603DA2CDC3B14EE62296357FB64532EAC2159B49C1DB34B2567
B50D0B0F2BAB32DD9E7873A5BB7A02A4163FF3616E6E571DC3871F3BD4C83476
BA1594306DFE612047BEFFD06259B256CD1A08F629A181C9F8C3C012829FA69B
8F87FBA0F1F8CCF619FBA5503A3142FC5C99973AF211F2A2A05F5A756073B85F
E9286FFC61F47D6C101972BC861F80C36AAD3511F899AE3BE76BD3A978AFC92D
6D52BBBD815700DDBF74140C39028AFAC40CDFE499E24BBBD58B3B0A30A217FA
184AC04114CD328295CF922FF601D69125F828B4B2DB8F0E5D60E5E90A5D8304
CE37D3D708FB4C197F972E2941C995D604080B4FE69807BC5F37C37F75307C68
061FE700D476224F355C15D20FAAC79540CDCD5CE9F800DA7293E662E53A9FA6
483A5FD23A4327D12507EAC72A7668ADC4D26B69038DA257DC2063A50DEA9C8C
D10A4D19ECD6F17CC288543E6F5CCBC5780936829A15DE3B4654B265ABC43F17
6B640F93FA574D3425DD12DEE557D4BF8A30333F2240F87D0F698713B90AC7FA
85278A2142CFD0DA1D1303B438AFAD2CF549FFE58BFD7FE6424343503A2F3CEB
AE20DBD25185988AFB99A24248C40C96332E7C299C25BBBDF6F477F9A3360AA3
84A8CDF19E0E717B60CD71DEAE81B54335F22C5EB6815CDADCB541953F343F36
F8E4D8E154C320F4F0E6BE1062B23A254850CB4E4BF69A4A7C913DF9D3C824D9
F1C312BCE1CB7C2B043871C02DF2214C20FF453386DE1F8381D69C12D56C009E
9C6255A4DC7DD81BC8EC5D8441B0752EB0EFF7BE8B680945946FB33CDA879D26
4E19B5AAD9EB7CCFEC582370D71260BEF1626F9BC7190004D7FFE614306AE90A
FA888BB33D409B06DE291151D74062B0652A6345C6EC000AFF51743C65566185
D0B410CBBA2473F586982F10AE8F6FBB4892268FB19A50BB6C71CE09471629DD
B4831DDCB04CC19B94A56D2E8774D2718FD2EFD004E118232AACD04241BD585F
817C7ECF8C40FBD087EB17AAB65F552E934296C2305E4D6E347DD12AFE72E2FA
17A6934BB3731BEDE7F746BDA280B4123998F9048769240E87BA1412A7E26D04
3300B9620AAB02FF08BA8D764DBEFDA2EB3606AA55D52B08A8DA272871F2D77D
4090816CCD9A02E15428867C24A8EBF740C6F82E755358941C5AB59216301E19
C025E255AB0D0089ADD66BAF9417F5CBE8B11B47DC324FE15F44635660C465FA
F2FDACC89659D8ABB19FA95F30EA5829FB707ED9526ED05444B4B71C4D975472
200B5BD22BD9D8B3E874456992AB83EEA36B1AF9180E1A793372A551A90E2BEF
102787E63EE82F9AD5599C9EE85EAD6440F3B34C329E6AD9DDA152FFBD2C4890
3EB29EAC9256F17A002898C434D8E3E51D4783E6DE885224E44592FAC9EBC9D2
5252EBF506F0D5039170339326FD0DE1CBDDEEFA16D92085764B70DE698B109B
33A846CB320EF9E2B9807BC7F9D2762732744A225796100D7187D1A48580F7F0
B111D1959387BE8D374A8D48A10BA7FF460B2F621E10FF8A4EAD2E627D488A45
9A9752D66CD401D3BE7BEAD15BB673E8E10B6C92AD04A05E9E8483986EB56A64
1FCECD5F163D7CAD96B53D99DB80BE14B4897D0A4C231FE009050CB7A8C8F867
60FA5C65BF595C3DC33ABA69C7965DC0D8F838862208126E0FF3D8FCAD4351CF
7C909C106FFC54EFC06F76C5128203F99E12BDCC8E69400FC6E144DE4B3C6620
EA882A24362888BEE48ACAD896581A70E88BF65ABB396A4A1D65189A94A64964
67F33DA4C509B1150ECBF843C38A4E32C9EEC6B7BDE27A78B3CC1B5C0A74B476
430356CDC4BA97840AD76C937248D2673B132906D4F88BF12A3445794FC9DB3F
1BB4A0B4808F0F3C2F56C6D7B86A1EF2651D54A62141A8142C9E28F40892C88B
3F789DCE2539DE30CA17ED4ED3CDAFED8D1A83149BDB16A1AFE7D791B07EB542
990B715640A89386B024738B7B93D0E7601F1419BF36A9CBBBDCAE386B72A26F
7C5BFB146E5B38643081A91DA1D968D665F97B4949B3B5E1DC217E8A1FBD9B82
8B8E5DDE1174286B783C493794BF12502E04FC52064E63D005F20348BE2831E1
530145D80BA78103E405DD21F19215BC8F6B366C9485ACEE1D388D5C45C21378
715D75668080E413A9C377E3A4EDC2F0821009F5686650A04F5938BEC6124DB5
186742A76CD75A7DED196B694D1D4E67DF3C21F1D0D2C43D4531D69856E60FE5
EADCFA343EDC76877D9E0FAF538F8838EFCC73F20B6F236A3BCB744CEF886F39
CAC3327CE49E4C55CA4304C3DBD06FA115C38B32B0A5CE885D44BEB9BAF43A87
895D9921B88A46E847E8730AC62BC8B4BEE5E7F2266C41ABD278A49597413D95
EA04E00B3620E6BC973C4E1C48F352E5607DBFFDFABDFCE1FA7A2179693A8045
F2F5C4FEA58AAA0592AB4809D60AAC6DD052D2E47A9725EED2520AB00C411D43
59B3AC5E1A917245CAB7B23AE0DB8638463FEB1D02D89F4A745A14F7ECBBC8CF
0FE46BAC8456A9F64E7F9B93A67B70E2FC59C50487B4C0BCC2AAE1F05C2C37F5
BEE97541FE06864484DCD620DCF7DB068143B831E726AD68B6DC816B0E01F897
0C2B9557A09245577F997AB5022480252D5611A196501937A15FC937EDC90FC7
F5D9C04BB5B655DBAE33483B6A1B8A97630C430315D82C6BCC3463E77EF0AC2D
1AF464B7A93C5A22632DD205AF0786A79AFDDB23227CCD9CB8B40C3AA704BEA3
521ABEBAC57E0BB6721F8351D54D5BC91CEF1B0A1725BC94B044C255E6029AF3
47B9DC248D9FFF3C4052442EB8974AB96FC69DAC909C84AA0B50218A3AAEA347
131616B371219BF696B159AF031DAA5DE9BBF200FBBCE6EB3AB80DDCAED66966
7EA03247A99A7BEFFEE6D54641B7E5D8A881821CDE7739CD53E79DBCD8EDAB4B
BD920F181AE65F9788563B6C8D3AE7CEEA500C40D273F38FC875B949E8EC26D2
B05A65174B8B871F85CE814DEDE826ED77450E7D36754700F77AFAFDAEC6C4BD
03E7D068B7F413B85C3928B45B30772EE9FFC733B3DB184FB4852259EA63238C
497DF76C3596F43A6F2F0256FC354CD90D4EC8361D3DF5DB1D8FFC2550200272
E7DAB35155314C916D65F811668A98FB02720B0A85471FBFBEA6CF1F53A1CC1D
D016F765B7A3EBFB0508A87161908AF607508634A07D3A46802E2E7FB80E870A
4AD588A4E6675BC23480C2E498998FD0375AD014AF519B513C925BD32D89219A
752D2305A42F0FB37711C0E606B1B1FDDF4A508B83BEFECAF76DA7FBFA821938
8C5D8C26374CC016066321CC05DA1CE1392F55540D6208C35E04446C5D284448
C12F5D3E8D3640E5C54288B170DCF142653DA546D27C3B068919F975AAB9A7A8
F2C237E83A3A45E0886D717E30A13C687888BBD38134E9D70D83C489FE089ECA
92E434DCB2E2CA60A01579678998226BE3233D68ACD6C379E7AA6D35E67B78BC
72AEC6E048FE3072FA6016FC64C5B14CE2DA7FE108607E1FF938AC1A37339D2E
2C031A07971329EE12608AADDB7A957F958C5B78F13AF65DC0C615842C0F82E4
3FFE3C34EF22607A169F7FBE270058485ECD81B99A3AF9476C144B29D58EBA78
F369CAB037E0840A2D7A715F8920465B7E38C792DDE4CB0F5FC29F2E21FB6232
8475491544ABA6F088ED010D619C9DD4613BBF6329C90BCB4A5BD3FCD3FAE481
E29F99E3DBA7CF01675D14172E19375A831089DD3B33912CCC5255B576FE5624
9C9E2C4224404934267DF0BCB41BC6318DB73B2DDEBE66094327111CFE9F1335
164D069495D9954CD3D9B5127A1A1532C83513856246A90979CA5A4F6E0431EF
59AD5DE019D25BD25518049F8C7ACDEE082958422613EE0E845826750C586B6B
23E2C067F696956772496A268CE384504A527A95F9E207AC2BD2E5BA6E9CF78A
2E8A97BC282153B7E3131CAFF505EF437F47C941D59CFA44DE81634379A2D27A
337904838A1AB165815D56B96B75DCE96A9E6313BAEB3A19E3342DFDFEF44400
4780D4D181CBB3405702A99A77192F1CC3D70732B7DB3FEA27C85847E6EAB4B6
2741B6BDCE75D60881F9F7C452FA068DD164FD2FD010D15C9DD3F0EE2C65F870
E3DFC830806944C5962C6E074214E2F02B7CEB610B5867DA8511922F03FA2A49
57BFF7D6937EE37A9E31D4B05D2670EDC55B98A76CFDDBC0D078BC1326680F25
FA921B46EE885E7F253DB81BE8BF584307E6F32A43702E11EEEF5EBF74B61F52
9DA2AA782258EECDD22EC174773968185021EA2E47D6DB74BE63876A2719B88A
D12479771B9C508193048EDA0A256FABBF31F6B2DADAB8BC3150D0F7B54231A0
8BDF3E922245BAA2654C2754F02E769FFD86C76E62A4B43D6E18B877E01095BF
CC5B88D25791300B6B3C82081D9C6E683216648E4F1D1338539E64CC24C71B07
3B9677A4C348434516308036DB617F7FC5A1A8759DA55626FE2EE635AAF00D0C
C128B5D64BB1BF191C06C8B64C4546D82C5F1A444ED8B823FE0421C91422D503
2B385A65BF8F80B0AEB3682273993ECB704F8720DCC8DA725D37131F494D500A
BF7CF42068E043D43A858ED50AADE48ABB8E778C85C9CB56E05ADA4B9B31C05C
8837FA120BEFDD5C2EFB499BC039B719028098CC6C7A8A779250CC5A8B83805F
BCE1E2371D318733FD81C648B142A4F074CC33F60C88D892C3CC1D97975D6A78
2668CA2D389739A061BF87C3769B1F23938713B626CF4A3084063E22833545F1
4EC33682432BEC42574FF77244582D5A8A43FC64B26BF9E4498B7BFE17F3E53C
A5F5780C9040880CCECAFA6B16AA804A8E27493FF1368E57A6AF00445AA75217
30DDF2D7585DB9E085DA303B10AEF80685F1416EB688429C7BA99B4144F0B8CD
5EF1562DEA8F5A53742579D53B30EA9E6F1469A6A10EA258EC7B8CA76E02EF87
B2798BAA302794350A12EAE523D879658AFC6ED486AC23528605FE1CE3FEA8A2
ECF02A6CB49FA553152A94A0A0DA16A9FA8FCACB352197D315A384BDE6C5F6EB
1D1DAFDD1825CEB017B47C1D40E8B78C5D699B735E1258DE763B4DBF354ADF3A
45458AA4890B785D302C38EF1C61968FC1DD3FAD790B819AD8B06C099EC3363E
AE9DA5E23181C4B1AAC767DCF91F945E32ED64500C77DAF32CDC8E2266CC1378
B76FEE475F564484C833AEC82575744BD28E9C59439451D4332EDC6D6DDE1A84
5A163DE6700FA5192C773D10CEC0B2E8B6358B90E0C93E51F62680ED5D948DBD
08C74C2C86C7B5D9EF02B6579955D88E0168AE73652C97368E3CBA2CC2D8BD38
1CF26A53D98457BE03DFAAE93F9A94A2053316615A9A378971080C2E73702EE8
00BF0B3E5B0A19A16B0207527ECEA2B3C187638567102EF50195A0BE71FB5B3F
72098D065A32EF24A3B979D3BAC81C25574A2C115A58E7A25AA497B8E5D0A1E5
7E38E1BF6A7C6A5715999E2E806F56EE5F29C185AA44099878A608ACC69E381A
22BCA905773A5A64E620CD953D5133D1631A25DE5823C9FAA5F534238F31D914
1542CA832458E842146154259263EE20515061EC5EE42E9D9172AAED6D4B7A38
A27F607EBB2A314ADC0F6807C13A53323F0DDCEC4C6896D0E0674F5E83A7F8C0
0EB5AE251CD1BF974E0F6F01E19F8EA115FE6D9E535E6EC01271FECF9CA11EE5
F1731BD46436B71D57FB457839F063204F978A6424E76099A9ADD8BFF2A95603
3F3B2C667BCA7A7D860666F68C52A67F40AACEB5236875FF8A215BBC61FD22C8
2A3F87044F0D9DC1636A8901F9C7FF2683A0429D8F967A071827D8EB65E26BD8
FCC760898254C8BE1D31DA0BA8D50D89C05FC2B6016284C053027FB0ACC7F156
BAC12E9DE10284F38B54FFE172E7D240EA2B3707F630F80AE88431F3BC60CCE0
A1939E9C130D20CBAD9EA997956D490788A78986410B8EFC463F15837AD14842
E898C9C34E74DDF7A6CBEE12FD1251DED5FCBEAF56AE1FA18E38EF60F7FAB90F
E95CC782FFA77F28BC78EF02C9970D10A75548FF0D8DBD9E3FD77DF3025760B6
AB2262BADC9920154F56FD1BB872BEB7104E006D3D6E29E725A8C2150AA8C6C0
A5F7D7046D1E98AE07F4DB77EE76892AC2518863AE3378F30F8BC6218628F04C
7154F8AB62C9F3132DF571F765B9C1230562DF7CE9C348A9783121F81DF233EC
01E131B748FA39462397BE7032704E9F2545083E680A6DFF2CD55C8F79BCF9A3
5A54B45DFBCBB57A616789413AF2C05176E337E4840037001A8E73CC9898B622
B481B0BD170B751754777175211736A8DA66AA57B3A307A36F32D41740CF19D5
73B25FA953428FACC768CD406FEB3F9367760D47DC8F9814FF02B04911F610E2
E787E299CAD8767FC5CD2A8BB1588D0448E8D038CDE5DB6D590709DFDC3F5F6C
A0B28AF76DE4F71535E173244DBBD6F99C15E40350090E2EBD9FA8756E391675
5BBDA1BD9F4B4C61A132B63E2A5203138A451E6BD22DCA701BEFDB368AD3A7F4
07520048EAC701BF3A2C167232D5AC13D9E1C39B1C3BBBDD4AE93BA493CB987D
C53809EC27E751376CD4AF101035395993520F963C05108D295941FB640A2B82
C2165A70BF3D945D30AD3131FC7E09C28EA072FF340BDBCA91C374E1AC4B9F33
E90111C1BC043135C7233A895F9E47F669CC169E154597914DCBEBC60EA0BF8F
BF80F43B1E57BD284E59CA3C87C768BA9162FEDF95D410D8A01B6035F1E06970
49F8FCCAB71ECADCCA55584621F65670F5637EFD5340BE5F8FFFE24EEB19EF32
3E19861B643F33E62393A72CEA0672C64A9362629B334F5B0061755E1E1418B0
C29656C70B6BC9F3B2C1ECC63492962B685FE7195E8B966272EF9876056EDB16
9F06C535960AD6CB20AB6BFCBDD95D92EE25508A58B20C16EB939872EBFF3010
19FD7C268823FB947D613D750853361E08785266CDF56356A5934EBC6A9779E0
CC18881399AA1A5668B263867F4361C5317C7594899C8C69D54D41FBFB47840D
03AE8BDB7D48AD81A8A07C6FCF492C34F62F5E3EC2C0CD4C79832D45721A497F
A396CF845325596830FE85FBC1A0B65DD812C6C37950860EC4A85126C84B64D2
06681BB3FAE372CF88DFCE9DA5613D2D60FCE063DC0DCD1140622980757CA112
33A368C6C802314768D0C4D8E871297727A501AD90E0C3A6DD51278B9E83EF1C
03E69332D24DFC7D23BFA1EEE8A245C15A49F2B6E6107FA0E2E228EBB76996E1
D85CB9B685AF01B381C649E8B16CBEBF0FCC38C451ABCAD88A1584B02EADC60B
B6225D9C1FFE7605251F5DA921D140E547AC97D8979BF736BA8D517D15E523B4
E4725DEB0CF652F679FABCB7A19DAD8B726466D08FA8C73F1DF46A073090887E
15F3072547FCFC826A011DD29244C7079088575EEAD2576855A942DC049C07C6
F39CAC02F6C6EE5A202BFD7D6B1461255080FF1B034BC8F9A85EF81114F8B680
1B61B9333A1CD1F022E7DDD2087D6CD22B23A017BBF3B387B3D249DF95D8A747
9D926E7CF598BB2F625A1D2B9B4D2CDDBD4CF12797ADAAA7506183D0FC2DD6CE
0EFCEB51C3C6AEFD48DEB7566300AA5BF7EC6218EBA55F6D61102DDDA5DF5787
EEB484203BBCCC5C24D79BA51BDA6B453147EDB594EE41587B352BFCFA8A77DA
DA5D1537F8017E04F5467CCCD54E7759440DBF5029856FAC757C0AC4B7A14F6F
30DD4AD455171007257605649D46D77B3A91525849A75209C52A9D4EA9A1333A
8F86891455D785ADF7F0C5BCF5515629E19ED011F0EB01E5EDD00134681F5A41
1FD01A4329A9F8CF14E743BCCE05F1E72DE1E4BBFEC30F803316DEB3C23E0A47
62ABF2405A282E1B51C5635F46EF980BBF6AFBAF3DCE06DBF6C0223854B727A4
5806250EC8902301E823ACFDBAEA26AFD9BBB2BCB41611B3027A8B8BFB2E88CA
36367443AABE7976F4040F288AF5F956BA22E36662AED5639E4211F7601A928B
E9A93F32F01951085B3A57782FB837A512D1083D13EE76E2616B3A73E448DDB8
80AC815836F1020A717BA0AA6452DFD7C25E8A53AA3D1D491C528BD0F0E4ECCB
0BC871FF270D8C5060BCC16F3619448D07C24DED24F1DABD7C3AF8BE470B4EAD
E86F5304CF3AC3390DDE2BFAF067F1E5688692F1F2DF14E9C4E67D32E3FC5CCE
DB9EFFA21FD2EB04E99995EE313FC17736A7532A138A875CFE5021A43072E565
7FE969D151D520D3EC9A610FBD650B9376642B5E4DD17C4D20BB29A44A938A7A
27758F63224FDA1E2B53B2285842B7BDCEC5B9B90911C58D64668F066D9DAAC0
E459A014650DD9C51654A1DB3F0CE5288371387655BF45C3CDB2BE5F782C7F58
A62AF269313CF93D622E110034234D3F639E1158CB5D1FF4716E503EE0BF4EA8
FFD59A2FE04069040AA21B382123BE58B25AEEDDD4A55D578257858E13A7B6DB
F525EAA85573E2CF6233E6F2FC29A36E7D14DC5378A3FAD45E585483F3333F53
EA7B8E7361F9E88E4A560D0763A3C3D357393482711803E8D7D45683B4F086B1
D20036AE97BBF3204BB8CBF120A49604B04D228A7D64F4A0AC0ED25C575039D8
13F8C6BBB632EC1FE6C8E2DFD250CB43E350E10B3CE7D8374D5D73C94D6AD3F3
0EF5D38D52FE70485EAA47E403D3E9E20500BC1FC5B6843E0FFDFA4D13C621EF
63E8F54DE4126025DBA2E567C4D5B482B2D9DC0DBE4C33C540BD2C2888BE8166
664CF2903ECD3072FA8F2784B5192F5F24EAD6C2D15A53CC61E4AC749BE0D0E5
3A7085EBFDDF7CAF0A6745E2671B2F89F6400DDA49A9D01C57EE705F8DF2EFE9
AE12E163B2F08114AE0E56A3D3B060C275E2639EE9DF770D77742ED80BF3C329
E05FDBFF09C3A83FBA022CCA3181EAF79A65C0FD70FAE177726C9F59176F85FD
3F8E8BD92AF18F1FF4039C7CDD749EBF2576ECD7D12DC16AC2647F4A589F99CE
1407446A2CB174C2B9B6C1EA71DF238BF92555BBDDB7D9EE38341CAC4CE98733
79FD81A5CCD0CFD7AE068FD41187978182B3538D2E38B2108B33821359B1CBDD
EF06F923C3B2523CEBD952E0965FAC7DA3F2847146D7ABC05AF9AF47EBEE8BA6
2436947F9897B5BF56D32C8EA15928B8980E43482930E9CA714F6641DE785084
7FF74324CE223E4257991F47E9B52F1C1FC80BF4A4CC5C2D09539CD288192D07
8775EAD058CD144F7302A75D19C5E1C929D1F973E0012893C9E2515593D9DE5E
82F080329573958D3CC99BAF88DD033F4E2E66961712F6298CA91BA5EC037609
23ED61E52CFBBA7E39294FF1F169D07FAC913CD0FAD4A3AC3D4C7F4036A1A17D
704FC705BF8A1CF919BAC7A547C300A9D210463AABCBD22389BB748846A0ABDD
0F50762C97644B6F03F3E09032F3AE90C2AF3DBCC5CA9D74B2C974E73226D82C
3361AF0FE409CB793241192FD9C11B5007B754B4FFD79ECB04634229BFE7A51E
85E092088344975B7A9458821525AF7592AF280EACCE9EA17CB6B2EC72EFB72B
C32A679F531283C6275E3B1E86AA0A4B3F8201D01ECFA160AFEC3E6863FEC067
692FFF124B9350A1BCC971DE6D6A93FAC6740C6AA6B1CF930CE96F7B1B1A4B97
41BB1138CF60F05E76FDB386594958494436403C45F8D180092EB0A86224F88A
F35396F671AA1378DE3D970DDA29DF0EB01384BBB3B2228DB4A98E918DEADEE7
D90294BD394D99A1BD681FBA801222963B906E003532FE7FE066E85F7E3B2BFD
83975DCDC6901E52FADAC9E2E32D6E208D2A02672F988F1648ED3D1E0561DDD6
9CC630563071E28147A950191036E5E0F87A085182B1C9B281599316782BE8F3
1DB25CD9518EAA9CCF3132D1CA206A0C414E2BBA24CAFCC2E8C394108F147AFE
58E59B8852138B4B2D9A855E5773027AD32788B3AA2920CF618CD34BA51B7E40
89640D9FE727FBF71EB80A66498C8B0B42AE0CA51C4B93DA8E62BEF424ED47E4
ACD3C280D4B98CB6BB0E85CEEEEF4B01FB328B09B6DCC2E0522E08ED2F32016F
0A91F12C4AF6BB523F156ACBA3DF5715029274002484310B193C881722D76B59
ED6C66439E799C8CB351573185C35752476D0FCACE5BC521BCDBFAD09606921A
C1FB7E78BB9432D452F9B0ABEE5FFBA15E51ADE05F6461CD7A2F8FE3E9B6C744
83F896D9384330682C7D8C6506DF23CEEFD2E0CF41E9CFA4D9D986582E3EDC3F
735DDAD65AAA570CA60474E14AC3FAF99ED6F260BBE64EEFF4C26CB912B4E370
47560DBF387C057E5046CFE81D7D12D0BF9D43D839CB8431A914F8C5D3B41B57
CA2DB9D2F98A94D10DF136C8E3B351AFA8809F7A8310258C04D5737B453ED7D6
05CB0B6804B491E1D1590841301FD85390EC590224BF602AA57BCD20A78C94F3
5D7AA6140CD1E579E03B388A0264980BA4F91ACAEF0E8ED13AD9E691606B332A
2D3B5D3B93ADDCB3FA1DB2F54E3EC35E7D521BADF693BAE462689CFC00B9870F
22180DD693642474AC7BEC0D17A8DB551375E89E05326A4BBF2F93BC2B88451E
31FA0CAEAF0A927D5CD4FA09EB828A64A58A5DEAB2563C2C95BB3EC92E88F966
CB5A69C5289913CEC2B495CFC45F3B6396AE119AACC0173A1503F184DF811D50
09E08F824D62CFAD9DE81B5716BB7DF7969EF4F995988FAB4D1FFB79D90C734D
E9CC45FA12D23741EB23F25BA82A157339C9ECCA22F72BD6F122D43180E2D061
3DFC78EA41171E8D5499F555A00F7A7B0FED2BF96F7489255331D3338C45FA73
75E9F4084C467EF13F33F6BD54CB864B0D35ACFB5BFF04E2EC29D73451771E70
63D9093764A7D5A704D024136D6E8E20EFE7E86986504790515E858A7F6467A1
8EAF3A9E27EE4D7DE899BB6A8A82BA150D40F21B9CA48B29C9EA7300E308372A
D9A3E95733DAAD76A114261F93015F587715AE0FF38C9703E1BF155B7923EFBE
C908EF7DE25B6C641F7DFC9A6E13B917F90A651096E1C1FF5EB8C98567F4C574
BAEFA38B11E87FC1DE1323F5B8A998A8D4A137BD207EADAFE66628E352413506
1782B2ACD5AD537B2F082FCCAC58DFBE16B7D7E1C1A4C65828DA1D3C773672F2
38403213290BECA1AC29057261ADBE3040FDD88DDC57A25C38757DDA4FE5A7DE
41C254473BE39F123104DA7461A28FE3D1E8212BACF04569D4D73A7BD2305511
423D31F1D72C1619B04FE1AEE813F9B83BA6A229920D12DEE5CFE54B2F453CD7
D233AC31379D819D4CE6D6B3DDFBB644ED396D21F9CACFA453F91AD6017BF54C
10124CCAA3E4D037C9583AE6C6602DD2C6B6AA7C6D032F85B34A6AFA5462D276
189FB1D8C5C4273D3CE5C845A634088B607C14ABF5C40DD4CFC24A44F533FD87
7CA666A2762AA2697A47A2ADCCD0B1DC985325D287FC6211F0F7C9B8C64BDE6E
36A75915CC7BA94914BB97687BCE1D907F3B5A6FC10B85E39337F87293D3E3A7
BCC9357CE8350A423A5F47B8574D0F99BA100539335C36556BC054B39953C4E4
749B762D30A924ACD18D217624C877E6C123FFCBE8E7229B5B1705CCDFD47981
0B09E4026E485A4D2FE7BA21E9B55535CCCE0C3215944589BACB030613BF79FA
ACB1E9B086ED77811898A170100103E45AC63A0A037294805B2ACBE830D8B280
66AF2D04CD5648FC9E3174F0E03C19161988633F1679D89D72AE7031DE02D34F
351ACE9B72F4B11D5ADCA071956C9B6D3F720CFF63BF2ABAA4303C4F4992D0CB
9C454F57E87DB96A61E31F6B845A70CCDC4CDFDC4704557AAE9E1EAADE1F1D2A
9464BA20038AADB2BF2194FC3B85C1749DAE29727592C8BC5B951400F730DAF2
78E1C72EF1CC91F01AF185B54603D76D4D4F6D04061110E69C7AF99CF2039D01
15A9C5CD3CA9C05CC9F5CB358CC6559E55914CE02DD9AD20A691CCF1C1DEBCAD
3CB50A0A3875AE4153B8F2CA5F5F7ADAC65E6DE255305BDB92558EDD48225129
FE5FBF8B50549956100A9D8A5B898AB3B19CFD6FFD9352AE41EB81B1851293F5
331610055F33DD767AF384391225E934C4CA920BBF9C6F23E51B58FD818D1265
561B1BA15253E4FF8FB410D55290C9D03749ECB9FCC2DDB9187369CC6DF1A6F6
DDA9607CE549C033B9ECBCC5BB12303B5DFEB06DF691E6493D70AAEB8D757470
8D903A6B4FB90A134B773F29A98D9FF4EAE08CD183F693566B5C2B5440B346B6
7BB0AF8E1B807D6C21C3232605B5627A9B0E54D44575E82BE6E19EF5F34532E0
BDFABFD6926C4F6DCA53F5608FB71C3B45D218BE34465D840D4BB4A842CC6491
ED835B6CD253B0CA31C77C96C95B4E13E66E91DCDE90AE89746F42DC7E5AF11D
607F3CBB9499B29634D784DB86744BCF76788D4B8B05F3CEE55D7D9A95034419
6C8ADA228611F816795F519D9F8ADA2930F9166C8F96A2B3F71FD745AC379E2D
EFB762D7FDE14B44AB7A57DA030819018984FC284C191F26E291E0D79DEFA097
0159CE35BF06FC34BCCABB5D0794284596A232441928AFE6C08A46757AFA99E8
B7E9507EA5D93E92BB4A8D16BB668ED97F9883054730AE07D6ECAEB12B1428BA
C303173422282088D314EAA05EF0B46F1A797FC15DE2C38AA9627DA0F4672140
A2AFFC50E57DEBFA9A322F78F36A12225EFB3D0002EE30983F95E2AB72F60F71
03CC066692AA30CEEF5011D2095E49A86BB18A5A3C3DDFBB7F286833B023DB54
6F0032026BE7C2418EEB63B7E32F34F0A431AD04DD1C0845D260EB2110088721
76604F585B6A1AC59B4B0B1E2621C967525FC89F9D33E4B90BF3161E33D2D591
17CC2DA86B48757DF324204D47267730A0E317093E096FD615472C5757BDA3A1
49DAEA4FC94A0B32C9BD09043620735CCC9807181A124CD33337B7E0CFCFE30B
9E312DB0CD5618515B0DE597238256928E5DB7B48BD20D80C6D7A80AB1A97176
CE74409B50BCA330910F29DD0FE05F789431316DA4C61F7E4F4DE7930567653C
E86EF488D648E4D67EA0A7F74707EF5D1A3A52BCD215CBB76F046A9A273C8EE0
AF68D70AC88CD11D5197A2DDB8EA268D1B9EC25284A3D2787AB3133521EBBD93
0333EE120E48D2CE6DA5C3C12159F5D45782118F4CD550E9A39EA9E0638842E1
6DB4F2589AD062C0A858CE9CDABA7D2C27B6DE63ECD9206E12610BBC3FE7B66C
DD2C88B52BDBA0C42204EA4AB8B215E47107A1745430707AC9A262590ADF5AE0
C50F342E9F9B917DE02E8220FAA9AE7F100F0B24E011B694F8DEA2EE0841CA82
AA0AEDEBEF4FF8E50D419B3699A30ACF94FD246B0EFFCAF9F384F0CB94A4EEB9
15BF6161060813902872EB5541EA59FD6724F475085CF357EC1F77BE4ED80429
1F5AE98B8FFF2E7358D64C9B02D9BA1E9D22EFF31575EE5FF93A260F2E92C780
7C744C97F7D6FBE9C829FF23FAA1CCC816DD247A60C14FF6264FE706455D550D
5FB90097CB771CA83DAFD4C838EB1EE13FA53405C1C88BBEEF4A70A2892D8A4A
1AFB636E169030898CCDA2D8C3CD93A9E806F6C242A01591CD4DF244C227EC74
E9E3B369468509B5D6F7B2584CCCF3418C6E58F19E7B792A95D8B38F8AE694DE
234DD296A035A04FBF38CEF823FA8BB61BBBD53982DD7AF9A2AE29EB230175E6
39BFD624575BBD4955C9D124B49A26064DEE0F5C10389834FE48C76D9F264F52
4C2C4D90392E78AAC887E2747E344F077D48EA95EFC4781768D551EDB84330FA
44860C2D9EF885C21DB264439CDF151AE4F212224950615DA2030DEF8A295D06
EBFEDF0F4E38EFDBF0DEE95D1AF96EBF6617520DD0005936969E616D2D88AD91
BCD7819209185ED17773188DD57484E65F2D454D31114F6BB6EB3FD6FF68BB27
DDBC8578B50DCB69B4BB0C9D75466850E548D65B76E2FE9283D6A8B38A63EB6C
F8890DB2C66ED386788CC18C7AFE68E0FD1AC0F92174F3D4C8EFD2DC721AA4A0
9DCA57ADECBE5B654210AC22D40209DCD5601FBD865A51571E8EAE967B673879
CF79E978A565D6BC2FC4966712044143E1EA4BFAA69C906BCFE2791A500910F4
82F121C03D6128C10CE7BE5FE9EF6706FDF79FA0044815E42EBA24DF971CB427
631C51A1B5EECA07E1373B106FC2E13D1E362022529C6F12246B7A5140510FF8
30C9B144779322752ADEA44E5886A3D56EBF9E77DC28E09513D026EB721F36E8
64FA0A570545ECCD19F298C2F0C69135D8485068660E36B9C5CDCD5104DE92F8
FA7F73CEEA1FFF0E8C43D8A273937B7B70444C71933C90CF92BAEC7ACE26BF3A
7EA1679988CE645CD11FC6A3ED8F1DBB535CED245B9D1EF591AAFA8EE6899059
D9039DFAE90751B049970D989B7FE501156CB32AB038E7DC8F9E5D0D4C1317B3
3EEB88A6A8028ABBEA5432FE1D244AD5B25512236187295765DE41A6A54D3709
D7D694E728728C31BC7B55DF12F41B6CC436047377820880BF0037D420896523
8B8B8BC760F2F70D429904471973C4D5BE8A87672733ECC333C7A578C2005DA4
64184845CC4AFD244E0E73CF721D840454A8BA5C0A8CE3FB05032A4551929194
32314FDE20CC0D1FA6219204F9722344FCB769D885366B38CF49647CB556B0EA
7CB3251A794F1D7DE64EEDEF0CA24784706F7E21AC7E3A74F5364A88F79B5084
1B9B30779D052BD75957BC3FB60841D35A3E394E96CFCA8A9B3D39BD01991187
008D2CBB99F651F01E6BD3D737F8078E3513E9802005B6B80E27F95BFDCCB716
8A4CFBE62CD6FB2D11F26CFBD8FD28D65B14679F3771A48DF54528014F9EFB7C
0DA78D09BCA56ECA114CF766A1D18CDAFCD42556781B4FE7728F6F2E0B0092FD
093CAC1C8D26F25976769E8609D3F15CE4C1D103815EC3FD16EA6D6CB70F4677
A39CBEF701D7CECBB86776D87332C440B33D2606C98C5FD595C5335BAD44211F
4992F60666125544EBB34A0506AC0D03A37DA44CC906F976BEE72795DB09DF4E
C6F68BE43716D152CF5C35162A7301A7D36254138BBE1C3CECC87D96A3BD739B
5749F97CB48021731824255631F2EDF989DE56274BAEA8C2B040CEEE98D035A2
9452FD58804668236A2F99F0EBF1C4BF627FE9292D6D1E1A02D79D4542C48BBB
81DB9C496F94B942BFBC00DE29B34804D75F8350AF17E7197385CC41BF883959
02585CF00148D2A83956133EB434ABE24DEA6212877ED2EB6886B5F18284B1D1
C5FA938D67054A6C69DDE3B4228F4FCC4C65CB56D90B6D2322D109515DBFA7D1
68BA18BEB52CFDCD96DF9C8687D75CE36B74A56AEF04DCF9D8B570772BC5CD67
85296DCF85E5172E565CBED007D523D24CE83C895CBC203398DFBB76B707AC8A
EAB72F3EFC3DF5F9C35BBEB98171C56338326C5191BB684F2AF7B409B994E5EB
243D839E873EB208ADE88ECD8661BAA8311E240AFBA87FA1BE3254C5EF19E980
F3B03B1CC6D379B058092CF2A4DDA06FB62414442EF5473203A7FEC1BFB9D449
E04DF8B433C1D54511C79165B53153DC2206D5E7250819ED4DA7A854F97BBC16
A9054DA06727549F61E1BCFE43CAB47209A013E2D59BA8FD9A5944EA06420BC0
536966CA6A111C806BFBF1BC2C0AC7BB94B93BA843F751A665F8111E0DF3852C
8245BCB14FF0A95407DD767FFB501D6510C658ADE44CABEEB1EF36
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: NimbusSanL-ReguItal
%!PS-AdobeFont-1.0: NimbusSanL-ReguItal 1.05a
%%Title: NimbusSanL-ReguItal
%%CreationDate: Thu Mar 20 10:08:40 2003
%%Creator: Primoz Peterlin
%%DocumentSuppliedResources: font NimbusSanL-ReguItal
% Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development
% Generated by PfaEdit 1.0 (http://pfaedit.sf.net/)
%%EndComments
FontDirectory/NimbusSanL-ReguItal known{/NimbusSanL-ReguItal findfont dup/UniqueID known{dup
/UniqueID get 5020908 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /NimbusSanL-ReguItal def
/FontBBox [-178 -284 1108 953 ]readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (1.05a) readonly def
/Notice (Copyright \050URW\051++,Copyright 1999 by \050URW\051++ Design & Development) readonly def
/FullName (Nimbus Sans L Regular Italic) readonly def
/FamilyName (Nimbus Sans L) readonly def
/Weight (Regular) readonly def
/ItalicAngle -12 def
/isFixedPitch false def
/UnderlinePosition -151 def
/UnderlineThickness 50 def
end readonly def
/Encoding StandardEncoding def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE33C33655F6FF751F340A8D6C01E3
2E02C24E186BA91B34A1F538959D4450CB683EAE5B034D030186901B458D3777
6B3942BD2E07121385120248891AEC2EB33C4E3A0CF00828D0F130C31A918C18
979FE94379C648EF21ABF659253E43CD1253866F157F1DF85AE7E8714F061B1E
ABA3AD094FE8D6293916FA82EE4F486C7E513A06D4C9BE44306A8287970B4ABF
B6D1F9274A5A0BB6ECF713ADBD1260D5D6C4420D357FD486470A74B2F0621B59
A9373ABECDBF32FA68AABB66FAB0C970A3354A335D70DB2CCFB357288DEF82BE
422B9914B075E7EC18835881AB22C2A47DAAA4EEC0A8DDA1CDB5292531E5261E
D8FBC087C00D12D9BDC0051529207238FFF92500581849C386F8427D44353C41
FA42972E325397AFA55CA5189B1EF4979F06711E406A219DCC46C88FC82473B8
567E47B75364FBEE1A883FC42C9CD2E1EB581D4D0C25F509BF595314EA222031
BA9606F17E3E4931D50AC6AC2B63711B0E85A6CBE6FFD9275461474D673694DA
B38706890D6422CBB2B499C0C89A7AF218BD84FE0B13D689EB5930AD0DAB5C0B
55F68356C285EDD85B3C0AFE1B9001572AEC0C3692958F7F3E16DB0C2D0647BA
C1A4EA2EAE112F680B33AD9D59962FBD63BED5766186A1C4C21F500B374218E5
7CEBA25638D9F0520E789B2F39CB0567D6BD72C076BC76095B60ED5E82F33E9E
D2448B364626AB558A979368B0F1495D8C504EA8B6E291E781F5DD708FE9B5D9
9CC26079902BF1EA845CC6ECC973DACF88D956769DBABCCC1F7C44B3B1111732
3CFE60583458E93FB796A440E43018C4CFE846F1C79CCA0416E6B446ACCD1D05
A4A682928674FB388BB109497BEE1F0AD9EB289AD984DF057E8A27F23601CC25
EBA38ED89F18CE03BE3645F75ABB0BA2D6CA8746A0F96518E865AD53CD4F428F
601B06E05B6B3F27C3A62CCE52668854DB4DDED614791C32F31A1595BC2D3E16
772C0ECFFBD06A07A1221AEAFB8CC91029C159B121F677C9AAFDE187994135D2
741BDCF6B4442E6728BD38194DC406A9F88D3A94E458275AF47E670A57FFD531
F72836EE4932C0312FAA0C1CE257FBF790B4B211B413770AE9E73A46BA6E12F4
A58A5CA4121CD6A7A7214DDA473850650623BAE8D7BC6F4034C6B648F329EADA
DB8049C762F7D3B273FE1AD47F072E6A69282866FE0F37107E9DAA8FD7EEF483
7B825A0E000E57B711220A699F38EEE6BD832C6ADD8CABCF7A9A5EDBA83116C9
D9139619E407AF339C1A479065EA6FD7A58A466C6230CB5A8F8583955E0AB271
536098804287DA09D1CBECBC283B2810D28A1EDBFB2158886231E454146E77EE
C99A662AA0C3B597123548EA9580E54EF1AF866B3D2246EB50B888ADD050680A
40B0DED04F57B4CE47288EAC8F6969FA29AA6B28CE5FDECA6909DE6337F5ACA0
2E982F9ED1C700AE0D0BB9B61249DDD8BFF65B53B51269DFB0158C60C1489AC2
AC1DCFBED577038DE80F87CE86751494320449007EA922B5924F53BA2402843D
BA09637FBDD85AAFC17A8E9B0CE1A9508F0F8E5884AAF083013AC5189718CA0E
705F28AE75ED2CC22B05B89ABA446304EEAAC280A94CF9C9280C98EABA19973B
B596EEB41C7FAAB530481B448A8CF6D526BDEE9E8866C5568DD10AB87853A39C
3B61627ECB39D5BA7F8E095B9F852E5F33B0545269CC9F0661D553F814511378
EBB3037BB0667F0382E4278A7F0FA073A6AB3EEB512FA661DACF8693BEF31C59
4F7D0F9390F99FFDF77D85D430A5383B428FC35C43EC628F59BBB3BDE1E3266A
AACF6605C71D7F13530C884868B786877240EDBE8B6209CD78FACCD78AB90162
7FBE024354EE7C3106049D6C9FAA13FD406182B5F62D26C28668CA145597150B
847315C78C3871F7DF0D5B8BBD40BB58C84EEBB414C741759F68C2C9292B509F
C3F79A0124BF8CAE36821711979AB941B3ED69062C3BF7A07119CF1E5774AEC1
2CDA3F68A61B0DD5FF9CA582782EE80E2D289A653949F11C130F37E27A62B17E
62CF33D67D8CEB212797BBE778DCDB2D0F6726BCF115DA15343D86036069D9DE
E8D2B8D4C86BD6B184372FE0D03D4BBD70D7C4CAB0F596EE01EB476BAD949080
5D2F3B2D14EA2080C10A92034B6B2A828FD966029EB225AE6F4B9FB81757802E
694B776A23E42CBAA7D600E6A8325F925FE1B2641E6F6FEDCAF2AAD609CAB335
EDE800133D57DCBB8364E30E8DF0412836D413BA2CCC0CEB82A667D8F74DFA58
9214C54619D1EFF42E23907A561101A75E0FD14BA6B79660ABC950595625A512
4AEAA6F19095387EDC97C7C86CEDB983B58CAF2CD31E97171669E2748D1D7927
36C57503C7B23811E0AE421D0B583CE26E7BCEB5838D98937A8FC72C0BCE0B0F
0DB622200AE5FA0E5447B49DD7F33D5B4AB16FFEED2214E8629D2531D2C1640D
1C2191055CF12ECBD287C6FF1972F83B2966D740588663797BBC18701436E825
D6F6C0E9C1ADF8CF03266ECC3ED5A2BC3AE5C258832BF0DF3A577B77E4A31548
77DD3296300618B0D37D31BCED986A2717F109EC9EB6E927E8601EA8A0FB4D02
06862D338B6A9D5FE2A945D007DC84B7B200143F7D89C3036130C76A33B9E76F
6008077A11432FB08AEE8B11531D7D9E4638402E9924411430C469498D2F39F6
F54C4CD130C7302660AD87D6A909053B64275E8E65A159C753C58FEEE5E04B21
65C39D3D324C3D20D81C6021C4015AB470D6232B0B20F47C0C63B19AD6DD4FD4
6296A524374BCB3721C8B0F447D70C35227B938FB62D755ACCE2723A0E17E3B9
A81E4164B936D9597BF99BE54EB0664660A4FD08C0CB79492984323195A31F6A
EBFFEA651B895BCD4C4FB81BDE085C452C1521DC152BAAADCDACDF8110AA60ED
79551FB0636D0C357DCF86729807ECCC8D7085BECFD6D9FF2BB0E7D2206C0663
EBB3F8A324AD926D79952756FE5D77C6B42A2FB25708CC99E335D10BC73D48D6
F4543FF11530058CFADE7007D202EE0436C0158529A9031F998856303E36CCF3
7569A74F9983F4452D65F92DCDA91A587C544C6E8AE2A202D60C9B7AF4B0CBD8
661606ADAA8EBF8CF539557AF4D3C4573ADF7CC71426BEEBD0BFA2AC876FB819
34F969233D9E16481DF172AF5C84B317E00D970FB7DD1E55B88C04C268D6A9B5
5AF7E06D60524D90BF9E9E3EC73353A8C17008F932D812D3D9A304DD8E8495F8
A303CDA1601723310AA92784759ABA6F5675D5C8AEB88731FE073C265E5FBE7E
F82C7418F8943681399AB70EBFF255D15895E1007099263FE5A89D483890B8BC
D66A8623A41B8DBC122D21105C970245759913D17002C0F60A257FB1C096B571
6A99518B2365BD7EFFD5E2831ECA6F72C93FA1E05A75480C40D76154986D037B
957949B6B534EFD85D2F7F0EA1EBD434EC211472A719DAAD105EF46B0EFAE2C1
094D1890CD767ACB17E654A42A8A3CB8E046406B6E2E47EE2AE3FE4964D1CD37
F2A01F5197039DC38668119391573FB76E3FA74B98D6744F31AD384451C124ED
D05DDEF0E883E68DDECED1CC1E76366EF59C11983E36D613A7EC998532442E25
73148DEE6D6526E1AA56586D0D423278534076D5C1403EA91EA000F2ADE86462
50C192542B7991145B538E9F6A2A73B1F250F8C13E0201BEE51B935DD5B13F97
6EDD9CCAE0CBD25B8F3D707DB7A8B0FF28E20C23E91315C667C0C8A1CFF04727
F3B440F820CA1D396E942DA6E851E1493D8D7A63814FBFEFECE41597732BD251
1D47A9743CAE18CDBA5534368D8201C2E73653F83F2871360062A0848ECD793E
E13799943D7641C7A36D46042E49616F6CDFD9CD142B41633C2E53CB1CD5BF38
F4B666897D393C800D6F50C6AA66F2E9C4C590E3D79F025F6C4381854FBE27A5
39B6FF12BA22EC7654F6CC15AF341E9244170194564877895BC461A937F13384
34137BD8AD4228131B11B4875787F8EB051CF498C0FA045E70D4545F6F127021
48041D4040AF5FED115E9D64C73F7AC87596ABA7724950F8F7C0E79782DFA58B
0EDA3713588799E49B7DAF595E683A7B18886B799729279EB03B031523B0525C
2C9698D3385DF57DD76A901E18E0D03E2BAD56C270C9A52EE537A2BC121B012B
E9B5967D9ABB0CFD0416363BC5E4665E71854F4BF86699C59D83F9DF586D680B
BC4037C64A9155751EB525FD3978A212267C47E8235CA26C7AADB297D6DF5597
E9024D8EADF1B0D74434F4D4AFDD1A9A6554193935DE1C022243CB7F3CD5102B
7D6FA74C7DC0703A766F9D8807A081CC5636F05A2A80ECAF43C45D76023F65C8
C5E566B1EA22ADA0BB59E79A8CF30F29A954B23640F86191D677C9094F776001
DCD6DEA5FC3A121673952667C957D1948D443E15A16DB2B352A4EFD68B40DEB3
1D9334ACAA2511D719588083DBB72822C2F861932C32869825921963F688CEFD
1C50E9470B8357C65BDE1B286B9E73DD88C2EF3E28EDE5ACEB6831C038B9FB4A
462905055CF8DF118C68BBE20725855D132905155623401723C25FA91C6C8E21
A3E2FA6035757D892CD0E58131605EC5A7C3A9E0DAA1B9DA5BC6D80B7CCFD7C9
A0FD5343BDCC9992C88E093FA1B3BBAFC4D9DA31A3B20ED74A26D4F94FE270B2
E1AD72A3C855D58B3EE0BB4B195973E45CC036BE045A620D406879A0102411B3
23FD7F22DA6C8E8488D1AA348EC321A37CA69B57AAC01F7E7714E30368BFC7C8
E337CBD239729F8E0CD1DAE1A7607E20BCC32A355A59EF700441DCA1F0D2BA01
37475FFD21364F4ADAF1EA203AFFEDEB656BB8641EFE63DBD34A5F4803E81D8D
0FBC28F81152C89F0B6815EE234300053C946EDB5788B0AE61B0ADE9636497A7
F6125E4055FCAEFEAFAFAD246806A52633FCFB2E123E057628F27419A43F4822
6F66E718D476AC42303129BE4E73DB93357A15A207D320686A4F74FBD2C079AC
2FB64C49812052AE2AF2651EC73EFB0C76751212D7745B8FB2753F12425BAB07
2D47C994C5910441E9448EB53559F222D8437FDA8EF469651E7545DD1ABDC9F5
CB0D6DF5D81B4C2C0CB4B741E119E1F2F38172A0232D6FCDCDF0A8EC990F804E
21650A50854C5110CD352D9FAC14546B0DC951C32C89136799F5C33EEAE94A4A
22CAF4F6293A99AC8304049DF77428AE21811A9681C8D3B8532C01D7BB32BC85
B3EB3FC122C46D1463838261E2A6AED87A6DE97869B8A31CD00E8AD09386CF45
D59C83F775717E9AE6D6035EBC8F5C63AAC47621B4D4C186ACA2A10164A480FA
5E65DBC53B51B83267B583D96EE9B28534BCF5A82B6CBB3420926C4403F01D72
D796755B400B2C394D2239D3CF3FA8B2FD35743043261C8C417C194F6D249E2F
3AA77102D7073D56F7C5584516FF897ED725AC402253A06B343AD7D1D232D4C9
6BC0BE9D29E9545B1CE191E20DD252EB9FAC470F1E2B4C0A84E2E16B150AB6B7
C3D4AD084C6BC7D471BDA1A89D0617F2F7E6AD7D88E51551D46B3D90EB2B0A7E
3EE960C3E869FCFC0969052CC3BA847FF4466CDD0DB4717034440D26E324C1C8
DA3F241E5B582FAE28395E47AC35236B324F95ADEEF7596B151F96CD2EA5D034
17D5D42F02977F5B53F87A1F079D917E28856D53939B0969CA5BDB5DA9089188
F11946F7897BE89C171C9702BBC9B8A7F8EB7F3C75C3E97AF6E94004B1C50965
E027D0000E042940CB64B167FD99F654F530ABF0CF06C7324943CA5BE4CE5DE0
4B0E62E5F87CDB3DD3D57E37DEB5BE937A2405F2B7923DB98FCCD4370EDFB335
C481B73142BA6116F5C12A929B588E814FCB8127FC06F3C2656D2D416D99E461
FACEC017D9C2C0067AB2BF3CB1539824AA2276E6F1FB2A38DED0BBDF947E2668
D4C246C9F7DBAFFB3FDC483EDCE5E963349C75B7FB85257B09DF15C211C449C6
822C9646AB1C191187DB9D93B4716624ED19531C9E16D9C3294BA653D5301041
35F6470A6B48A335167B30C8B12C1E3A83D8AAA39C9E441D2838363F466B559B
CF9DF051280675852678D41E6BBC2AC3EA586BF6E8FF0090367189994A622F41
18A01DB51B7772D4D7FE7250E2F636557AACF8C38EEECB2972011DD32FCEC86E
C88A2EDB41F3F02ED13BB3217D6F9BDF11E7236935420367A3B983D8E315EB6E
DCC835C8641DC00CF1BC1649B39A56F78E8F6165A2E0B43D0F7EDD28361EDC2E
A807A27633C5D10EE9B115933CD2D11B4FFF1595A99CBB8009D113096BACEA40
FA82F81F21198ADA47F34A0065C6CD49B27AE2E0C0539BFDF5E56DDED36ED88F
8A87F58E59E3B9F2A53C1157519228054686CB2C2E41D21563108D15148BEB4B
081CF2CEBD6879F3500FBE2F1C1D405A3F95FF27D1E3FBE028D9BBDC443AB213
065D71882D396443813EBC1114E80E0F17EF27D80D81DFA22C21B98C84C13E6B
15BDC8C4EC4EF26C67D0A583AFDC7137AB576072EC79B302BF6AEA600353370E
4467B8BDF3B4D2FC1A0B39C1D82A081C951D2BEAF8792EE97494095E1E43EC79
CF51C560CD47AD60DFF0AB0DD067CF7A446AEB1F8E76234E12A78EBF72D119A2
5B989239E01E77DCA0CC19A46BF15CD1F0443C022BA8FA2655D46F5BEA585566
48FD760B870F39219DC836151320E716C3435BAC631FE49F0F172E99EF7226B0
27B97BBF30C10481C6DD3FFF34BA02F6CBE8AFC7263BCA464711B45CB7D71457
7B6C4F8EBC9A738CBFA7EB56B411A938E2591AF4C4D7FE9368D737181E6A31A0
6DF04338EDCF62CC29398D5CE06EC19F56A02FCA5416751CE4438818F11486BC
669C9555C52A50DCBF661E0617084C47F57B3ABF93AE80D73B036E0869BE9357
020E108B0036738218DDC5DF2AB09B262E341F9306707058EC1D98C23057AC2D
819D23AFA38CD0765973A7E78E95A2223AAEF347BB1841BE63C39AC2D3B4A718
676E9225106152DDCD068821E6C19EC7F95B1B87B79A58DCC00AE0115DD438F1
8E897C80732A8E46529F7D3ED0E15275AC79D8FD401E2973EC5F1C409FF77906
FC2FF58C4977F210FF3EB7C62D26BF78040AA9D20D4FB393360DFE5C22E04748
0BD1ECB62F3B53506AA6DE4A32D46FB4483C946058A8F22CDA01C4FE4410314A
7643A06AF42770C361E7E335204F2125A03ADD0703A58C01866719DA51F6FB80
D75D03A28F14EE07C8DC0FA4BBE7F57533D67AC18E8145318FB4F0ED4E5D60CF
625AB5BF77A6CDEBD21DBEA4E643067D16B876A42D9467D6A7F479C0115FEE39
C3B640C3235E1DC8EA755AD1CF8224742C26A28182DA68E70857B73645F1C9FF
8FD06B55638F61A4C59AF1F9CF9997301B69474F0932E3A390D9410C37479FFD
A6D6178621ECC1C12325583F9569F6ADE4803C9E3C5B026A2A5B65A67C5BC732
F9D7B8A784465E6B3A1955D660B9D61D67F7CFAF0D7EEB3DAF26C887EB56CCCD
9BB49C64ECA1A85333F9DAE84BC4989F80F38ECFD00E6BDCFDAB453AB08E721E
E7F71DF14523A758FD13A6489D0174698DCF550597EC4AABE200ADCD4DD37058
558A1163CC75490177DD96CB388FBAD846D64C6D1FE3463A82C560463C045814
11709984AB53AA68114D682FBBE296005990523D06E0DEEA6C3E1165704B1216
634FD5DB3DB165329BD6B3215134D3DF9E42F35B207F4B35A13145AE89C9AC14
B558A4DF0E17A5B20CDADEEC25FED5FA06ABA40BAC294ED6B8CDC1FCBA9E6DE0
473AF55A2BA5AE1B84526A2F8A0373AA5CC1B164265CA2B24AB3712CB1068D5F
17CDC1CE86DAEA6592DC8DB76180A40F0A86FAA7DF49F61AF1C33D6F11F54BF7
E4CDA4D6E2F6240121D3ED05862F1A06F5CFEE3EBE2A964406D69F07656B2B5C
18629334442232283DDEB6898F018BC9D7F8C7CCEF2CF9B265AC68E46E7E213F
2897DBDB47FF384C5D3FF296B0C79F1282BC3564FE90B775C33CA29DEA1A0C53
F7600B087FA9A851268095978C0A09DFD76825658BBA90D47553E9B651C919D8
EDF0B54B3EEB7CC83D5370B09DAE4E0D206BE0A0375BF819D2A6E39373067383
AF2251BE79E9B023F490958D5834E2DA30EC04DFE6ED8ED82F17ED7849241772
7DE91BC1D9ED2B4618897221FAF631BA8351CF0F856EF896C064A5788820F5A6
EDC17F59D6C9C8A8B3AB7CEE2AB03C01D97CE21918F3A67C5BD1E3C573255B48
AE4225221BA15CB0C76EC14188EA19FC13AC49F399172C321925059EE55C07CC
F92EF2CE22E657927F3B176CB2345AD949B8C7937C96A548F1E2D51264BD3CC2
58565B8F8EE39CAB577433A94DD393BEE10DAB78B3A91353B7D0852F902E513C
8B1CAAFDB2B6B895BFA71835BE2D39D4D57B0EB67C2D2CE3D14AD078EA46AA58
172035AFB850C8CF969480BC59F952B356EF2E7F81A8299FA1FBAD4B1460D86D
2B35A11E413806750964D2F01913FBC69E26983B15E8D171C718FA88960D7AA0
930E6CF626EE5E7218548372301AC0545C8DC515736184BE29F33D2D3CAA1E10
467DD7FC31CE9B0D1FDC2A479C15DFF0B6B8EAF39071BC6EA46B73E3FE5CEA46
2D6369E16B268E00F8645D78670B304685B86163D0427A572034D4C02518BF29
C0E3D6E64AD7D495E97570C1D3A5D422361537A3E6661EC1DFF8131AFA33B0CE
358A3A339EE06599F97012C7FBDD2E0C48BC3E438A7A8082D57D7E7BC3F6BEEF
879AFE700F0FF58F53A2463F556A1C25C73CBEF58C66822FA7928B0C1056358C
FC892B82A3CBC47DA41F079CF73877D0A2988F751A6D869F340B95F21950CD8F
CF86A05E8F780F9C3FFF77E8D01242B108CF2879B9C3452AB5706E6BBE398A1F
E83353BF34E8EAAF0F26A933F6AF10D79C8E762D9314620926F26DEDEAF013DF
F393
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: NimbusSanL-Bold
%!PS-AdobeFont-1.0: NimbusSanL-Bold 1.05
%%CreationDate: Wed Dec 22 1999
% Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development
% (URW)++,Copyright 1999 by (URW)++ Design & Development
% See the file COPYING (GNU General Public License) for license conditions.
% As a special exception, permission is granted to include this font
% program in a Postscript or PDF file that consists of a document that
% contains text to be displayed or printed using this font, regardless
% of the conditions or license applying to the document itself.
12 dict begin
/FontInfo 10 dict dup begin
/version (1.05) readonly def
/Notice ((URW)++,Copyright 1999 by (URW)++ Design & Development. See the file COPYING (GNU General Public License) for license conditions. As a special exception, permission is granted to include this font program in a Postscript or PDF file that consists of a document that contains text to be displayed or printed using this font, regardless of the conditions or license applying to the document itself.) readonly def
/Copyright (Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development) readonly def
/FullName (Nimbus Sans L Bold) readonly def
/FamilyName (Nimbus Sans L) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0.0 def
/isFixedPitch false def
/UnderlinePosition -155 def
/UnderlineThickness 69 def
end readonly def
/FontName /NimbusSanL-Bold def
/PaintType 0 def
/WMode 0 def
/FontBBox {-173 -307 1003 949} readonly def
/FontType 1 def
/FontMatrix [0.001 0.0 0.0 0.001 0.0 0.0] readonly def
/Encoding StandardEncoding def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BC2C03103C68570A7B354A4A280AE
6FBF7F9888E039AB60FCAF852EB4CE3AFEB979D5EA70FDE44A2AE5C8C0166C27
BF9665EEA11C7D2329C1A211DD26BB372BE5822F5EA70D99EB578C7BEFD44CDF
045A363056E5E1CC51525EA6FC061DCEBB337208EFF729802376A2801424F670
0E7E6397B28F15BC10B40012B0A3EAEB2693E8F7F627C4C9C7C6C5BFF105C1E4
1B2B9E8F09253B76040D268B80719E1B3F5A55AB7B8D62A63193C4AE94C086C1
552833DDD8F116B5DF33205AE709B3AA63DA7BEBB165B67281827B48FB5EDBED
02A1A5C0784FC57D3487DAA59520BADA1BE3FB9795669924321CE4F466CD8E3F
7E8EC2494AEE80E2DD7A48A6861AF5B9F0CCAA4A2FE2B03498EACACD6B9C39C6
A8F2E39E06BBB061CF2EC380A32EFAD0B790974BB5CC3DAF0992471456967362
77DE34813F27ABE99302F86BB4D293A37F84667E7F3DFEE4CFE9D1A676A5728C
AEB5222FF50DA97E74B2CDEBF725FBCA7015A188891C8A376B9DD8A642C4B184
B1BBF3F376A6D6E31EF1C8354DDF8039CB20FAABCB34D4749B3C8C8D6972CEB1
06B8A5AAE3AE40A91F1F2B1155681A9CC933F87528C99A2B0268B43A3E829E7F
3BD863CB52950773BD9B0731DC4992541D7DE7A055CA65DDD2317F1705C20D1F
93291BCC254CBABA425C032B3B15050D41DA14FFE1B3D684EEA428095A01E931
98D4F849B239AD9D79F4502F0271AFFB0C297F2F347BFB9C137782646F648F77
0076B85F5A929FCDEA2703333F6918B8F125627F8B505C688E30F258DED1AECF
2C86EDCD88C29249A8081731737195FAB7ADBB54743BD66511194DEE2516959B
A20701E2D97342248297425491F6C9471EC9A98E630D734DAC19721F0B324432
C8D7A0B751453F89F7008BA37BC48E0831EE3ECBD8A0A292D63CFC890B28F695
9E29AC3B4DDB78A6883B9272CE34A012A82ADEC0B6B641E3940A438A098CCFBF
C50544B94FACFD9D7AE09AD0632015F81D2F77FC6D80A42EC11D67D8A91C376C
13C8E3444CDFDE4D2A1ED021410F4D6A4E97804AE949BD913094D23108C9D384
56F11025E2D24939114B6BCF579A0315C52F3CA1BCC2860FC1A0B9FB8A37AE2F
C20C0FD44D215FC2AF737FD0339B070D54E664021240071C665DE4170DFA182D
4E385685FB41A2D85888B1149E9A766CB4F309B4E2BAA28CF1F8CC12C1051F17
7F2E8FB0269F00A8A4C9F61FC3EA50B8009493921D920566ABE35A041D01F286
5E2B3E574A9E9A78E86BB5B788713FB8001C0435A2AF29BEAF8B3559A6C72748
CA7C539201BEE06477DC22B9FACB1CBD29E5647531F694BFF0ED77A7847F7C74
1A9C3C1FFEF085A5A87B2B8DB8234F076977B28129676DFED92BF005A132A12B
0D5D3B9A4AA4A2C04E1AFDF8A6B5866B606CC19287478BFD6B8B213C19B39853
2835F26AF7F37F7F99E30BFB9F66A8A8833F7D42174025AAD93953C9F599E8AA
5B732D60633B59C2DC5C080E7881848222220A63605F00205C205B35DEFCEDB3
2E261F8BAE46654CF523D136CCE8B52E83BC623D906EC7632CB075B9D013C926
6B223C04EE5CD63D144DE465DD11AA26F59E2B12CA1CD88BD95ADF73CC036BA1
DC8D789B86226E38B0DB3AFD1891643DF69770905D11D3022EEEE058F0316E77
0CE494F5D25F4667FFDEE2AF8A30E836B33CCA7986436F2250BA687F453D4A5C
F4E61DA5C2E238FAC478170AB546E2F49FC971F94007E7CCFE301062DB793BF0
C98D73A11770D4FAD1B1B8D4D0F6BBFD2C717646CFED93889EB779D89DC56574
6F129EEAC3CDF33EC8821B502104FF31590F567D1D45E3E92FA14AE1F634F3FF
687E1FA14432BFB817DA2C19F0C868A3487600CB5DC8C1C1417C3167002ACA1C
42FD6A3D4358B8623588E7D3EE02742930F99516B2597A022D0A53242609EFE2
6FAC8DD9F8B47025E7F7382C9A9E7F700F306AF2E28A1E1E66A349D53C5A5004
547D9E93E0A89BC49059B8112CA0DE3C6E33CD720EC4BC07E03072267E8ABE97
69AB6F8A4D5C2A8B0ABF3FD27F2823662C07A80565D4311B23CEE3EA3747DB06
6241C94302FBF237C39454C67E01F68736F187FA748D79F84B7CB450A9C45FCC
932A106B5B2AC85293A25872078E4CAEA2436B0A872F31A131A36FC8FCD291FC
EC5A6398F275C8CE4CDA5E898889277F0155E365B518E36D76BA889C4BB94D6A
F4BCCF762EFA3343D9C71DCEBA2CE212711445CB7F88B44D610E558EEEDAC38C
BEE1908987F62A68AA0133ADD133473E155533410E7973C55758853247CD330A
6B61E039648CF6E58A173FC3D7E1FC670322A4E259A6A165FA1558FE561A784F
A50039F200BEDCE7F57392C3D41C5698C9C8F8333B9CF307E9154793EDAE22FB
A40092AF1492C9BAD7095BFE6125C188A53FA2D0813AB238367A14F0ED1EAC26
E444B6BDA89CA11FF988ABB796B6595823707D1A37CD0C8A8B3F7C350305B273
03AB8B016B22376C8C335B8BBA0DEF974EB6F862421F6F37283AFD0F95C4B889
F3E304C34BA795DF6289C9A8490DF490915711FCE65F1E5C1E4EDE5B900212A5
FC7F4DB2C062A1D97D9F3BEB5DCE14B6D0ED3BE5D5861FFF3215FB4ACA8A2DE0
CD63FF091C409C919A7EA8859976C26F66170C35D1CB9B610BA4F332253C51B9
E6E27EE36F0B6F2B961CA6E640A65B8CD159EC22E6191685FA2BFA577B5AB9C6
544250D9C2985BDAEE731006C18928C6761C148F32AA97EA454B7FA5E132BC17
2A77305BB771DB267C0AC6F940EE4E12921A038A64DBD11D7A52FDFFE8A2AB92
BED886B0533C784B8A8B363A08AC7AD4E9217E2FD44B647C292832129FBEEA0C
D3CB94FD161186FD0CCE3AC0C2BB9A898025EA873936EB6940B74DF0013AE9DA
79E2C0A15F3E1E94C13DCEDD60CFC0997AD00AF3C2140D049C8004E21B98FAD4
16BE2552F12047B221DC381F56C09E6590CE09C10D1CD024C5D8BACC87E46323
19B253DBB32F7D4C56535C4452AF3E1AB29312CC2DEA85BD39AEA5C274E42504
62BDA42DD982B05BD21380E6EB86CC5C20C4F548EA0200CBB6F75A14E8534F64
0067BA5FDA229690C62A3DE8F1B66B6686714F62C9933542E039E319ADD1247E
FCAD78FC976C5F9A50158706999FD7CA60D2E022319734570F46E6D246D604E2
7CC427B415DAFEC7C78C8BAB8DDF9AEA4418CB27405613AF6A8898D54705F8E4
540B96C252F33509876FB7DB62D7D23E5A5F5E1D7E8116BE1D2C64AC0ADE48B3
2004072B5D8A57689F926B8744B8D5EEF58BFF3D274D1DE6D33847E2A638E0C0
BF311B1A7616A8D92DD167F1B220A35A4AEDDFD34EFA03BB49B8FEB98A96C113
8D3C088BABF1B153ACF8DFA6B388F4A61E14C120867BBFC276169DE357737949
57E2BA5DBA99DE0C789D121B1DAE0063B73927CC7C5C10E42FB65E13D33D6679
5ACC5DCD875ACB5623D34DA177B1DD37F84FCF67F3C12EEA3C77C634D61F9A81
5D8A27A1DD4DAFE4CA472C79C875A9394A9C6CE0611606F90DE8E9D583A5988F
6CDAB81EA10DDA0C81B973478D9C85029C833B0459C3DB1456CBD30993410C0E
FDAB2511EFE05DBED355CD577E2E8F8795B58B5E505F718707F15DB2DDA88F0C
D48A0A552955F9268A1CC9196A7161D400F5DF9816CD9848006D324B426F253F
3212CA11AABA54285DED8BC91B66B2BB3BA9493C94D860EFF8EB9BA7E8504849
2E083968C22FBD3944D162776B9A9680FF3AD805AA74F6559A6DD45EAD937A10
23B6866780BA565B1B487840215ED98A8CDF069387E4FA50DFA729086709CAD8
F9DD76AD45ACFAAEE71762C0891333FB62216C8ABD214D6F84B5DA778221A3CF
A0DBB8397173FE341A12BF570C4F2D1BE311FAA7BB1FAB62307DA6FC58A60A2F
2CC32234F171958DE9E32687B6BED27ADB1EFBDAA29C1A22FC56AE76B0652764
B2F4AB03FD01A2662B879C2455A1A1A35DCFFBC0466A81247D0D69510D8D7D36
058B06F3AABB121CA1540BA17F0A43DF8A4EDEC37C7C3968C89EA69B3DFFE6E0
FC453B90FEA4A50B0356EC46A4E7754D3BB9B25BB9A929283621035E779F46ED
D935018D616E4B6C65760218604DA7671DB098E5951AED115AE9D4C6DABB42C2
035536E8F7D9787164A60BC32326C2D36742C0D71D21C63AA4DECFF5C797DF57
7C4FA8DF7125193E2ABFC8962C81205011FD540B6C1366F6AD6AFD1AB243502A
86FB184B3832FB1027D141234E6CA6A30546260103133D05A38C8ECB5389BFF9
AACE0299E84FFD6194F127A439995BF3F7FBF49EE7ED496993160FC02B552742
16D251460B2E2BB253BCDA0B89BA6DAD30B1DEF09CFC93E408D2EB9D54121D3B
7A1A6173B4A168A8C3603A54D039EBF47B0938CD3127CA9BD4B2CCFF45ADAA7E
204114E5CF343E505739E18A17A489662F16CEF4FF0CB4CBBD4D0CEEC2269290
90A98B942001B56D54CB65DDC734C85978CCA913C62D663540462DC1B2026209
DB8DDF5F93985BDDEC7A17C057ECBE98ED85BD56300DA794ED56DE49D65F468A
51513C6C0C4E7C73BD8E43A845AFD0DF8A3AA1BE8F7AB1DBB27CD8BF8B107F22
DAA867CA22723CAC55F4D5236628739606D8EF5ACD55D67C36ECC4A22BF19436
2C862C904C6646E450C3BDAECF9C38514538F9F0536817398DC030E0275051E8
00D08BD92FF2BFB06CA814AD933409C99883AA5D858AD27C1FD642F61A533698
803DFB2A20226E582EFF3AD7DA0A9804A8F1FA82E223310845A025D7B189A573
6B5223B661222CF49872856674212EBEFC4A56D4A62930DAAA559BAC06FE38E3
D3AFB6B950C284946E38E8CD1D7732019B86C11D799B79F33BB09CB6771F6378
5029F67FBB2BC8E9AA0014C75790B06C375ABA39B49AF0DD2A35EE24A912A8D5
E2DDB74CC4C42DDC9F742C12077C473AEFAB9D2A0AB18FCF5A40C9286D069839
B0DC49FC8A2E0BCFB2A5224A20C5C14FE0568AC285C0DDDF404FE29CE4952D5E
2FAE0C3BAA7501ACAB233C50CF105D6197989455792F63B81C87AAD19F4E39A7
3DC26A53BE3684958243FB5E2BCE74816877C16C130A46E1BCD0BA0BFD29410B
E0E15ECD8C55D98A2BDF0BDE60C6FF1E1D166F619543D6A3D1ECDDAADA307C2B
5CD23A78B54B363BFA1E0A7F252FCB092F9A0E06E6873997A3490967DCFBB99F
FA480FF4AADFD07BDCC96F4E13E2A020BD8460CC7D8643D3A2459C318A4027B8
176921B6FE6F208565573E89FE3A8E5DA168E4926B8489770DB1E286049CBE67
B2CDE89FCCA385BDB32C72B14A944ADD33834142D478550F60D1094963EBEF5F
85625D7A90C728417D6D39C02443AE2D9A5D1F0C21A65C82424605277DA7EC4B
B7E909BDFBA2E6F6A24EA2637C80EF0080D6FB660D65C6BBE76370F0389AB1DC
905D2BEB739F117C0642A3443674A4D19A5B037FFB99B7EA1593D47EE288EF7A
4D2DADA9C29665953647AD6B6D8268A885685F15D56AA2AD384B7F6AC92C7F83
AEDF417E0B7425A39F49A47A3A698922C8204F2BECE5E6ABFA06C7E124C88F55
EB5AEA0A3CA8269EC3AB79D749F08661A00D79CEF0AB1CFE6E28E7042910F7B3
9612981022FFFA349891F4E5186BDF084C5C8F7A7BF34F1C86D862BF33A46509
346176931FD978741654704A4035A1E7C8527662CC0F00E35FC8D748E1071C14
C88C1769B1A41A1FD97FC46BB3CB958F630459650661A7B4A0E4963C9E9FC0E6
CEEBF7774F40AF36C71CA78CEEB6BB2E3AB2F6E297EFD86B015A84D657171B12
AF2E7523DC4CAF9D92289600AC2CFCDD78A8106CE6D993B21D4555D24BA389CF
6EEBED581868C0747DA81A81F48818320F5D86E542AEEA4E64F0C4F1545BA8C7
934D100A5E37A94AB69AE9538BE68FBB57D62EF5FF8DE98899A5F1A04019CB16
2F7BBF120CDEE64257EC3B30B5EF4B7F0F0EC273B54727AF998EF726477C8101
3C8ABDCA62FA6E2F80DE35A2338CD8D5C4A23264CDFD3ACD21F2431580556CCD
CCF71D363EB5DBC712A8F962F7879D063B8B80FF811036A99370C24B1FDD18F2
0E71A852A83080567708AE25C289AA3C41ABC57A5BD5CB140E02C5A8C4AAF911
3292E7EB5D8B7370D20FC490E3A629590A01C82AE5A439E880B3DF30CC96F57D
799B6BD986A2913EBB47C6D7A2A9FF37198A475516A490AA32FB1922E8E2BC4E
F70F38D4A733669E1D9F459EA1F9FF396F69F9A313573ADEB344FB06B0683133
5F7BD2D74C3C6A019DA3790631E360AA6DBA1EA79537ADD7412304B12E8C5396
F8683E51BC4D0556BB410531A5B2A5A6D96F9F22211F0423C01A13086915E0B3
5987B11E22EAF052F0A5F6FC2B09C6C9E45439EEC1ECE096E6E5B991725B7948
09774ED03DBD95A913C12BC502D3302BD8EE54D2318C6E6FB8AAB7E9ADBCE59C
015F68BEA5EEA4B432154785EB31F8E4DF3CA6E596CB562C98A8D09FE551F142
955B8EE5A161A4529B735031ED0B3F054E748530C5E44CC3639DDD83358B0A1B
6D3E93B89F30B32D39A54B987272040670E0D510514D64256114CA0E06B4DA99
6CD021FB5D44F9B67289658488E28072CAFD77E895E36ECD8881C06314B93496
2984C7FE400CCA58E6D19A5EB5675E54C76D75317812C4BEC982C36DF246D820
C031D718CB10253859AAF836E53847502BF4A104BC474A986B4DB68E5672F031
A53640E45FADCE763ED9006E468579E06CCBDFED3C5BED02CA07F96E3DB5235A
B9484989D44C6C7F5187C27310CD065D11C4A7D5A010473E8EC9494D7980DE02
2A09211A182704E0AA1EAD468E25D4889D34B63C118D994E1474123DA0D74228
CA1A581B8D8BDDE31F6432B757B5F1164FAB22A39BF3497AC8A40FD502ACBB13
9DD459FE78986211F8B93510BE5EE3154E58517EA65B8F73820F99C141D9E977
2ACB63733222D0687E1B2AF3259B1728F86AE023B2F1C325C4F4028D5D14E3BE
099597848F87049DDA4AA688DBD0E607C1D2C5D1CD98F613BC2E4FB25454AA38
231EC3ED25DAA194B009096C46253EE98438FBDEB8D598CA9D7CBB780250ED96
612FB42242CD908FBE9B98C77FC1234A43D97D9BACBE2279A5E68C0C192E5E14
393B889F479A2D37240C6778E69BB90B0D130A32445972FA44213D14B42DCD2B
B136C75DE0FA273D40D06AC07B567DA70D25CD270054F953CC57932BA4C9DB0F
1585DEF8C6BBEEA878DEA3F2591FE6B5C9AD96FDC7269B6E168811F098EDB80F
8AA0DF34FDCB713062CC81D4262A90790CE91228EFACF816224FBF1002499C1C
954F8C6B80667468AD643A84272C0FCBEB1D3DFE5D3E32AF013E6207BD0481E0
7FD0895C9DCC920A5FC0D620122BE1A22470D4B7E7BEF228434B4B529F2FB879
30A6D5C0E60977D68ABC8FD50EB703E99F0C3380C51DB127E0D7A7B07DC6C57E
CB62C94DF9A89E29A679A18CC81C5822E711E9899A4148795C932526D59A97FD
56BFE696D2C25408D362312C9583B466F64C52F017B2FC0FD6AE6CD31B95FD23
9001EA631F6E56534B6EF4E6703BC7366ABEDC18D5A4005EDE89E87E5EBD6BEA
E4AAE6059E24B83F0C5AA8F354FA8F2415FB472040CCC157161D8CFCB1926E22
C3CC3DF6589D50D69B325FEA8717A46A7D2D69A2EA8E5C0272C7D4774B25112F
FF6E06D4095CAC5179C10AF28F2335EF156BF5920A0ACDEDD11FBA0EB4B5FCA6
0EB6C2BC70DE5DADB20E69E448D8C68F2FF41CF32DEB3845E3F381D2CF550A11
5A4188D50BC8527BB8FD0C18F1B7B4C6F79EB0022043089FC38C3033DCDA518A
B8E4A92179B2E316C10CBA39E2C7AEFE726FD3303189FBB23B25B8BD6276ADAD
ECF0F88D4AE8A2F23BD06ECB8B0516A6F95F40966FCA2EAFDE0E622021E0CFDE
12AF9ED20945DD7A6C6B1739C9D1F736708280E7BC03A0FAFA64A7C5FED819BE
B1A9125C2E7C51C52741BF812CC89EAE94F1908928FA612F5CE9640390C353F4
64EAFB984ED9535EEF0550084F43CD4672E1FF727EDA4DB5C687282A10D31D88
1F6C47B6D6F12D65BDF65F2F5EE2960A35AEB42F3CD5F4E11628AE088CEDA223
79CE386A13FEB9568F66F15D2B2A9D775EA28BEB6F1FEB404E47901751F077A3
443B9336946BAE09C357B350D466B4D20EE132FE168BE61D4FF95132C49EBD22
8E073825D2B2D0E327CEF63C5D60D7228F1C9023E2AA96012837CA40EDBAAA2A
CD2B44574480A072F27C7AD291C4F0BECF14318F0C968433143A19DAC00F7289
F0717532E4799F0DCF5D2FAB1DBBA602BEDD835C54FC30DA2F6B458208BEFDD7
9BD8C4C6E6394AE72B8A77E33F17C181EFCD9C2EBA72B51F0DB554C056A1DDD0
0BD2118528B13218F2B69738A18C763E2F828756D8F840D2CE507A64B7F590AC
37F7DA3A273A00CB5D81CF1DA11A434BFF5057F1A668F7137AFF36FEC3878267
4487BDB90ED2A092506D8C4346D768F0A18EE79FBD4DD4183076657F699667B5
1E9B7A62922FC625AE3CF4A4D2C34A38B9F346E5FBC6D08C436F30764344CCF1
B9E47D39540E4B6477A00B8D34443EA18E2FC03785050C5449D652A4BB7AC68A
26630DAB9149FFF9ECC814325EE561E11685F37D1CB4C430088DAB7BC810C8F1
5E1EC3EF927AD2F5908E08BECB38556D2ED92D563CD5E4578112195B3850FAAB
179C83EAAB08EB70F7261093F8A8E52BAA1E6DDBDBBB387CAE57AA9158203176
FD4C2D16191D8876927CD90FBD295195E4B7198EFDB35B3317308967A00EADA8
A54DD0385F33E0A617072BBBB3CFCB08EDC07A3A78A397E95820907A7E540D46
6C8DE97C2E08CC01056475E95FB467E2F3B08AC019EDB18484D4C450FD2CC541
7393DEA35AF15EB3B027C89A113602ADAE61722DF69188316C1ADC4D2E65F97C
8D0D1F46E8671F317DEAA3B8818F81616A5215F6A480BDBCFC9FE6FFFAF55883
3014E87FCF4E8439A17E843E15B9BF90276EDFC7AECC52744434AFADA4DEA1E0
810B01C554FD07318FF3FE3F95ACEE541ECA8411034FFD607919C565E93490C7
ED6E46D82DB53227A8432ABB95FA629D50E678E4EA997F0C24DE9784FF7538DC
DE8B25170F14F9EFFA024BFE4F6EA2B28EDFA68F85E5AE06EFE62B59FF556A90
22F8A1A9DF8D85369D16150CA38FBE7C8AB4AC4DEFA251E3867B03A9AFADEED6
1A3CA64BE42ED53D65C672DB0B1B2344FFD2BA121DF306C62712CC980B7C4626
4EEEB0AB0F7E9577BF23AF8B9A0C4DF054A0EA10E106F3013A40DA8C3CD07C94
261017D36084BA51C601949F6ED46F9B6CEF34DEC0057F8768F6C5E1CF10FA49
554E386C56EE8D0AF96A5CBEA6AD60482075E4B68F28545D2BC683E0AC2B2F16
4D4AFBE88C1298A3FFAFDFEF6F460F789A71F1A0C342E95FB053CB0A899DCF15
D7543947C9604C2E64826492E5D8FD1F586D19B68D965BD8D75594572425A200
0780EE6220A26C8BAC35ACF1238496599333FDAEBAAB884424124B10A1DE339A
568AF22171A02EB84E11FE58DA3D3CE4E4682145A82BB1FF100A4DCFFE24A576
DEDF7B9FC357204765F1436AC6189A23044510A478F094DBA7F9764C119F47BE
54714D2D87BCE78936089B8F34BEF5A92FB71B513F89B2705945A92A87C89DE6
F45C50BC16C08B662D2E1366D7A7B7F4EA79A42AF260CDF67AEEDE522C9ADBB0
837BF4390EF9E766815F2D3488996A754F13E94A58D9F89D04CD047B77105CAC
02C2D382480B6211D15E1E085DE3662EA6B79984CBA2D0B2D5FB544E05CB8AA0
1375EBBF977DF4EFF9DA9D46521223CB3D5AF7D17E242D1C983E363E5F47CED1
158503C17F7F53615F79D62522A4EC16D16252BBFA8BC2ABF4B15269337773EF
3E8535CD771022D1E64AFBA4369A0B5FC3CDD158B43C795FBA06A1301E37C463
9FBA3CE3B84BFF675CB75123437827DD144E7933688C707641078D0E89772947
0DA4062AE4644C334909725BAB7CC1CC3D3649B1D1D88AA9612DC41CDC0BAF08
D494881076F6F155F6157E3359DF52087C14DC8BF1A7B6F5590B6C1366F6AD6A
FDBCF2CD0AB365EB4D731D16384613863BD9500AC236077F51ADDF7DC9BEC792
0CE93461D913C5D9682CCE7EC401E0F728570B8EE0A69FCC925C5D2511AF296C
861925DE99C98F009470BE6A48FF553F77E4D06FFC2BAEC082379F7F255F0BB6
94302DBCF3D93B56ECC8FEED10E24934DACDEA2AE6C8D0C00ED0B6272A682D7F
C04C9E3BB1CE01E0CC0C35FF1B45FC4598B2F9DF326A9831A6107367AA5779EA
D084D44FF4782EAD56FDBB2ED18657E7A118142F1789BA7BEE21137340A659EA
799E8E401D444CB846D0191DBE6517750A94E2A5296B16542C84B9DF02284623
F4FEB3A6A88A6B977447785119DB5376E293A044CD0CFC51B38DAFD0D9880DFA
4AB8D2ED393CDB69D9C0B4583264792515F6DA072296BD56A72802D8947A4232
13D895AA2249CCAFDF35D0C5494AF25EF6F931556FDEE5B8511F987E96279EF6
F9E38F08A98F761B663B97C08175B41A245633A170812FF21662241DD6A08450
FD5839C29560EB57E598D7FFD84E4022CA981252501D64928FFD247CA08BBCA0
75FCE0EA6555D6171DCFB6CF6F9FF92B6CDF4533A6D912C33DFE6B1B868EA4F7
A9FB38B0C782ED8969D9A7A3D929E0EDE648EF468BB997775F6814CA7E1175A2
2974FAD3D3E9172BDB5009AD22C6667FC3A5E6EEC3541A545C168BECA8FFF2FA
C29944270D468508AE7BF42CB5290DC16A7968F2FB2CA9272380C02A96506EEB
BACC2730FBD6709847CEC38107AC1AAF1B3465DBBBABA16FA6A6841EA1EAF0F8
7013AFEFFFADD63F5C97CF07A0DE71C1440868886F540CDF06852B5883FD2CC9
F3AE732B593174AF7DD182D27CF59A29AB0024A20A1B0315E52A5B16F4212BA5
1375280362BB1FAC1AA27CF86F0306C604298C47D22547817057BB3F9495AF32
FB6D3EE4550B2CC759D8B5CDD3B70BA36F2392015A019F041787E01D2BFA5108
754901C165BD63D8E126F2BD8CC305E85335CFD72807F188592F95910D661CFC
589667CA8A596D5A59FDEA5DDD34D0FC61C08746F55153715473FA5EDC75E030
9BC284C39937102F39B6B0BAA4CB48434A9C17A5165A525BE9E24B8E40B806A4
0116409DD9864EEF3608434AB39796DD7E614BFFE78D622466118C2636612D21
906B8B707E783E90E0077BF02114D6FA5B10FEFEC1B1C33391044409E1C5D1EA
AC8B4E0F18FDAA7AC0976264F380246E7F85FE75DFB346C201A0C7378E78F018
ADC0B2BB59246034EDDE6DAA95438C86CAEA3790B265062A5F1549BFD8D0763A
776EE16825049A2A3328D32A265F1A635254753923FFF1E90B0788E9D4DFDCB8
83BD4E6266CFA3FEA474DC662A762BB7E1FAD8991F77C04E6E22DEE28AD365A1
F51B5C4912FF09E824B990EFDC12D24816A90BCB25E110F9C45B8CAC16E8F4C3
78CDE3B48AFE30558CE967C461D77F6DE5D04BA8D02DBA9F08F40FD5B9B28B37
1A16A12662ED1498BB6CE72DD66B218D869E1211ABE41A2B2D9684CDEE7EE5F5
18FAFEE7803783FB033CA63ABD44D4997E2AD4E4EB5D8B7370D23FDA86FD6AFF
A026BFA3CB4AB970208B5838487DE49F56754E0C0EC6538269840956EF65849E
B3BEA4BD254E5379AB49F9FDAA7D53ABAFB2F359224E57FDBE98EB8D00FA84A0
637EFEA13E4CB053D408B05C0FB1F40E4E357C1E3B3CFCC7298239C8A1DD45BD
C936F5CEB30E32DC1D1ACB4646DC53D70C65D4C4FC6C71F2B141983480B41013
9F33C65B630FBDD2FB36E778A6A83986F1B33101BD4306FE
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: URWPalladioL-Bold
%!PS-AdobeFont-1.0: URWPalladioL-Bold 1.05
%%CreationDate: Wed Dec 22 1999
% Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development
% (URW)++,Copyright 1999 by (URW)++ Design & Development
% See the file COPYING (GNU General Public License) for license conditions.
% As a special exception, permission is granted to include this font
% program in a Postscript or PDF file that consists of a document that
% contains text to be displayed or printed using this font, regardless
% of the conditions or license applying to the document itself.
12 dict begin
/FontInfo 10 dict dup begin
/version (1.05) readonly def
/Notice ((URW)++,Copyright 1999 by (URW)++ Design & Development. See the file COPYING (GNU General Public License) for license conditions. As a special exception, permission is granted to include this font program in a Postscript or PDF file that consists of a document that contains text to be displayed or printed using this font, regardless of the conditions or license applying to the document itself.) readonly def
/Copyright (Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development) readonly def
/FullName (URW Palladio L Bold) readonly def
/FamilyName (URW Palladio L) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0.0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/FontName /URWPalladioL-Bold def
/PaintType 0 def
/WMode 0 def
/FontBBox {-152 -301 1000 935} readonly def
/FontType 1 def
/FontMatrix [0.001 0.0 0.0 0.001 0.0 0.0] readonly def
/Encoding StandardEncoding def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BC2C03103C68570A7B354A4A280AE
6FBF7F9888E039AB60FCAF852EB4CE3AFEB979D5EA70FDE44A2AE5C8C0166C27
BF9665EEA11C7D2329C1A211DD26BB372BE5822F5EA70D99EB578C7BEFD44CDF
045A363056E5E1CC51525EA6FC061DCEBB337208EFF729802376A2801424F670
0E7E6397B28F15BC10B40012B0A3EAEB2693E8F7F627C4C9C7C6C5BFF105C1E4
1B2B9E8F09253B76040D268B80719E1B3F5A55AA45ACB42B05EEB99F8B643CE3
F4B6449ED5A733594F70CCCD7BDB073E630C93A502476CEBA5741BEEE5938FCE
3E77996A2C56EBAE52B2701DEBC95E363E995ACEEDFD1CF8EDC72768951885B9
84F82225B3BB8E9522E784197B8AF13D70B2CD113F7501CD9333EB9A28CD9D56
824E9A3A689741D4577777676015723D17033D2815122B32062451E15DD271BA
6831FBB953F03DB40513901CE59ACCFD6C2D6F05E2B6C8AAC7EE97D4C56B8F52
BCADC9DC83D5C7C45F5C6E60DF9F9471D42B1D6F45EF98EBE41997BEF7D56981
8F9AE898AFA16089A91654ADB0AE2631539262C43BC5206D6CB73867B19EDFF9
024F9C3C7D790946F34742A688BFD183A1307649A36F782DAEAA2D8E581C911C
B42485441FCE5FFBF911F1D9988FC5C601D09514633B415378648CA65F2D6F40
F7CC23901787522154CC33941615849C4E5F2600BE11CE10B78AE007EC0E5137
4C66EF207977C2C2CE5FD8E70A74DA9968C71790516F1489FB5A2585DF9F5E06
9552F391999992E23975398FA0F539A299EF090B9CA16E940104614A4FA8C6D3
495975F6ADCA90522557B3F02FACDAB68EBFFBB8579876F09895D723E482DDF4
FDAE645CD275F3A8DE44AAD1D4C2987B6CD35FBB18312851D858E2F382FC606E
41B7B9393EA57A7FB9903CE835BF1F8E67C15EC8AF980D14FAB1A56EF1A62E14
5433A36160111440DE43D4C8F28013504ABFA5BE40DFA52D34AF251629A70368
73B22EC87849070CC52FE3B74D259E603996AAF50D77304A8B6631C652E482D4
C36A5EA242B3F6A979331BB593EDF29F2D9DC6B35BB39A5876E5378E71CF09BD
151E4B759D53762BB109DE5D452919DE87197C14A816E6970C6476C8A4F1BE28
E6FBCDD677D4379E9D96A978EDA97A0F256534A641017C46F0637A6886CF10E1
EBD75689D3CAD47F1ED6096F825036BFE59A50A550F0FCC978EFE560113A6231
60AE7DFF1BEB6846A97F44BA6196DFF0E9AAAB0F3F34EA25A98ABC50DE2C1812
47CD8A7E2F2BFB159544B845133FCD3B9F46D1C48462A806E9E614D5EB37B65F
BDE52075686731382196CAC3AE3161EBF89944F88A19A5CDCCA280C5A47CEDDE
B826B08AC1581B76BE95036D3797DF9D68406C79A4B51ADF64776AE9BCAA6D51
1362E7A00FDF2C9A6D40F64DDA4B706FAB728B6F6FA9302B4455661480719E97
CFB7A10536081E4E417984862DAD762591F1E352EB919871CFB4FC7DF309CEAA
B7C79374C6ED59B683387237758B75F5ECCDF586AA7D9B6F5DC5D57AE3AF6937
F45C869DD22CBF20D876F5D5A2FDA8A63762932F4CD50CE835A135D14563C415
9E5848B3062ADB9E374E3A43781E2FAB047819D53A6266B49E540D79100A0E59
9A49AF94B6B56D166FDCCACEA3D4D346F919FF829316E7B9879BD8E693B16645
D354E54ED6C97ED4F591623645C9958EB91958D7B43EEA506E0B4A36A18E25B5
BDCD760EEFFF9DFA2B7D6B8E4F38702AAFE923C4A9D7A370CA704DD18F8884A6
D31FF9C6C4BD03E7D068BDBD50276F8595FC6E2DC97AE7BD985281BDF4F0B44C
163A14EF447D7E09A12CFDCAE0432930CFC34EF4F8DAD5D4A5479C77743044EC
0600CAE66913D3A895B9AD47D03CBAF47C14B4B93BAD310343816BDAE9ED8FA6
4173BF894005FB893CBE5D859076B5AAE896945EEE73FBB32AF1876A91440BE1
31459CF0FB211BB5F8E3A811F2D67B799250CAF11120873098B51384403E544B
8861F1B9AAF83F3992B724FD0BC240C42123F9904785BAF8FC671C636947EE42
F1A0B83CB645BD61FC63797A999F4405E08A4737EF3B38F974D988A4D589FB10
C7BE1D5563DD47A48048AB09DE710899BD632DE3DA6F20B5957F6F748928F915
6100AF21730B8444FCE6A1716FD4154AC21CEAFBDB588772AEB23D230B1CDEED
78BB0428971CC9818FC947D8975301E6E5F8F66E8C07CC430D70EB815B198890
C950FF7906B861E51C95FDDA27861B5625C961CF064A5BE8EC10434AAD1C3654
67D56D210B182E2B8F2F008401BBC0AABAE031719C5A9AF7F40DA57154D6AD64
0A25BF742A748BE46C75F45E5F3E08199CC89A7153B08C611BE29E742F5972B8
30F169707FD65A80842FE84C54C01F61342506B7B6B1222F3ABB4A1B1660DBB5
1FAB9BF9AF1957161FFA355A2AA210CB59A08FCDDFE7DD59A553B7A3AE81F79D
37A6A423C7DD79831FEDD65BC403AFD0A9A11D8B4BA0F6E4CC84EEA24F77BB33
582B268EED29D4C4A28C7B041EF49EBDC17F49804D19359F53090C4C06B1E55D
65E1A226D43021EFA91619589B3D213DC74828CB7F82D46C0CF0FF79BB3E2DBE
05B84A93E0E8625B0A7815A3D0873CB6BC134147CDBB2844782CB641271D06E5
90FABBA2C4A61C3CC62C791E25F5D42D7735050F3EEDDF41DEBCB1FC8F4F3B28
8515CE437135700806A8ED3C608C46496F2E00B0EFE25E629414ECB8A5CCA6D7
DE0506DC5353F3D13AD666CBA8F8C56E27E62BECCCD9844213E41BC82D098077
B21B33C6C993898A0ADC6A87A8ECF7BC89E2A66A0139EDB6BC86825F00FE1024
628606990F351BC091138F528B037CD15ED68B9126DDAF9B52DB3F3E766420B2
2AB9AA3345800C54B95BE28FC0E42FECBAABAC04219E6DDD321D543093E16ED7
99102EEA3841DAE5D716C57A1EDBDC6BE04D55C1DC2D87D0DB079D53FC25B4AC
16005CC746D7601F2E8ECF2936E74C53FB87A0B0CBD175F000E9A6DD479B45A8
18D41E5A4168FC2D039AF2636D9E92FFBC86A69596D8197F07641811449504B9
A774CCD14C2C2B54D5CA04E5DBC61B22BBEBDBA394B908DA2DDF53999F1101EF
ED7759E39C831DA47BD4A04494342EEAF4D9FB3E1FA89A529896B14682987E75
6B53AC79D35347141D567C22A1B4D5B9288E54373F9718877DA7D95BD444C46F
BB4992647629A7A03904AA933250D218276A5D0FA4EA5839D2A4B885E28B0504
5C8410F9F4C583D95FD4111563ABB27AB6E7464EBCEB418BEA2F9878B6983A80
6D24CE0B86229379542031AECCBEFCE4972EEA5EC9C84CD8879DCAF81BAF0D4E
FC606C52FFF6F0D104C899BF109A798F7B13C7DA66C79B9864A33F6606B32957
02362FFFC87883689A0A1638D1D47F163B72487101BB60C43BE08AAFE98B384D
869B01D3016CB710B5E3B6C185648120398E67E383802487F80F4DEE34DCE95E
75ABA3A85139790DAC9873F8BABF1AE471DA2362995EA9F3E0902D375208054E
AD2C6B1DB8C539FB20F08257D40F890FC7E35E847CC71CC1D3103066F6DE77BD
7D99E0ABA1EBF44D7E223D3294BFAB55819D89E6E3F5C318A35C0969011DEA51
292F1C935F264BC41873E40028AA8F3DD3F0BFEDBC396F3349E6BA39D975E878
BEB31930671A59F20CEF7AA35548174F41D78903B40367915D4EEBE9B67C2B97
46A6233CA4939C2CF3D6DEA8E2A780F2D96AE1D199C62F07E91B5B8EEA7DE840
A09345A08FB3D73A02ADAE6AFBD7842578CC7D5D745F0DE62C03875A18DFED67
7569C646EA23E316AEE1EC29BA8D4A7B9145D5701AECD409DBEBF0C9E95509BD
D99A537F5C95D6BAB01501D07654C470FD226F1E98C07ACE01B110B0CE74636E
26F2455E3ED9FCA0037C5AA7B354A4F698EE334C06B1A622591040A4D1317664
9B1A4C795900ABF949DDEC907CE0F42652CC7DABCB3C2B87F84D9AC49CBD802D
0349FB9596AB56333DCCA156DBF48CA2635DD745E5649750B4178B7FA1B96235
22BB38442F8A7791BA5B1FEC29B15225AD15B45820BA2C89C2BE1E36587344DB
139FFD92B497B82446053FED13FB1D07DE8F5E3A027390810C875C68241DB2AA
60609E4E86FC2BC0C0FE1F67414DF1A49EEEC35A523FC6F19B4DAE1DDF8E068A
8BAF07BE5981307077068915E8FA0324852EFA01DFB6F146F585A48F89006A5E
14E6F0BB19FAAC6E14E562EAE3B6429FB7EB712DCE32B626DB472E457BF81D60
64D9B9FB1BA0BCBC46324AD7AC9BE5F115F1DCD0D183EFDB38DC9E1579688130
1D8350914A1A27FD68A590987189C2E085E8EB6C2FBBA4AC455675931ACD559D
3494531F6F71624976E494AC075CF53F22003198239AFAF18D64094AB3B7B515
2FB1A1CB51AEC4AC155EC7C0538A1DAC3A4FF71F5952BFA1EB6AE70E9AC9B735
85CC38360663619A5A2E2E85A0C61A8140E44512275BFEA8F9A117F7FFECE9CE
8AFE509700E04072CC3878BA6F6E364449E9DC3AC4DA5E8F2841B8393C6108B3
132841260272A815DCAF1C14FED616A73C94A3B9DB6DD7E8EC01D87B02EAA273
EC7087FE260E5FC6B854457C67C54DC0897F5A1A23D4DFEC96B8B48C55D65013
413302C8223830E672B1BC070D29ADA68B03FFE563BF79E5FB317230FC5ACDFE
82BED1F9EAAAF1A773679B70256C0CA4C52DC23A2B14E87D65BF857DD11AA1D4
EA38A8C9572570B0DF1A2C805DB1AA90D3C813318F4437FB5C8AE533ECAA754B
3D40177AF334CA91A6B2FE525A137C0086F43D95D4AFB522477F3D2D38B92F3E
77B55CE291ACB8321BE53A2C7D2742541FAC324403D3BCA11817C9D15012E0BE
84E1944A3CD2E609646B5917DEE430E079F46889624F7D70448719587E04D2F8
464643A2D70200CD8668AFFE0566A651547EFE9C11BAEAB87E7827B8321C7FD2
5344AD264BA25C78CB3BED5E7AD9383F8701213707958229014AD6E491C01211
B9BBC1212013A533B501A088C2B5E6E27D58BDBDF02AA83FC9C8C5076876ABF6
7E6697B10D9F47DB9287A12F77AE150E4FDDAE8346CD67C99D436A0B5C8448D0
420E8062916A646F58084A75F8EB5C69C1005B864AD5B757C661F15531E735F3
52B150D88EA0547B54C7469642A1D00411D464546F531A23F690945DACCA92EE
9061FAC3A8E1B8776C69F06C654D364E358286E5773C33649081CF715E634687
B3A57A4B574265A679334D5EBCB073FF6966BD932AC319BEE7F28684F2C4E0FC
0D4D59A75FE8DFEEC833C31E84B1C1EFA0C90B254C1F2903E365FB8120D2C817
A1452EA51C9AB784C23CFDAF6F044A5C2AAA6CC7ADE210DE5DE94DEBD07C12F5
0A5E7B73647BFF706A7D07497AA5676C08828D7CF593CECFD951BF6DD2173F1D
C4203744C86A1FE55F5369B12A05851331961EB91B1B15432E1514664240BA7C
78226D4E8ECC5B15EEBE0B9FF2AE1806BE73E7DAD8CCB7E454B088821A9F14B7
757DBD57A449D7BA28B98BF4F729BD36137E834E03EEA32FFC6E88C3FB8B507F
85E91127FCEC4599BB37CCA450E0D5A4F1F9AE8EC65B7182BD48AD311845FB6A
52C70F3654CA73F0039CED38435ED0611E20E3049E16BD77C17DF4BFF453FE60
FAC91C0F1C634BC8303F8893192AEB14CFF0AD50200A157151F7625E63296E32
5E2C36D18B8BA1120E26A9432F7FA1A7A64CA98B2A9EEAB8D411C625AC7585A7
7E9427925F63070FC1F62B45083BC57FC22B1A35C8D5B1CC11FD915E099B07C3
165FCA696BFE117B95D693D287C2B543AF840091D69A3C1C428F1B9018F99146
A0B2A0E257CEC93330A149C5D9572A20B238A21D409827FD133AC943DD1BEA4A
303697EA12F264D1485008F1D4D2C9D54B1BCD10DD7958F06FC41A77CC307146
FAB11805152716480C0984BA13A8433ADBD62E139195D080DF8A78969FF3C085
62DE4012BAEF33DC735D4EB7F20AA6EF837F84D697ADE9561BC4D60BB88BAEAB
8C8C9AA085B3B5A87A04282C152610C6DF152CD3864EF284740B68AD9FEF4DDB
7A1169F5A96C3FD32EB2073263AB1ACE2D780F5624CF53DE046A36EFB35B52F0
55B6CF3A553C55AA3402337C6C9B077A033B01F3B878BB4AF5FF43DFA0932B65
C1FF7776FC2AD3CC8496259C1C33F2FDBABB8BF813CB9DB27CB44AA47AA0D4E6
48240D8C1218E5AF418B6ADD311C9EE0B282AAD6EBA79E856FCF2FEFAF6C118D
AE59E0C79F8CCA62680A74F03B3BD18C8500D8C6BB07B717A6E7AE78D5EF53FB
8CC9D91F8452A74F1890B61BDC5961D6B1922F2D34116F1200912C062594C2D9
852BAE98DAC79B40DA766AE9D34F34D5D4A693248C6B8DEA57B9EABBB715C74B
D161B6D57BCA6C5258D357CEDDA6086620697E8994F2A7EB2B5F75EBB7B6316C
560FF935F7987487ECF74CFA1CC3A21E456DBCFCA00F3F9ECB7CCE3CFB3E66F9
334C2DA766219CD91DC23A8E9E176E41C955A8775EA01738B40E635AC2EE5124
E9C6BB5C98826F55898CADE887047A1128E0AB55B43AEA60489F6474504545DD
2C1B84012CDDBB59AC76D1557B2FAA7C415014417CFFAADA7FCB8387218CD94E
807377CC9C0F4CDD9A83119C731A12F98C3C20E8BEC713D335ADBE66A53BE748
C47D773E8C07AEBE292AB6D1771746BC4DEA63F8A96ECFF717AD9C96349F2E88
421EB9A32A802BE1880D1D91216C658C2F82C7B633F6697E057B31992047C7B4
06C621F71BC070035E395AE5AF3DAA581B8F6009080039A12ED1DDDCB1289B91
4EA5919423998DFA13BF6CBA03C00D2BB80CB291F8E334678484A16D219C71F2
E138A6E29C9022DD472018166F27FBFA72EAECF547F6F06D080D7BBABCC56B4C
C24011214CB26E1D81AAAA1897A0F984F440B9BB0EFDD09656C615245BC0B54C
001E1170D43551EB9F0C858B30ACC0C62E71492B889167348C10BC2342D4A964
6AEF34CA6EA3F4386CA56051A3979163F3A316640EBBE251D601170AC4BF88E0
B0E1044BC2FE71B2604497E4AF22E7E6BC6F3731610769C1BD9D4FEC349B7765
39C849849AA6C48919AFEEF004BEECF4DA2F69BA310ABAF715F091B77757DAA6
A157A6CD13FCB18E1D3B530E8F736177EDFA9A9748CBE052AC7C80B1CC3B0773
B6484A94DB0D536F2143A22F85C5377874A00CE95B76265CB067ED8073F0AC82
79688715AC5BDCF52762E811FF2E38853D991F17895E04D41A3E36E86B4D3CB7
83FDE620EF005D019146015344DBD1D189B052D2260E14DEEDA9B5CDDC23D0EB
E7EF8C5087500179C692463432B584746CB019B50BE5FE2A2C60B0064BBCA326
80E94D9F37D858F286A8C6B977C9CF9170F141743E4D937AC07D5DDDAD540F74
DA1577D3E61B73053ACEB1D29636F10F1AD67099BE4FB1AE706F54E1F23C673C
1EFC49B30CDAAFB3A17F360D509B1ECA982037929320D07646B8F4EAB0F31736
0AAAFB7C198CD8DBE03A3CE7728D8819BA74ECDEC8E6D0C0F7D8416730AF3A95
2362DD973ED7E30EF9CC6B6FA4121E1ED7FC4FE4DC44B7F03667B79E809F5F38
BB9C62B70A2E3EE04585A6379E78C10EC1F7DE549314250E2E1040070989D4C7
96F155E62BE818D5DFC64065C9B8D4FB3019A3048121A9B10CD9A4925F0B2A8B
A820AB4372E629359487CC61F0250FA6AED698F0E1D720BBED46DAC751A28D47
BA905CE8ABE14D0C45566A4FBAC0E247CC0DD8F4402C8AE579801B110C76FD73
57B8B0659B1BCD73374811E960D91B6BF3715E88D977CC25DD7A119778233E6B
A020C636173D5D9EF4C45B087BC34E8F14FCED37AC04105E0753961BB2255BE5
E98ACF4BB25A3830CDCF5B4E4A02576EEEDA01ED6232B5D7E4959A8CBEA43EF3
543479E6FD95C829BA1924733A6C81AE0BE8FB1A69E4B2AF03FA594EF999C3FE
A429669960EEE33E1150A0FF417089B406DCB59972FFBC57BBBB493F2C1B5C38
F173A6994B0EDE5FDD27935452BCDC35CAA1362E0BA23C6B23D1F91130622948
1257F780995E54BD04580E5D8687F427AF1E8BE630227E5F97C189C13F1ED6FE
597F9EBA67F264D5081007C56BB615C905D51B120B3C4A8C312F073224293AA6
39CE696606EBA4A394B5F0425014F1A4595D74D3961D21165A9A1669CB8FFC86
20A687A22CD7D82D27AB2FD80B579D07553B67DA7ACFCD460AA15777BF3DD27A
E0DBB40FBA0C21EB20D5B9DDFE6A5A10F02E59F3FE9DF0B8AB0B4503D1E9AA0E
4F217E1A1641436A2111B3FA812F28626DE3BD3F3B82209ABEE7CC71F8F7DE2E
D3178A55B24209963733B186F0B6A7C7A890453380F49D718302285878277A71
030A2C1BEFD70276FDB857C3FF88F8C32BB0C4B8112435D63CC07066765523B0
2FFA3084DF1A69D83B46817E9E2CC501FC8DA347F255FF55AD0DA3B6BF54DA82
FFE96EE3581BACCB1E6102FE69D3A90D39A8B481550E81CEF91C3BBFAF19B447
457E0C03FFA25062B4C130D9D6B9E25671F9ACEA648B32C88771A4C89BB36757
BFEA1A9C4DAD4AB7B9F7A123648A19CF20853A6F5FB8EDD37504F172CB73894D
DEFD6F7020E2FB7914D121D2167896D80AFB806762370C5049EB6139917E8548
D590DF3BE036430E97E4C09B9508B82A6BE784D1432E48823484FD402EC2540D
6E0F1F8991D17AEDE51B0EC2E75ECBC644931D7685EDAF670128942B567BDF0E
B5C3237FA1968D73B6A42479D539E7BA68F68F1BA4A379DB531BA64E0D7C43F3
2731C4F8D4FF1997C6524E996811E7ABE15B7C4C75C0C00F3447DF1C24E1271C
390E0C2CFE6CD5BCDC07B3DF7456EF5C15A95F9DABDF939BE7366D1E32268471
527B61D3F451648C0ADFE0ED4A229B6C5CCA1F22A873012979F35650DDBF2F4B
4D0A3084546228EC939B319AF8578821B442F65033AA6594DD11F65FE0F14DAB
93784831E9033E6406E6904C934DDF1025D0C7DC1254124572E5B63CCD257C03
14F99E0E0E74769685BD6C62E3485887B9DF199F90DF5B3385822BBB5F7E82F3
DF9CBFD9C8FF0EF4DD5DE3BB012A4BB51316F0FE9B763165050913614F8E0490
5789A6642A6FEE9759B5F6719EAC28B40BCCE50466B1134990EF215B151F1CF2
77E4BF02E409461CF53CFFFEC8B0067D151A329AB9EF1B9EC29976D5F0603AD9
3786A5D81823B30915760B46C20FD2F41ECBDF9E644518C11CE610A1CEE78C2B
9753FB13904708A4F59C2BA06D48C1BC3F08371E8E22554A37AE4861C549DCAD
DD5E48EC7A687F015A040A244830BEB520BABBEDCEF16F693DEEE7497EE68BF8
05D039CA1BC78BD04955A90A4F7E18472A26A6FEBB08918B940AAA49CEE59C67
BFF90598477BF73995AAD4E0CB53A71939757388A057B10F28DA6622942DA845
BA4F04691870DEFB5FF8CBA04F86F395C2935DCC964ABAE6FEFE1EF43C3A3E6E
3C674075E92D8F24D2AE96DCF9570E08D4065C62869000901CAA8A1CBF1E7A08
3B22D73E111ED3B6689E52BDD9A2D559B5199B610EB41E91334AF565FD408DEA
EB5EAB6FE08372EF4D4C1E27E7EEF7DA54FBDFE790239E1C1D34FD9739A6FB0F
687FE9ADCCABDEE0D89E467793C3084D798FFBF14D18A2C6DB5A325360C4E459
4AB3F7242AEF39DA9AA264370D20C45560EF0DDF527E7F5B2E1A14BEBA136DEA
43612BC9DA3A2A13E10F0D6B27E2F9C3FC29E36EA66C1265E4E3CE32826FF552
B161B5EEDBB777F93D49ACE48AB66C94A3BBC23DC52B7DAD33570E298A5DF290
7F005CB0F2C0A58521DB33DF08E018AB315485789E377C8B918D946E250F569E
1BDA7534BB93FDE29017051FC4A83000BF40B903CBD2566237DDA09D9601412F
7393F535CAA36A224F63568B3BB749E5D1EF0048AC0A99CAB5906B761B5DF32D
A731076ABD5A74826AC08562DBD4BFF9596A046FEC95306F8FD28FAF898FCC41
696D228555A71ECBCD93838E1B4E8BD47674FBF991C15B198D339E5199DDEAF1
DE6DBB5F10AC73983AE8D95227A707CAD9ABE50BCC2AA82081BA60E6C51DB002
AF61DE681D665C63155861A0610863ABFC092C9599F5C3A321EA161598BA0EDB
B68D4A9ABD1366FE339946036C7551242B5F342299FC38DAAD0DB848A14EB52C
84C0B23EBFA711F9E8F88BB37B491A22B13785501305871B163F2CCA20F5CC79
465A3697B59048C0417C4777352B7963829017DC4B062ADA05D662F7C17BCB91
30CF7D71980C9059C0BBD8CF18F74C45C985E6F9113472083B7B4E700546D1EE
FC9FACCBA91B72D7440A7BE1390540A5E42BB2215FAAE9AA0EE78B943B79CBA4
AE311FF4612252D9EEC7DEA060396D9F990892C2D7E95B159A68B1967CA98D2A
8E394F46B8CB0250E88073D2DCBA11371D7F846959F2A6BFD8F09199F13A726E
93DCBB3045733D43880F4D01BF4D9DB2CB1DA7292EE9775B6776A5E4A8FAB04F
8D0FBDA048285766C06EA868F915E051139ECFE22AC9B84668F6989088EDA3A1
565DAD1C08E402BD6CF4EC99EC3CF3C6D6E03C1A537ED6B29FF9D2227A5447F0
02948406A8E90FE96AD65A9A041BE6C4F8150C91B30C60AE2F9DC49018BB3BF4
46C9FAF0EE7EE51BE13F6E5753A079544C105D9A6483A9BCF868B177F15C14A0
34E70C5AA46877C29BC88042C30A58B2473A333E603F36F68AEFEF88DAB89730
09C2A49FCA5BB62E5E51E56CA70B16425B30203C07FE1D485308E0C75646145F
A22FB2C8F17F0895E1828CCDD07FCC210033B0316FC13A50F6D110323B8E2545
3A816CE50B05FEC276B53FDC21DE0755EEE6F50ABACCF16686E31B66D8C1D7E8
DAA6804AAE5DE138E8A3126F429D78D26D45BEE77B40CEE6E191449727385DBF
150A289619BA020984777DC32533D1B154381BA3ACDDBE67F3E12F33586A6933
9B06C285601749955A3AC5F7C071ECDDE87DEACF756B352E24F6F16B58AA7B00
6877B1CF2AE6321DA20C3D092BE8CEC412D7448B318C4210843528ACB9F1C9CB
B82AD5C5134A39347787CA96E2E00DB90A879AA4149F93605BA3D670E7ECD6DE
E6E3D1420A731B19A90D60672A349E2E4794E1B8A802826EAF267971C9ACE677
4BCE7CC77605F93ABFEBD803E01C35504FD5A93AB927F3D32B1842C362C65CFA
F72D25E958FD536CED817CD17409AE305169544E48CDBD4BE66361F7572DDCA8
8B0282F50FD1EB2568CC35D8A54FFA0388348CF3B6E16BEAB2EF6A77F16BBB6E
90FDD676A2215FF118AC048B2F290EBBC3B35D92E472849BD10612A89E2411AC
192EE84BDA72BB756191E47408B194F0C5A0A862312508FA5C843FF3AEFF7F1C
8FF0ECEE676A74DD81E8E9B1E733DB616CEAC8A30C01B3F334563409EF49D7C1
9BC179B90CCB8A2C847DBD3E2E9A7EE41620E83C8ED3A0D12B7D10FFBA3E0631
38D07B5AF07270C97B5C4BF5718AFBAC463BCE4B2955A9C7950EF348B6D1472F
AE9138A114177CF50D52FC7B3EBD6674B9BED9C71157E47D3BB2FBA15D02DDF0
BE9DFFD0341BFCB0E6AD5AA57D83F37E5F7B8FBF2198D2FE6D5E20C2807B3CE0
0CC0DC5AC2AF1B14AB2F175884C0BC48F55B351D975F017EF866BEBF2DFEB978
C27EEFD06CA3E4D0D6CC2B904C38F4106AE01E2CF0DEC757440EBEBB371D8C04
A76E7B57B775F889B9CE9F3FB1DF65614142CE79AD029AF5DEF7B359A6DD573E
FE48FBBB7F8E45CB2FD9AA2EA98E381A01BA4C4E3174757EAE603AC00CA2400D
04A17C5233C2CBC92DD03C1A8BBAF806DDEE3C0C653181ABE2A3306A0A3B0457
985BE7805A5301ACC64063909D6C1DC84C274C90004F41A1F9C9E9C15F2C9605
8D5FB62D083B34B01F8890C5E4C899DFF5AAEBB939DE320592ADCBD738746D3E
9F1CCFFB3E21EA250462972EF06EEB9BCD3B1076ABCC3DE786B58AD280C86A8C
6A322C7FB4E132582BFB1566DDCCBD1F5BC447667E95206B16E8AF5B416BB5D6
4953720C98D0DA96D2DC2AB701F16FFAC44FAD5A50EC402F70F4C2B400ECB8C5
989A39D91E2C927FC0F9D411C4599D9D6FC110F98C797340DC0704CD42BEFC71
604ADE64B46F7AD903FC8521F1D711405CE8932953D69522329B698729A63415
DBCB8A2F8972427A47CE65C55791AC67DF9ADFAE7366207FC855BFC6F0C337A7
4C44EA1F5DD32CE6183A4F147B5F846A44428053C6C606216322B5CB00EB1197
3373DCCA93D8F5B1DFDCB271329400CAE5B90560D4FC5DBABA92EA5CC31283BB
51EC9FE6F2A748BDE8B927C96B25AD92D9BBAD42B63FD02166F9334C2DA76621
9CD91E8A4BF95E0AD32A8EDB9588B369B19355EFD0EDD9F850A5B2ABB870F0D7
557BD333B9642BF675C978FCA80A7D56D2870C6834B8CFC8A8488B4BEAEBBA5C
743CA53E8BB15E6D798871D0640D0ACC03CD2BD48F18EC823A5D4E13AF7D78EF
F8A0D27FEF34B60223FC6170F5DD66C147DF2ED5B7466F76A8368D8F95432308
05C8763BA4DF2415CB538380292E97BE26B58198799A1D91F52BBF703F9D93D2
802E32C10DCBCCA358C9A301777283C08EE118778107C2E3E0745ECDCE77D328
B1D96A0CACA7DC16127D741E16D4D157CA6CF67E7DDB8E045D839F801980C9AC
FD90A866830C517D16CC79B3AAC7B89EEEB9E27AC9FBE58C58D94F71986592AE
731096D380C244DCF089676CF6AF896A75678AB421B33A4C40A072C41E3A930F
7D96A3F7CBBAAD1697059C16BEC49F9B5598F9749939BA747C43B4682F868B60
4FB505DD5C1FE08DFB0C744F65A3995974E47800FAA33EDCF9D045A7F0D77064
0A289060DE4202AF751EB801BADD163CDC47784E46C67D7B385648D01C447D08
063281861992CAC0602D64A0059FD24E9E54243B7B99D788AE644604D40CBE33
5B5A3F6A49A589E668B20F475C9BE97A284F22474C84C7C3696AD83CA15099EC
DF3A273E8CECE6D1D7C3C57F7C00D39011BB20A66363233454A59AFDF7ED772C
1D183F91D837DAC94609659451F83DAA632F17786514FB2E38493FB11CB731C8
F5863F21359D297AEFCFFFB6AD97711CF73D6D62F638CD7508D0EAD76F72FEC9
58BBDEC36AF13AEB03F93D85B2D5703212F9A5CE54F9D58FD4161F04235FEBAC
54193DE67EF18181FF14BD660E00CE29C4EFA9548CB450E12BC8B4BEE5E7F227
1D694229938E5C5B2532FC8870AEC17BAAB7BFDEE0CBB74ABD8DDAD753555244
54167D9A461ECCB66125A024716ECE1A2ED96EFAD0CCE878AF9550D6F769068B
96F4061C0BB707B8A437181628681D3D080C14D47A3637158456A66874ADAFA6
963FDEB8D1A2C9BF7CFAF3F6C87DCEB7C7D348B097477DF8C6C324CCCF965C39
7AF1B7F3E4FD61BCCF0EB34CBB917A02D65D8C449D9A1CCE52D23B373A699AF6
6413EC719F805176D2A4D2B2C32C494B15C275AFF4CA62754B465E1238245E28
3972604E3D5FC587576C4368EC4BD7BC33DBD5A598A85BABF0AFA8524519AE5F
B3FD08D95F9EB0F889FEAA41F3B26B7144D29F709E63740309835B518BCF5BCC
8A8D34028BFEAC35D30BEBA1C8F911AEDE793A435F04B0A8BFEE7C64ED558329
1C06A7EF3CAD09AD5ADE65A51B6A915CA708D66F4F1805A4B333324F63A51207
ACEA7DE13ADF46393E0625567240E389590D1BB9D82D6C8D5A1ABF35B5586306
BB3C6D1C9239E6AACB28D629DE12C0CDF25A65582B0F6F1BB139D1380519B561
6B704E2291D1B3819F8EA2162235F42F3F6CBE5A045D10F02F7196B719346371
9647B1E7082F1144BA7FB613F00CF3DA02BD88B6DC71C84B6D54788C301A5AE9
486B8433FA0A2D3B7D87188FE352030FC634549DB4DF0C90A4B15CCEB79085BE
0B5CB46F6C11BA940F34B058F08F66F98E6F61EF971BD1FE386F1424CA82B8CC
60A0156706987C7D0DB913F1BBF8A7B2CF5C095C9B38704024072C5FE89BE9DC
CE26E3454258EAA2588B34522F89E6B7EACEC2DA13A8D0B66AA0C3A2BA840AAF
E0BFDECA8155EB4B4622944D399427F12309AD815E52A8B525D25B086A6B5B8D
3FB6D387FB176FE7347C0F63AEAA79106C39A9F3730CA31BF2EAA8B00E3B4D45
66C36A1DE47A8BF9BF3264F957C199FC3EEB1BAF7EA031A32183B23E698E7150
99552403176D3C688515E38FFF635A3F57477EB563F1618D7ECFFEB768221AD5
9991F8CC69255A6827AAC1D462A387847D7B1AC2939709108B29719D3B0397D5
2763EB0358D5895E7AE6450E260A19C6A64847F82CDE3BCF633D98716BB57637
5348789BE20A82AA1BC1A1169B38137F026528045B8CA2C6ACB2316A673257FE
744DAE82DB7EC788C21C2A1675F9914CE626DA6431204C74CBB662283EA3FB95
B1002F04C5A67AE11CFFFEDC9C8C7595F0E4A6F0801C756223855834352478CB
917D70F1B0AF793AF5AC6EFF23649DCA59E2ECEFB861ADFE90AEF8AA8DAF25D0
FF145D20E161F93055C3432CB412BA299FB6769E965A65A6FD057F51ADDF7DC9
BEC731AD6040FD9B804FA1469A0AE5679AAAAC1804C8AB2084CBBB299ED351CD
CCF8CB4FC890618A9B5B66A7E7AF6435290BB20178DA4F078386896BE11E54EF
FEAF8F40171C316F28FDDF8B550FE9F2EBFCC4E3F3D8112A7E8FF270331D2FB4
75491A5304018066F347EE1D6DB95461595C9938581921663D3A3DBBD8D8A22E
4C49A366DE4CCB332EAB20A47BA58EAF039536053E2BD0287A3C313E1F43F07D
3DDDDE40C2ABB6F23AC7718F1B6DE01DCE214039661FEFE4192FD1027F279ABB
D1869EDD3934C338E54B9324C535A508E923C07F2B960BBDDE1D41F8F87B418B
1D5A40EBCB17BEEDAA960B1DE8A992779ED998EFAAF8BB0322A42859AC85CF4C
1A4E6FF1FE73650DCB8A5F3E321815C37BFFFD7613B89C3F7FC44BA926796DF3
F024DC956CD47759D92D9231A7C8422FC4D6528F4D330F183E48C09E3F8CEBA6
53395327AB9157BBA1DA686C4C0A47FB428A1B6ED04CA2D6D7A008C429D9990B
013A10C457E5A589AB9975428E991D1C34A03F5F236B3F348EA83123169CDB95
44AC4EEAF577818A65BCBA5FAA0C83E25B4EAB2801C5C06E229EA70862D169CF
547DB1B752661AE70C2F0C8000B00036D95878048EB6DBCC92A33983B43994A4
6F7871054578FFC1D0886F21EBAE4EDAD0FDDA48D1A7A14D7329E09849E46E7B
36E12A4A83D89F40FC3E77D799D5206F6D37D4DC63B4E081E53F3C4A3A373D8D
700D66AD06B54C5FF1DDA372F9895860E3F309C9795A084EB7CEB7B4DC127D13
27D8627A58D723869904293E44C8A57934446B96EA9E36FFFA2CF78887A8CC94
D6BA14C1DAEA479AED623113BC0DE41EA96209ECD0CEFEC9336D4ABAA4CD4B26
4CE98BFFE871867A98447A70B2E2A89F6A941E5C5540001A30822128A771F9CF
403B5E47B9DF5A29F671FD5988FA750E8AC2E1EE384B0FD7FD6E8BB214B8303F
2DBB70711CCDA4E39D4675BB19E01699C069A8BE8F8272274978CEB399C92447
46C4A28C54A1032A1543A4600C8920BE686A37A869621C4A68019769C35BA89F
885395A06583187CD5C930D7C8834FE4F655B186D726839FDDD3CB41E74AD220
547EF08D75CB63479255B4CE60AA86C2E99AA3535D1641BE393D6BA0A640396B
840C3D17D0AA498CD23DB9BB93E99F4390844E97F27081F09DFFE6AD905AE084
BB6B0F5FE75AE23AFFF51B7970DC3DB65701961C96ECE1DEEF61DE5941EDCD01
4C842ED0462562FF236E9B7842479DAB4671298B25121170C2063340DA5D3664
C4D61A2E39F96314E1269249A8252FCF1CFD87D9EAF9A50D688478CE5123153C
2F7073D62B636E15EBBC0F2709B165E1CD38052D3548D40772C5097F53DC6F0B
01C5ED2D00021E2F95D0AE1A3C3B5F772A9FE8BD3A8114B04AE06211A680F0EE
922C1C57CCC9A4C4FD4441F9DC1B168ABC67039F93000F5341F07928FAC55A39
C015C1745B602CE56588D1C055CDDA4886422B38BC9A16ED44B51F43A5E7886A
11161F06033BB39A238E4A7AAC49D7ACF86D5CBD3B2F65BF079AB34DDFC2BE2C
E05280CC5DC96A269946F797FBC2D03B109E127C35B550E18ADE02C3D24164A6
7F296635DF365C246868992D3BB69B4EF260B444ED723F8C6E5E19BD0550B743
E8EECE172105107777E4A123F6C3B30E2531C76C9CEED85731719F1D54B1DF79
823A500D526811D1962D4DF8AE8C81BEFFC3F4D68B8C4172C9BA48197763E7C7
FB79F2CA2693EBBE4362D3E602AC7CEFDAF50D7E4909E8877103BB8ED1067CAD
94EA033FB98C3BC4AE2427599803A47AD8674015DEBD4C9F7BA25A1D961697B5
BAA6938B82DD08C3576FD94E3852D36498FCEB14A5F44DFA84E72687ABBCF984
5D79275356B61D2D0B9EF1F8BDA02916AFD6E570D9D435D6AED5CF18ECD5652B
7FA2CE8761F98380B8BE313536F6C0AAE5ADA07DC4771FCAFFEC14AD71DA71F9
2A5D8A079F8893C5ECA27C5F4AC841A26408723B827A0BF523D25F9500C283DA
F19CCF88C60AD16B0F34154D3A6FF3E2635C4804B6BE934C39AA2B46F165DB04
A2064D43DED16DDDCFE359A07BCDE197FABF8E9753FC5C1E64512237CAD81908
CFECDA197C24FD9F72B4E387BECDF5E1A713DFED7583AE7949413FA22DBE8FF8
2F55AFDFFD4DC7C39E7D2A70833A4076B21299442DF227CF28E475136E3AECCD
B2E6EFCA1FBAD52BC77833E796494AFF40BDEE30B915D200AC85DA22DE061EBE
39C3CA89B8D3938BC00122CA2CE3707595B3AF560C771245EF050FF47198607A
6A2ACA26AAA9EC180A6B702B9A70CA9D274A6C96899671F14DFA24F5057348A9
49EA3B48BFA05DEDEBECCD8218C45B5A1BE553350B9963055AB2A0222B1AC756
BEFB7EDA4600021A11CD89556E286545BA16D187FF14CFE11F94D155C623E802
014B4575457B32AEFD1D73EC0CC9D3D768CCAA79BA6302E2B31B3CAB06D12656
59CF0715B6616708BA6DE717164B28FADC033F37660640F6A14DD467A912C6B1
DE450C2F4C992F38ACFC81BA76FFFA165E5052678007DEB45C7C0D5F24C4DA91
853ADE1574414514EBF5E63CC3EB8DD9C3EDAAE2B8B88A0E7DDE18EE14D2580E
6C31809EC583CFFF8CAF3CA90838B8148D490E6818FE8A72E35D3EF5EF88F019
E112EF612ED32272EEC832A3ABA832A0D0A562F3CFC9238C87955559D73C4E3F
2B646E36169A81A021684D209D658E75F7D61A9D9E082683BF46EE2D0846602F
3E395C89D227581C5917DADE09EAB3B37C4820A9596F372128F3DD1E8CB50312
11029D41069561D8BE337690FA92B2B6317949660662AB6561A7BC4003AA165F
FACABA1DAEA0CFFEF395BDF9F2D2BBE999A39096D9C330B83649B75C9CCC7971
A9F951D2D32D2980F7BACEAD838366B196472771A324D90081E5A7D254DBA59B
32D577FF495CC6E469F1A5E94C0430A0400EC2D8C36DF15DEB8F3E1BE9694CB3
6AE8E9B9E5525D72143B8F4880355CAEFF7490C9D0EAD37075D79CA34F82FFA0
92873561A9B32066047482141066701C4786A00104A2FDB86FCA9F976D2BC7F2
2057A0DCC0C1A2688407BB74BC606C14CA9DC9BBF11DAD761ECD649EF2D9
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: NimbusSanL-Regu
%!PS-AdobeFont-1.0: NimbusSanL-Regu 1.05a
%%Title: NimbusSanL-Regu
%%CreationDate: Thu Mar 20 10:08:51 2003
%%Creator: Primoz Peterlin
%%DocumentSuppliedResources: font NimbusSanL-Regu
% Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development
% Generated by PfaEdit 1.0 (http://pfaedit.sf.net/)
%%EndComments
FontDirectory/NimbusSanL-Regu known{/NimbusSanL-Regu findfont dup/UniqueID known{dup
/UniqueID get 5020902 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /NimbusSanL-Regu def
/FontBBox [-174 -285 1001 953 ]readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (1.05a) readonly def
/Notice (Copyright \050URW\051++,Copyright 1999 by \050URW\051++ Design & Development) readonly def
/FullName (Nimbus Sans L Regular) readonly def
/FamilyName (Nimbus Sans L) readonly def
/Weight (Regular) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -151 def
/UnderlineThickness 50 def
end readonly def
/Encoding StandardEncoding def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE33C33655F6FF751F340A8D6C01E3
2E02C24E186BA91B34A1F538959D4450CB683EAE5B034D030186901B458D3777
6B3942BD2E07121385120248891AEC2EB33C4E3A0CF00828D0F130C31A918C18
979FE94379C648EF21ABF659253E43CD1253866F157F1DF85AE7E8714F061B1E
ABA3AD094FE8D6293916FA82EE4F486C7E513A06D4C9BE44306A8287970B4ABF
B6D1F9274A5A0BB6ECF713ADBD1260D5D6C4420D357FD486470A74B2F0621B59
A9373ABECDBF32FA68AABB66FAB0C970A3354A335D70DB2CC5A3208BB6D768E7
B58CD9BC2B6B7E110693C5A88D680B7290DB121996E3B7C8AE3C23147280F8BF
D8C60B415552700FF0E44C2257B467ADD5D550F61EC34A76143393E0B34D55C0
8B64B48E5F1FD16E16B967511AE15434B7F755BDF2574191E3C3DC528B69B5BA
7DDBBD3C7878FA69ADE75011A2C0F02F5707E86FA632D1269281D3C265B31F3B
F3145052467647AFE18B9D763FAEE4BA72CB9C385568EE5BBF5854C278F1E3CC
475C6234E83ED33345268BE52F0931B58F302EDA0D5751348E7B7E53D4882FB6
9343BDAAE87E48F6E82024D8EC1FACBBA36582092CCD76553B0449A5090774EA
7242123C53B80F2E927B98DF2B36C403D1FA1E9F8439F3964DC9F89A0CAB5AE2
C907309460F097AA87BD156575D6C73EDB2B40C015E67734397ED14395C43394
7A0201C6B0F652B035FD7BB82ED236D0F7C20048AFD83A56925C7A2898B46270
B440913E4714FD89697B3E59F5BDD5A2AACF6630257957ABE1A63502A3081B6E
307A534A9E238F986D4C866AFBAB7A0B1B5A6E99AA0A56DC1FD7E8A39CC45147
259AC7033A0C58192CA82FB12E09F309F75690043646193AD92D2368F345771F
01CFD21236BA52F74E36CF4B94259CDBA2EF1D61AD93A2B942A9896B0819D20C
59E440851CB99E89C887FC62FD9E7F88F54E5BC157D81A5FBC70699820C51BC6
27D7755B195C0BAD8225A6F3EAE0A5A674E8AF6B11BCC69DCF5FB89D8BE0E2E5
FE7E2588F93F583E4E2F6ED5457E90B902B02F51D54B9F0BA54291E687F4A7A2
08CA5FCE0C9F3B954247312EDA3C532D3DCDFDCB56FFE03B36DB7D549D4203C6
7DA8772A2F732A15DE675D3212C28DC755E3D0156A777BF514112ABBE4372ACB
97D7834813E1850F90CEE543B4C09BE1E93742EA98B8CACC09FCC4D2595EECD4
46C942EEA60211FA7DBC11CE869D55BF0C7EC6AA747EB2AE2CB3CC2DBEC936C9
540CE2E08291323B36F6549CDB97BBF9F0DA429CA9C863B629410885540DA6C4
9AAADB30C39051C993CB547BCD573D6448DC09BF7FF2D1B108ABEC2AAEE4060D
182ABDB3100AC627E5C883E8F42D90D699C8028D4123472F211C8FBB744D7E3D
C626ED03D8517D69E1ACD26BE4F83FAE31122294816736827D138E4F4CAB1681
236C1654E01231EA7F08AD0E73BBE1BE19A7AD6DA63AE0C7F5A360A53BB35268
CC90125C7545D9D59F5127F0AD964AA66DF020F639832FAF9C2CCA82C01120BA
6469960C350D3AF786666EC14158728E0BA2DD8A639C28E0A7EA8BBF608FD7DF
79C7B5DDEA05C8C3D6FC70177D1A9EA9AD056F0CE31AB535A22FF7EB33748076
52C3A3CCE44DFD38C1A870AF15D782F5C403C5A9A475217E3BE7967360F89551
3FBF9B83D58D8413A45EB18DF19455770726B7082E4C33F9449E6DD6F89FF265
2453807A286AFE8DA4988BEDFED0C357A977805FA702F68652A4BAE9F609047D
B5ABF832032CA1F96E550903DF9B8190F9FFFA8AD1D68385057BF5B7592F73D7
024231193023D02D89731376114C1C0300300B9EF15A312AFFAE9B89C5965996
5C1144C7F8E92600D0BAA927ABC183A538251EE2CF46FEC77739437A52505EB6
45502B99547E91C25D86F0C590D7FB9E51E09C85C5BCDE30D15CD9A0DC335FC4
B589DB92B21ABD5F4A1828236BBC63F11D5FCE4783729578878D2C9CC4DECF24
6DFCBBD6E44045F23AF2CC8C8B621E9E3271620735C9C7C11C2166CC9CC6ED53
5A8E49C834D9A67B584D1FAC4714260B22178E58171EAE1348D1FD7F86AF5DBE
94FB5A2083BF5C7671606BF4B02AE069BDB00369B9B9089CCCF80F6FB7A324C5
A752A3774143475E1714EDBEE8E521D9FAA2FB7184AE70700BE94273DC383C3E
0FCD9102FD16EB35481E0B0B753DEF0357913C83BA2B0CB0657399EF0A213CF7
42E22C285B8940F89B5C7F37EC30C88DB6EA541956B904DB911D009F0B209BFD
C2EDA5F6A8082C5D91442EA1B50E761A116748EF16F2BE0F6A35AA1894A23651
DE099389D561B469BE5C064C973976EF232F76C9D0C0793684D68FE95129C325
B2331A3898F45B761B1A8AC6E773482D34580D33A2D14648BBD3622C8EB0474A
42D1103D2DE1F3B03DA157959FC76BCACFA53B3AEA0D33E7D29DED993DCB6AB4
FDA7BA790124BBFD2AD2A0410DB57B4BE2FDDA4849B3E0E808E35691332F743B
FFB0592D3C3F12F2C4611CD948F30F53171424D4E8D2A7C88DF0AA6959CF01C9
825FB0C522280369192BE430DE2E62EB57A1E928E21929A5A568E9453BB32558
4C14462BBF2B8509A1057904514BECB8FD2EB9C6A3E0B2CB5B7DDF748D195114
AAF3FC287ADD2E889078702797D4544CC9B08D950010941280852C5DB56F5E04
0B5F6486259F62365698583099800A92A8DFBD69740EF510FEA99244FD33D78D
71825B795DCE25480B6E66B72EFC1FD3B5F8AFD5CE60C1D19C6DEAC94EFBAA4E
9A673D096830FB6A44FBDC6E3283D17CFC1930C1A0F98C81E26BF151DB77A741
3B6C48479B3C71B39E92BBA5C42182D22D3038F10665DDC718AE951FD1ACF315
BF84674AD8FBCD7CECE65BA00A621DBCBB84ED824678F15F1BD979D6064FF759
D0B63732FA86600FDDE4503E222E76D0FF06B7F2D1D494941B64CD9AFE1559A6
3BF9215DC21EA22E5EFEBECB45E6A74B2D30C3BE2782CB2C1C95F4B793E4065C
E83795F176946A5CEBF5D03BE2CAB9572D8A9F02314046A4D24B9AD862B2BE73
235E47D2C21DA96EBD507826C553F14534937F8722D027F59D29AD52F1F54500
5796D6EE0C29227DCFA275764ADC1CEF0E0550E445C698FE786CB335AC84696C
5AC192C2EB4BB6D85E956010CC3DAFD27CAD225ED67F170598E52FFE1CEF751B
81CDB85804A5EF02AE99C9D12E70DC5430E7CD64EAD1780093E8B5D6FEBE16DF
38AEDB03B79E4C0CD14763A3186E9979BE24A6A444D0F78102FA63A5508EC4D6
FFDE601DF73CB1AE4D50A2A0557B3F4FE24C8FFA00BAA4195148EF85AE8B996E
D2477421F6A82CA1E71C3C264A1E1D04A56EF39F058FFCD7E189206F6568173E
AF1E09D56A9947DC9406DE7410672590BD7BAD0512657CFDB94695D45D8582AE
345AFD978844C404A5C505A78E86386D29A7CCEFBAA8F35B4813CC9D289E574E
A4B18CCFDE020B76AF50EFF43A273D7BD0EC942AD70E5BAF35354C7F45C59A6F
E6D21D48EEDF38DD9A05DC1A5D4568848629CF26630AD498EF8B3A9B2A6B334A
AED3CA556A1442A6FCD9B57540AADED9FE085B60B2B3EE52312A79375632C63E
8B64BBA2325F03D84E83DBA39CAE0C1C85FFD98D65343D530A022F271003115F
D6AE51A5CB08988D64BAC238683E3B8CEFBAFB6D420E78E2A3CA6D1D1417D9AD
BAAE1B46CCDE6003A7B122B1C945C0EC1CBE99C85AAFC24B191D286648FE80E5
F7499CC4FCCE6F456AEF7859B7AEC531201E36A39792A8A665B21B06B65A4D5F
D81E16E522B40E66E3106972229EA66E8A8C63C3D9B6929F1D39E67BAF49FC7D
B327868CEDFD70EF69CA4DEF2BD878C1C7AE7359691FDF40F8A8CD3669651F35
B02514FCB6A027BEA7BDAAC3E65A3282D365452DC0FE3C2D082F82146719925B
2C360B3D1DF58541F85F6C7265B8F034AC514A568FFC6E3EBC52CCF6EF26E203
202689E296DCAB77FA1F4BAC3507E0449C3A1B8DE6E64F2CD24C1964DDD26135
A265F3097CB57E2F6979A8825B65E542BF69057ED29ED96608A1ADD836B06FA6
1422FF28A42E6A6EB368D9DCDF4541266397420C8728F3011F6E8A44067E7B1D
E7D594669AA46E89E3855058D884EAD0EC5A5329D04A661AD08081C9F2184237
D6B38A655B64AEA63598A30757AA8A1ACDDB821E6E61CBFEACBCE2BBEAC0921D
9DA7905D84C98BFA93287C043023FCCDCE81ED39C541577E3A83CDDB47B0CBAA
74AA2A94D4C48947F6DB729D4854678D7FEA99AD2FCC0C88A1108EACE1FBEC7F
D746CBEC80426118F932C7E5F60A003ABFFCBD57E28DAC5AE6ADE95B8BBB8974
4617CB4D97278D3004C98092735C80EB910AE8FF51A51163C351956F52C42655
6B9AEA9B99C5317E45834E4C75C4B4E8C8B40BCD959FE8AA181BCFD2975C45DD
39E302849672672D7C2F2F0FFD63112EC1D74F3E2463C3F94F5C0138137F8945
0B08DE2A5AA8FFF494576C88CFFAB04284DA20762C9411EA7F3D00652E61633D
6237BAB2680120A4537BF76741687F9DEC875707FE8CA00CD7E5A925532E47B0
D57AB7A373F46BEA7AD655007C388EA60C65FFF5694F7FCD98374EDCA9EC5756
F4130F1CA3BB1B47098C9BBBE7CDDB0D1354507F9FBEA09C248DB86D5B612E98
70F296F981F59CD53A0DEDF2948A939DEE41E42852FD0E13831AF8F3937D5CF9
959068C37313AC958B61717019F31E5A3A8649FD002001E52563E601466C111A
3BBDC330BC0FC3CF7D68A2F84291C174E86D2E45DFE23CCB5C7EC2CC96DC3631
D2A19DADA44FC4D3F45147AC587A5DEAEA93E08391CFA04C14665883039E5A75
32351010ACE645746DBE68920052EFD504319E0827E413608B488E1C0B76E3B2
D50FEFC3B4BB0AE349117A3997FE74292B7A1875CF3C7CB88CC288B0A3C239FA
5FA333A26F6ABB4F06877CF8F928D06617B97D61A6F5AE27022D6A643F9C6E87
F8B9AAA7196D7DB6F87FD4FF2CE0F6A8680F722CC20C080FB87419595AAB9665
64BEE46CD8E6689BB5557F1C6851C60636C63A33DD1D116546279F468BE11C71
7E6DEEF2687291D2D35949B0AF6BCE137211BE3B3DE24E02EC3A8C00CA0B794D
061C9C42DBC5A7F331BF017C08A1491EAB57BDC7A64F977A735BDF5FC8CAE811
D971367857BFCF4D896AF9E845175F4CD62D3528D7CD03098668CC889DDB6F14
FE7FE5739FB130D5640EE0961EA7CF50014187CCDBD06185FB46BAA918A59E93
12CD81EB4F539DC4CB515CBF319F79CCB50EE786585D1BF444ADA3F0C0E18368
C695C7745527E1F9679AB714F2C9B7A0F284B5C43B394011E977F7298720C47A
372C4609EBE887B2F2946246C05A2ECD8B4825AFF04F84C2EDE986628944E18C
BF75F0572D2DCA54F14BE20A2E98BAF05BF91263BFB2F6FCE97388246E53C954
86E4FFA18BA08FBFDEE70D1582FA0DB6084E82561F062EB0156B4380C24BCE90
66FF77A86F23DE38E1B98C20B8E6B2F7561458FEECF93BA4DA3B80D07B864284
C6F6BF59BF0C73D3EA13E7E721D4EA6232323F9A015268CCC6E6EA5D08BA837E
7B7C80BE1ECF6A9782BAFB5FBD865A6B7399E947C1A6CEE56154234DFD1CC870
4CA8574A6307D21A0D716EE21331D0A0D68EA2578F07DEE92437A6EDB173D893
FB4C4E9EBA43B630ED705C0AB1232948F5A2ED401134C5BD80EDB812F96686A6
DBE17CE061A5E1932A98F6B11DDD7D270882E7605E06C0BC58ADC474606EC195
CA71740C105FD5D909D82900913AD0E98A5006140EE009E271E6B9BC22499354
48DED6DB0A273111F7131498CF8E021EE549B6EBC02C158FE3F113C62269B7A2
D7836CEB7E8A0F2AED2FA743AB260F9B1B029A968EF4AB51E133170518B8D6EC
D62DDCFD103C99E7C7715FFA96324D18652B2C75CC3CC501A7A7C09CC99C0B23
B1B57A2AE44853098FE2B6470F4F63A1F4F7BFEB00096E66CE47CCEC2518E713
BF8BE694775C0D912D2B4CC28C090BCA93CE99332999AF28FB8C51F54BD04E4F
C61459051E6B416B6DE4FA0BEFA2F1A18FC620BABD375DC4EE648CCEE3442277
0FAF8F408DDE61CD48141FC7616E50BBD302EABABCC32B09F6CA7835ABA53234
7F5FF5CBC99A0E086665559189632BD5C0E2824C38B93C9D00086E7FD00AF4B2
B4B0D85BF11F5C8245A1E9609E3E4DDB40BC3E72423DDD287A15EB3DF3083DA8
8B53CF22BC40B17C86DB8C63644F84C12EF42A2465D517D030B5B76284778CAA
778C8AEDA013E495936AB6B7BE094B78F87CB4DBBEAE1CC24C8C97AF5BEB7EBD
9C35CAA0D54919898C2FBBAA19B626F0E98A3910EF96D510293FD4DB4F312CE2
5ECDC132E1C391276F0595BE9288801F868992CC6F6F3C3F0A4F2FB225F6EDB3
C98E9268609B30F024FE410135793672A6F3F06F467C7485C7546F70373AB073
5FB4A484D2EA932846C4806868D23C9FBCDD3992601E327E99207243FB5917A3
3403D287A2C69F90877F0FBB5DFD58181B543993EEC8C9252631AC17466A32E3
48754F76CB57A26D8F41F2B9771A335305C3CC48C5A29613781D82D661E5723F
8B2F2FEC4D9494912B7D0D4769D9B259DB70CB5519CD5C85E27CF7F85E340B70
C86A87D6A6056BF447219F94029C5E40ED094F91D4D9547482B72722E2E76491
C1667D496822C4ABA6AD29BEC5C72FFC351E42E636357F9FCE9FC157E3E950FC
5CF7F92C7590DCEC70F83761673AF07E1FEFFCBD31F3CAC4DD99CBB1109215E4
4C734AA30D312C3A47C0972DBE0D1B2DEC9566E801FF8626913CF508CAD25F81
FC3BBCA095C4E566409FA6D16D7D8E7630D63638761594673EC90E01152B9470
43977B0866B8F783AD87015E539E873C0AE7263DA71E6A722F777E2319F9B430
77F0A77FF6B32FAE5CDBFDF0E315D2CC3AAA0B7F3C373C03D4C1E76847F61F0B
16E676AD44C6AD3C8344940ECF4A9E26BB3F3FB7A05F30010CE8904F858D7F32
DAB08D924F673D2F3D43DE888B3AA4F4AD2711ACF0AC5BF43A94659259B9D922
6EB2B9930DF58D1A270E138F2D958063258F73E07DC17DD1882EDE90C27B0778
3C38F737DE895B65A0E2065B9202BD7A53FF815912E555BEEF59DDECD454C95A
CD395739E7D6B7C9C67543ADA85458E203C3A19D020A161C9E11A476B1DAFEE9
C79F81D805DDAAE9A52CF4C5C9251B22702A7FF9EA2620BC27275EDA095F20B4
B4D669D39700A9172A42AE0C78C8484968E58265D1465238B4CF1060C5C4900B
BE1DACBA0C2A8C236D458FA5803C421C8DED98B5935C11D3B5B6CAAEB621FDD2
F727F610284B89B55B87D9B25B520BBEC6933643B79B0857147F05F524B5A86B
7F7F7F34DA5A36C80C5B8E548DD373E82DB175399B4A614BBCE28B0F4C087F89
A24D842B0D85614AEF9BFFA3DED59F850A0883A4B897564F116F49CFBEF03422
71E6C3705748144CC7204D4D5997B6B0A2E53E97F26382A48A2AE3D47FA395AD
0EF4727E714D1C76345F9E68057805470CE60D1A06AE9BFC32E13290826EB496
A2CF1CF368E07C2C13CF1E4CF9C30173985C42E743920DA9CA178F5399ADDDF3
40277EB28F8586085C638D7BD962A8469BE4EEE9F2D322C01BF8EB5A94C4CC16
B3AEBDB0DC2BC36914DC660A6DBA681E6EBC30FC32DE5265840F9261C3B61D91
CD42666416477AFC8413B74A4D1289DC5E7B2A99E645C74B9AF53557C34A3F50
63E6118B0D28112DF3A0CC86E3D7CD6E61E9F893199F520664228B10AF4D9857
3905354497F603FAABA2206F6C7BF440089EACE15DEA08C9098E5D23D906AC4E
FFCCC032D55AA3DE90A25E7B33D2183BDE8C5149B6E7CF6F8DAFD026664CE599
A4413FBB74230FD4FA73EBE6EF8D43430F03BF2E8F24EA00B7A2E367E9EACC89
3214A8B39EE43A90FB88A5D3FF5C606FF9FCD523B5802F59314F5911ACA1151E
9A4AE2E00F51A2B1955C7DD17F35270FEB2D97370468F9AA5A1442C906AB3BAC
036E0481D24970BEBCB45B269A0E9FF77F4F5CD52EA0CF3D107A05CCC3A11275
06CBF70353BE9FCD2D13215171307C56053A9E1B2BB3AA6E74CD6371A2E9507A
1CDD2A44D35A26E02A10B999CAB2F3E966E5A162DAC2624D846E2D3419CB76CC
4CB267614E0CFF0CF4AE4D6831A9BB90F6BBC88C2CD876C25462BE4E13A044BC
62E54A0316BC4141136F1D79065EBC123E8B5D5460ECFA80CB49304662B92441
6EBF93F0727F3F5734465FC8B52D2D21A90FFF08287F2B08E216E538491A2EAA
AF8586E82FF34A93BE9C42E3E5A8552C731B64F333878CBA075B5856E3CC4532
7D10A6DF10ED64E4AEB170928939183A7C656C7E546797F604E4F968A2D92C13
764B71CB5885877A19A407377D38A0A4324D7A268BE8DFCAF39B0330C387AF6C
93EBBFD6F1AA7377800BE39F9877A01EBB89BC442122DC025FFAA2149884E39F
C5FEC586959A0E6CC687BC8ADE023FA16C7C72D0E905125D453AEE3BB2A2B26E
BA74A2DC487C3694AF25D0B57DF06A83B9B1745FF1552ACE30E1B663CAF46100
53BB4CBE70882541DC226597B4DDC1E969DF471BCD3D718338F597101CE0BBB5
80FA66617D72CE8E54ABDFA2201780EE1370563D2B1D710BF9F35D56E97DF449
9DE6B8673CB29853B645F0C2F530EA71618DD8D530E8E0F1F953A69B8E5EC9C0
FC6B0ED27DB6A0DAAE8B302E79D73F86991F755BBE78A0F01B3474A1645DA334
3806F0658858B9E3B04982F2858B7982397C2B7705285832007F7D9633B25975
C96E80E203AA73A80CB838019AFD16CFFAE6D56F7A662A30F1C681018EB076A4
0234FD3AF34E25AF19F13867E2E0525E90430D11EBDD12918ED0152DCB0DEC7A
5AD5A880640E96006AF395889F5CF0059FBBEC91D1B4C68ED520FBD9181B5727
B300297FD4289990BA136589338349B1401664747AAD87A7F2914F1B8B42C8D5
3EEB44A49CA2A0270F092FFA20660E155843EFC340C7FC3391E50E89B4D310E7
77E092C6D2ADE4AF4C767C859AA210E7E2BB6749DBE534A0259B101A87AF9688
2CEEE34CEA17A676EBAD4F9AA19F7759341CC1A64FC4BAC033FFC0C001C4BE9B
13693A596A85EF2B3AD066725E1B5ADA840003C1F159507FD0C0FC002DB44C17
DA78A6ED71E32B99F310D3A568972B2D7A2BD97148F0B52574C4ACC76736364C
CC5760B2EAC5879E9369F83A3EB3BCC4349BE8B742615358FF299631AF3187B8
E9FDEB187E169474FD056B982F5CBDBE13597D38A3D217A76D188D10A24C8437
9D057B929DFB6F36E81AC9A9EC270E74F3C71293D574A8A370CB98C133E4175C
417B735BBF2CCE49B46151173D013686E1C83061F97B88E11B396E9C92147AF4
EDC21965E64052D5BBDBBE4CB13CA762F86674B1FC40508EDFFBBB85485D3001
FF8754EBEA4F70A3082EEC2CE1D29B84AE392031202702C39CE221F10355E8BD
1A496D827FAF45A33A6AB5F8299E930ED367932D7969651FC5769B26F6A14A04
FCD72F261D266439B71A96C904A7132936951E34CB897B397E0FD2BD960C4424
CD3BAEF6E61D6D316108F3CA382B46368420A14013C5A18262742B8F3821ED64
4D062BD4250862B3F425C9D4E7FE9E87D57995CB6FC9350C9511B1C8B19CA57A
4BEE390DBB91C5E016FB755D17669C243EC5B8FBE6A1572A4C88512F2996AFFE
CBE97DBA6EEF8C934361A2CF7CBE4962A71B4BDD90C1F1B8CB59408F64C4A1B5
2ACA4935309FBFAF29D67A7F543F156431F87795D9F6C9689EF503BB0A30BE3B
826E792C11F57F7514CBBF48732F1DCB1A6E5CE03A19A62C049E20FD6CB42BAF
9A4B208E58C6EB6D7BCDA2E0C1E5D4857B777C327A43910964B0AEB043589AD0
5DF4A8A982D2FB1D86B2215B8F75D901C9E7854349CF34ADEEB13A0AC44773D6
43F5DB9E73B6C90336A13FBB48D712C62EC8A91C8C221B0EA55E3D3AA4B4FDE5
96838323BF36215CB14079337AB5397574BD6B5FE45FF00274C80FD88428E617
91CC647B47C8B17F26F9490AE3D7B136858223371FFF74E046529BD98C6150DD
702217EBF00F4041B3426E83473D9B1116EA00F0623FF6931AE5A1D91CDEEAD4
DE0069994994EC9D21C4EC99620F1EB9DB35D956337C0C9B6732E0A5A402C19B
2EE82207A4CE7321922B8A106AF61B7EA6471E5191AC31CF4C706D91C0819D33
5BA9A13DEF481485801F7AE0E0C435043E7559662E8BE3B13A65348FD6EF8A23
9573C196FA3E365E27D75B020D66BFAF9510B078591887F7E069679A712AE629
2891C12EE4690BE32C86D09CB151773A9A225DD9287509DD356D8F3DADA1004E
ADB6B90533A6F6A6616CC4FE5B9F92A5B383B44A86CC6D75BCE8CA6CB0FEE986
5EA430E7F7A4D80BAA6D39288516FF9A70088232FA729EF8382F21FA50A69A61
D0910FD7E72A81D37FA7E2241510EA1B6CEC8FD7B8F7EF95C22B701CB67CD863
ADE7BA0D6A27AB395814AAEB0840F0F528A770D76BF095AB6F74E4CE87EDB0A6
8F4315EB
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
TeXDict begin 40258437 52099151 1000 600 600 (techreview.dvi)
@start /Fa 104[67 2[33 33 24[33 37 34 56 38 40 22 28
26 1[40 36 39 59 19 37 16 19 39 37 22 32 41 30 37 33
3[22 1[22 1[44 44 67 48 52 41 35 45 1[40 52 55 63 41
48 22 22 55 51 37 41 52 47 41 52 6[17 33 33 33 33 33
33 33 33 33 33 40 17 22 17 2[22 22 4[33 31[41 40 2[{
 TeXBase1Encoding ReEncodeFont }74 66.6667 /URWPalladioL-Roma
rf /Fb 136[57 40 44 22 40 26 1[44 44 44 66 18 2[18 44
44 1[44 44 40 44 44 9[75 1[57 1[53 57 1[53 2[66 3[22
1[62 48 53 1[57 1[53 12[44 44 44 44 2[22 46[{
 TeXBase1Encoding ReEncodeFont }36 79.1666 /NimbusSanL-ReguItal
rf /Fc 134[44 2[44 48 26 44 31 2[48 48 70 22 2[22 48
48 1[44 48 44 48 44 16[53 9[48 53 1[57 1[57 13[44 44
44 2[22 46[{ TeXBase1Encoding ReEncodeFont }27 79.1666
/NimbusSanL-Bold rf /Fd 138[48 26 35 31 2[44 48 1[26
1[26 26 2[31 40 48 35 15[48 57 1[48 6[31 5[57 3[35 11[40
40 40 49[{ TeXBase1Encoding ReEncodeFont }22 79.1666
/URWPalladioL-Bold rf /Fe 172[61 66 1[61 6[25 5[66 15[51
51 51 49[{ TeXBase1Encoding ReEncodeFont }8 91.6666 /NimbusSanL-Bold
rf /Ff 170[53 45 49 53 2[57 53 1[45 1[41 20 2[45 49 53
53 67[{ TeXBase1Encoding ReEncodeFont }13 73.3333 /NimbusSanL-Bold
rf /Fg 198[32 32 32 32 32 32 32 32 32 32 48[{
 TeXBase1Encoding ReEncodeFont }10 58.3333 /NimbusSanL-Regu
rf /Fh 87[26 45[40 44 41 66 45 48 26 34 31 44 48 43 46
70 23 44 19 23 46 44 26 38 48 35 44 40 3[26 1[26 2[53
79 57 62 49 42 53 1[48 62 66 75 48 57 1[27 66 60 44 48
61 56 48 62 6[20 40 40 40 40 40 40 40 40 40 40 1[20 26
20 2[26 26 22 3[40 31[48 48 2[{ TeXBase1Encoding ReEncodeFont }71
79.1666 /URWPalladioL-Roma rf /Fi 134[33 33 48 33 37
19 33 22 37 37 37 37 56 15 33 15 15 37 37 19 37 37 33
37 37 10[44 1[41 44 48 8[19 48 1[41 44 1[48 20[19 1[19
4[15 36[33 2[{ TeXBase1Encoding ReEncodeFont }38 66.6667
/NimbusSanL-Regu rf /Fj 139[22 37 26 14[37 41 37 31[48
65[{ TeXBase1Encoding ReEncodeFont }7 66.6667 /NimbusSanL-Bold
rf /Fk 134[56 2[56 1[33 42 39 1[60 55 58 88 1[56 1[29
2[33 48 61 44 55 50 13[52 4[83 95 1[73 33 17[50 1[50
3[50 50 50 3[25 44[{ TeXBase1Encoding ReEncodeFont }28
100 /URWPalladioL-Roma rf /Fl 134[79 73 118 1[85 46 60
56 79 85 77 82 125 41 79 1[41 2[47 68 87 63 78 71 10[102
2[74 95 2[111 9[87 10[35 55[86 2[{ TeXBase1Encoding ReEncodeFont }28
141.667 /URWPalladioL-Roma rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%BeginPaperSize: Letter
/setpagedevice where
{ pop << /PageSize [612 792] >> setpagedevice }
{ /letter where { pop letter } if }
ifelse
%%EndPaperSize
 end
%%EndSetup
%%Page: 0 1
TeXDict begin 0 0 bop 0 0 a
SDict begin [/Producer (dvips + Distiller)/Title (CS 461 Tech Review)/Subject
(CS 461 Tech Review)/Creator (LaTeX with hyperref package)/Author (Jake Jeffreys, McKenna Jones, Spike Madden, Sean Marty)/Keywords
(cs461 ``senior capstone'') /DOCINFO pdfmark end
 0 0 a 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray
142 -164 a
SDict begin H.S end
 142 -164 a 142 -164 a
SDict begin H.R end
 142 -164 a 142 -164
a
SDict begin [/View [/XYZ H.V]/Dest (page.0) cvn /DEST pdfmark end
 142 -164 a Black 0 TeXcolorgray Black 0 TeXcolorgray
150 0 a
 /pssetRGBcolor /setrgbcolor load def /pssetCMYKcolor /setcmykcolor
load def /pssetGraycolor /setgray load def
 150 0 a 150 0 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 150 0 a 150 0 a
tx@Dict begin  gsave STV CP T /ps@refangle 0.  def grestore  end
 150 0 a 150 0
a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 150 0 a 150 0 a
SDict begin [/Count -0/Dest (section.1) cvn/Title (Introduction) /OUT
pdfmark end
 150 0 a 150 0 a
SDict begin [/Count -3/Dest (section.2) cvn/Title (Project Sections)
/OUT pdfmark end
 150 0 a 150 0 a
SDict begin [/Count -4/Dest (subsection.2.1) cvn/Title (Environment)
/OUT pdfmark end
 150
0 a 150 0 a
SDict begin [/Count -0/Dest (subsubsection.2.1.1) cvn/Title (Create Static Environment)
/OUT pdfmark end
 150 0 a 150 0 a
SDict begin [/Count -0/Dest (subsubsection.2.1.2) cvn/Title (Animate Environment)
/OUT pdfmark end
 150 0 a 150 0 a
SDict begin [/Count -0/Dest (subsubsection.2.1.3) cvn/Title (Add Audio)
/OUT pdfmark end
 150 0 a 150
0 a
SDict begin [/Count -0/Dest (subsubsection.2.1.4) cvn/Title (Improve Realism and Immersion)
/OUT pdfmark end
 150 0 a 150 0 a
SDict begin [/Count -4/Dest (subsection.2.2) cvn/Title (Fishing Activity)
/OUT pdfmark end
 150 0 a 150 0 a
SDict begin [/Count -0/Dest (subsubsection.2.2.1) cvn/Title (Process User Wand Movement)
/OUT pdfmark end
 150 0 a 150 0 a
SDict begin [/Count -0/Dest (subsubsection.2.2.2) cvn/Title (Import Fishing Assets)
/OUT pdfmark end
 150
0 a 150 0 a
SDict begin [/Count -0/Dest (subsubsection.2.2.3) cvn/Title (Fishing Rod Interaction and Mechanics)
/OUT pdfmark end
 150 0 a 150 0 a
SDict begin [/Count -0/Dest (subsubsection.2.2.4) cvn/Title (Integrate Usage with Environment)
/OUT pdfmark end
 150 0 a 150 0 a
SDict begin [/Count -4/Dest (subsection.2.3) cvn/Title (Columbia Products)
/OUT pdfmark end
 150 0 a 150
0 a
SDict begin [/Count -0/Dest (subsubsection.2.3.1) cvn/Title (Create Avatars)
/OUT pdfmark end
 150 0 a 150 0 a
SDict begin [/Count -0/Dest (subsubsection.2.3.2) cvn/Title (Import Columbia Gear)
/OUT pdfmark end
 150 0 a 150 0 a
SDict begin [/Count -0/Dest (subsubsection.2.3.3) cvn/Title (Animate Clothing on Avatars)
/OUT pdfmark end
 150 0 a 150 0 a
SDict begin [/Count -0/Dest (subsubsection.2.3.4) cvn/Title (Allow User Interaction with Products)
/OUT pdfmark end
 150
0 a 150 0 a
SDict begin [/Count -0/Dest (section.3) cvn/Title (Conclusion) /OUT
pdfmark end
 150 0 a 150 0 a
SDict begin [/Count -0/Dest (section*.2) cvn/Title (References) /OUT
pdfmark end
 150 0 a 150 0 a
SDict begin [/PageMode /UseNone/Page 1/View [/Fit] /DOCVIEW pdfmark
end
 150 0 a 150
0 a
SDict begin [ {Catalog}<<>> /PUT pdfmark end
 150 0 a 150 0 a
SDict begin H.S end
 150 0 a 150 0 a
SDict begin 17.3749 H.A end
 150 0 a 150 0 a
SDict begin [/View [/XYZ H.V]/Dest (Doc-Start) cvn /DEST pdfmark end
 150
0 a 150 0 a
SDict begin [ {Catalog} <</PageLabels<</Nums[0<</P(0)>>1<</S/D>>]>>>>
/PUT pdfmark end
 150 0 a 0 TeXcolorgray 0 TeXcolorgray 453
577 a Fl(EmbarkVR:)40 b(Outdoor)h(V)-8 b(irtual)41 b(Reality)e
(Experience)798 1063 y(Softwar)m(e)i(Requir)m(ements)g(Speci\002cation)
p 0 TeXcolorgray 0 TeXcolorgray 676 2091 a Fk(Jake)27
b(Jef)n(fr)n(eys,)j(McKenna)e(Jones,)g(Spike)h(Madden,)e(Sean)i(Marty)p
0 TeXcolorgray 0 TeXcolorgray 1548 2338 a(November)g(8,)f(2016)1815
3348 y Fj(Abstract)p 0 TeXcolorgray 0 TeXcolorgray 427
3517 a Fi(Vir)s(tual)g(reality)g(is)h(just)f(star)s(ting)g(to)g(enter)g
(all)g(kinds)h(of)f(mar)q(k)o(ets)o(.)g(Ev)n(er)r(y)o(one)i(is)e(tr)r
(ying)h(to)e(\002gure)j(out)e(the)g(best)g(w)o(a)n(y)308
3630 y(to)d(implement)e(their)i(VR)h(applications)o(.)e(Each)i(VR)g
(project)f(is)g(going)g(to)g(be)g(looking)g(f)n(or)g(diff)n(erent)f
(things)h(when)g(it)f(comes)308 3742 y(to)f(hardw)o(are)i(and)e(de)n(v)
n(elopment)h(en)o(vironments)o(.)f(F)n(or)g(our)h(project)g(w)o(e)g(ha)
o(v)n(e)g(been)g(giv)n(en)g(an)f(HTC)h(Viv)n(e)g(which)g(handles)308
3855 y(the)i(hardw)o(are)g(b)o(ut)f(w)o(e)i(still)e(need)h(to)f(choose)
i(appropr)q(iate)f(softw)o(are)f(to)h(use)g(in)g(de)n(v)n(elopment.)f
(There)h(are)g(a)g(v)n(ar)q(iety)g(of)308 3967 y(options)19
b(and)g(w)o(e'll)f(be)h(looking)f(f)n(or)h(one)g(that)e(is)i(ine)n
(xpensiv)n(e)o(,)g(easy)h(to)e(lear)r(n,)g(po)o(w)o(erful)h(enough)g
(to)f(de)n(v)n(elop)h(a)g(realistic)f(VR)308 4080 y(application,)h(and)
g(easily)h(con\002gur)o(ab)o(le)g(with)e(SteamVR.)h(In)g(this)g
(document)g(w)o(e)h(break)f(do)o(wn)h(the)f(diff)n(erent)f(aspects)i
(of)e(our)308 4192 y(project)h(and)g(compare)g(possib)o(le)f
(technology)h(against)g(speci\002c)g(requirements)g(related)f(to)g
(each)h(piece)o(.)p 0 TeXcolorgray 1930 5259 a Fh(0)p
0 TeXcolorgray eop end
%%Page: 1 2
TeXDict begin 1 1 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray
142 -164 a
SDict begin H.S end
 142 -164 a 142 -164 a
SDict begin H.R end
 142 -164 a 142 -164
a
SDict begin [/View [/XYZ H.V]/Dest (page.1) cvn /DEST pdfmark end
 142 -164 a 0 TeXcolorgray 0 TeXcolorgray 3718 -56 a
Fg(1)p 0 TeXcolorgray 150 96 a
SDict begin H.S end
 150 96 a 150 96 a
SDict begin 20.32591 H.A end
 150
96 a 150 96 a
SDict begin [/View [/XYZ H.V]/Dest (section*.1) cvn /DEST pdfmark end
 150 96 a 2 w Fe(C)t Ff(O)t(N)t(T)t(E)t(N)t(T)t(S)p
0 TeXcolorgray 150 320 a
SDict begin H.S end
 150 320 a Fd(1)178 b(Introduction)823
320 y
SDict begin 17.3749 H.L end
 823 320 a 823 320 a
SDict begin [/Subtype /Link/Dest (section.1) cvn/H /I/Border [0 0 0]BorderArrayPatch/Color
[1 0 0] H.B /ANN pdfmark end
 823 320 a 0 TeXcolorgray 2887
w Fh(2)p 0 TeXcolorgray 150 543 a
SDict begin H.S end
 150 543 a Fd(2)g(Project)24
b(Sections)944 543 y
SDict begin 17.3749 H.L end
 944 543 a 944 543 a
SDict begin [/Subtype /Link/Dest (section.2) cvn/H /I/Border [0 0 0]BorderArrayPatch/Color
[1 0 0] H.B /ANN pdfmark end
 944 543 a 0
TeXcolorgray 2766 w Fh(2)p 0 TeXcolorgray 368 687 a
SDict begin H.S end
 368
687 a Fh(2.1)197 b(Envir)o(onment)1126 687 y
SDict begin 17.3749 H.L end
 1126 687
a 1126 687 a
SDict begin [/Subtype /Link/Dest (subsection.2.1) cvn/H /I/Border [0
0 0]BorderArrayPatch/Color [1 0 0] H.B /ANN pdfmark end
 1126 687 a 0 TeXcolorgray 26 w Fh(.)41 b(.)g(.)g(.)h(.)f
(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)
h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)p
0 TeXcolorgray 148 w(2)p 0 TeXcolorgray 0 TeXcolorgray
665 831 a
SDict begin H.S end
 665 831 a Fh(2.1.1)196 b(Cr)o(eate)21 b(Static)g(Envir)o
(onment)1944 831 y
SDict begin 17.3749 H.L end
 1944 831 a 1944 831 a
SDict begin [/Subtype /Link/Dest (subsubsection.2.1.1) cvn/H /I/Border
[0 0 0]BorderArrayPatch/Color [1 0 0] H.B /ANN pdfmark end
 1944 831 a 0
TeXcolorgray 66 w Fh(.)41 b(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g
(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)p
0 TeXcolorgray 148 w(2)p 0 TeXcolorgray 0 TeXcolorgray
665 976 a
SDict begin H.S end
 665 976 a Fh(2.1.2)196 b(Animate)21 b(Envir)o(onment)1808
976 y
SDict begin 17.3749 H.L end
 1808 976 a 1808 976 a
SDict begin [/Subtype /Link/Dest (subsubsection.2.1.2) cvn/H /I/Border
[0 0 0]BorderArrayPatch/Color [1 0 0] H.B /ANN pdfmark end
 1808 976 a 0 TeXcolorgray
79 w Fh(.)42 b(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h
(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)p
0 TeXcolorgray 148 w(3)p 0 TeXcolorgray 0 TeXcolorgray
665 1120 a
SDict begin H.S end
 665 1120 a Fh(2.1.3)196 b(Add)22 b(Audio)1425
1120 y
SDict begin 17.3749 H.L end
 1425 1120 a 1425 1120 a
SDict begin [/Subtype /Link/Dest (subsubsection.2.1.3) cvn/H /I/Border
[0 0 0]BorderArrayPatch/Color [1 0 0] H.B /ANN pdfmark end
 1425 1120 a 0 TeXcolorgray
33 w Fh(.)41 b(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h
(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)
f(.)g(.)p 0 TeXcolorgray 148 w(5)p 0 TeXcolorgray 0 TeXcolorgray
665 1264 a
SDict begin H.S end
 665 1264 a Fh(2.1.4)196 b(Impr)o(ove)21 b(Realism)g(and)h
(Immersion)2183 1264 y
SDict begin 17.3749 H.L end
 2183 1264 a 2183 1264 a
SDict begin [/Subtype /Link/Dest (subsubsection.2.1.4) cvn/H /I/Border
[0 0 0]BorderArrayPatch/Color [1 0 0] H.B /ANN pdfmark end
 2183 1264
a 0 TeXcolorgray 72 w Fh(.)41 b(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g
(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)p 0 TeXcolorgray
148 w(6)p 0 TeXcolorgray 0 TeXcolorgray 368 1408 a
SDict begin H.S end
 368
1408 a Fh(2.2)197 b(Fishing)22 b(Activity)1231 1408 y
SDict begin 17.3749 H.L end

1231 1408 a 1231 1408 a
SDict begin [/Subtype /Link/Dest (subsection.2.2) cvn/H /I/Border [0
0 0]BorderArrayPatch/Color [1 0 0] H.B /ANN pdfmark end
 1231 1408 a 0 TeXcolorgray 43
w Fh(.)41 b(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f
(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)
g(.)h(.)f(.)g(.)p 0 TeXcolorgray 148 w(7)p 0 TeXcolorgray
0 TeXcolorgray 665 1553 a
SDict begin H.S end
 665 1553 a Fh(2.2.1)196 b(Pr)o(ocess)21
b(User)h(W)-7 b(and)22 b(Movement)2100 1553 y
SDict begin 17.3749 H.L end
 2100 1553
a 2100 1553 a
SDict begin [/Subtype /Link/Dest (subsubsection.2.2.1) cvn/H /I/Border
[0 0 0]BorderArrayPatch/Color [1 0 0] H.B /ANN pdfmark end
 2100 1553 a 0 TeXcolorgray 32 w Fh(.)42
b(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f
(.)g(.)g(.)h(.)f(.)g(.)p 0 TeXcolorgray 148 w(7)p 0 TeXcolorgray
0 TeXcolorgray 665 1697 a
SDict begin H.S end
 665 1697 a Fh(2.2.2)196 b(Import)21
b(Fishing)h(Assets)1797 1697 y
SDict begin 17.3749 H.L end
 1797 1697 a 1797 1697
a
SDict begin [/Subtype /Link/Dest (subsubsection.2.2.2) cvn/H /I/Border
[0 0 0]BorderArrayPatch/Color [1 0 0] H.B /ANN pdfmark end
 1797 1697 a 0 TeXcolorgray 29 w Fh(.)41 b(.)h(.)f(.)g(.)g(.)h(.)f(.)g
(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)
h(.)f(.)g(.)p 0 TeXcolorgray 148 w(8)p 0 TeXcolorgray
0 TeXcolorgray 665 1841 a
SDict begin H.S end
 665 1841 a Fh(2.2.3)196 b(Fishing)22
b(Rod)g(Interaction)g(and)g(Mechanics)2400 1841 y
SDict begin 17.3749 H.L end
 2400
1841 a 2400 1841 a
SDict begin [/Subtype /Link/Dest (subsubsection.2.2.3) cvn/H /I/Border
[0 0 0]BorderArrayPatch/Color [1 0 0] H.B /ANN pdfmark end
 2400 1841 a 0 TeXcolorgray 39 w Fh(.)41
b(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g
(.)p 0 TeXcolorgray 109 w(10)p 0 TeXcolorgray 0 TeXcolorgray
665 1985 a
SDict begin H.S end
 665 1985 a Fh(2.2.4)196 b(Integrate)21 b(Usage)g(with)h
(Envir)o(onment)2241 1985 y
SDict begin 17.3749 H.L end
 2241 1985 a 2241 1985 a
SDict begin [/Subtype /Link/Dest (subsubsection.2.2.4) cvn/H /I/Border
[0 0 0]BorderArrayPatch/Color [1 0 0] H.B /ANN pdfmark end
 2241
1985 a 0 TeXcolorgray 75 w Fh(.)42 b(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)
g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)p 0 TeXcolorgray
109 w(11)p 0 TeXcolorgray 0 TeXcolorgray 368 2130 a
SDict begin H.S end
 368
2130 a Fh(2.3)197 b(Columbia)21 b(Pr)o(oducts)1345 2130
y
SDict begin 17.3749 H.L end
 1345 2130 a 1345 2130 a
SDict begin [/Subtype /Link/Dest (subsection.2.3) cvn/H /I/Border [0
0 0]BorderArrayPatch/Color [1 0 0] H.B /ANN pdfmark end
 1345 2130 a 0 TeXcolorgray
52 w Fh(.)41 b(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g
(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)
h(.)f(.)g(.)p 0 TeXcolorgray 109 w(12)p 0 TeXcolorgray
0 TeXcolorgray 665 2274 a
SDict begin H.S end
 665 2274 a Fh(2.3.1)196 b(Cr)o(eate)21
b(A)-7 b(vatars)1541 2274 y
SDict begin 17.3749 H.L end
 1541 2274 a 1541 2274 a
SDict begin [/Subtype /Link/Dest (subsubsection.2.3.1) cvn/H /I/Border
[0 0 0]BorderArrayPatch/Color [1 0 0] H.B /ANN pdfmark end
 1541
2274 a 0 TeXcolorgray 40 w Fh(.)41 b(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)
h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f
(.)g(.)g(.)h(.)f(.)g(.)p 0 TeXcolorgray 109 w(12)p 0
TeXcolorgray 0 TeXcolorgray 665 2418 a
SDict begin H.S end
 665 2418 a Fh(2.3.2)196
b(Import)21 b(Columbia)h(Gear)1825 2418 y
SDict begin 17.3749 H.L end
 1825 2418 a
1825 2418 a
SDict begin [/Subtype /Link/Dest (subsubsection.2.3.2) cvn/H /I/Border
[0 0 0]BorderArrayPatch/Color [1 0 0] H.B /ANN pdfmark end
 1825 2418 a 0 TeXcolorgray 62 w Fh(.)42 b(.)f(.)g(.)g(.)h
(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)
g(.)g(.)h(.)f(.)g(.)p 0 TeXcolorgray 109 w(12)p 0 TeXcolorgray
0 TeXcolorgray 665 2562 a
SDict begin H.S end
 665 2562 a Fh(2.3.3)196 b(Animate)21
b(Clothing)h(on)h(A)-7 b(vatars)2059 2562 y
SDict begin 17.3749 H.L end
 2059 2562
a 2059 2562 a
SDict begin [/Subtype /Link/Dest (subsubsection.2.3.3) cvn/H /I/Border
[0 0 0]BorderArrayPatch/Color [1 0 0] H.B /ANN pdfmark end
 2059 2562 a 0 TeXcolorgray 73 w Fh(.)42
b(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f
(.)g(.)g(.)h(.)f(.)g(.)p 0 TeXcolorgray 109 w(12)p 0
TeXcolorgray 0 TeXcolorgray 665 2707 a
SDict begin H.S end
 665 2707 a Fh(2.3.4)196
b(Allow)22 b(User)f(Interaction)h(with)g(Pr)o(oducts)2344
2707 y
SDict begin 17.3749 H.L end
 2344 2707 a 2344 2707 a
SDict begin [/Subtype /Link/Dest (subsubsection.2.3.4) cvn/H /I/Border
[0 0 0]BorderArrayPatch/Color [1 0 0] H.B /ANN pdfmark end
 2344 2707 a 0 TeXcolorgray
34 w Fh(.)41 b(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g
(.)g(.)h(.)f(.)g(.)p 0 TeXcolorgray 109 w(12)p 0 TeXcolorgray
0 TeXcolorgray 150 2930 a
SDict begin H.S end
 150 2930 a Fd(3)178 b(Conclusion)779
2930 y
SDict begin 17.3749 H.L end
 779 2930 a 779 2930 a
SDict begin [/Subtype /Link/Dest (section.3) cvn/H /I/Border [0 0 0]BorderArrayPatch/Color
[1 0 0] H.B /ANN pdfmark end
 779 2930 a 0 TeXcolorgray
2892 w Fh(12)p 0 TeXcolorgray 150 3154 a
SDict begin H.S end
 150 3154 a Fd(References)547
3154 y
SDict begin 17.3749 H.L end
 547 3154 a 547 3154 a
SDict begin [/Subtype /Link/Dest (section*.2) cvn/H /I/Border [0 0
0]BorderArrayPatch/Color [1 0 0] H.B /ANN pdfmark end
 547 3154 a 0 TeXcolorgray
3124 w Fh(12)p 0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 2 3
TeXDict begin 2 2 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray
142 -164 a
SDict begin H.S end
 142 -164 a 142 -164 a
SDict begin H.R end
 142 -164 a 142 -164
a
SDict begin [/View [/XYZ H.V]/Dest (page.2) cvn /DEST pdfmark end
 142 -164 a 0 TeXcolorgray 0 TeXcolorgray 3718 -56 a
Fg(2)p 0 TeXcolorgray 150 0 a
SDict begin H.S end
 150 0 a 150 0 a
SDict begin 17.3749 H.A end
 150 0 a
150 0 a
SDict begin [/View [/XYZ H.V]/Dest (section.1) cvn /DEST pdfmark end
 150 0 a 152 96 a Fe(1)96 b(I)t Ff(N)t(T)t(R)s(O)t(D)t(U)t(C)t
(T)t(I)t(O)t(N)150 266 y Fh(The)29 b(development)h(experience)f(in)h(V)
l(irtual)f(Reality)h(is)f(still)g(in)h(its)g(infancy)-9
b(.)30 b(However)-6 b(,)30 b(gaming)f(engines)h(have)150
410 y(been)d(ar)o(ound)g(for)i(a)e(while)g(and)g(fortunately)h(some)f
(of)h(them)f(development)g(SteamVR)f(integration.)h(Ther)o(e)g(ar)o(e)
150 555 y(curr)o(ently)20 b(multiple)f(powerful)i(and)f(fr)o(ee)g(VR)g
(gaming)g(engines)g(on)g(the)g(market)g(to)g(choose)h(fr)o(om.)f(For)h
(our)f(pr)o(oject)150 699 y(we)j(need)g(to)g(develop)g(a)f(r)o
(ealistic)g(application)f(that)i(users)f(ar)o(e)g(able)g(to)h(navigate)
e(and)i(interact)g(with)g(a)f(variety)g(of)150 843 y(objects)g(and)g
(natural)g(elements.)f(When)i(amking)f(a)g(decision,)h(the)f(\002rst)h
(thing)f(we)h(will)f(be)h(looking)g(at)f(is)g(whether)150
987 y(or)34 b(not)f(the)g(engine)h(is)f(powerful)g(enough)g(to)h(cr)o
(eate)e(a)h(VR)g(application.)f(Next)h(will)g(be)g(its)g(integration)g
(with)150 1132 y(SteamVR)22 b(and)h(how)g(easy)f(it)h(is)f(to)h(learn.)
g(W)-7 b(e)23 b(only)g(have)f(six)h(months)f(for)i(our)f(prject)g(so)f
(we)h(need)h(to)f(make)f(sur)o(e)150 1276 y(we)h(can)g(pick)h(up)e(the)
h(tools)h(quickly)-9 b(.)23 b(The)g(thr)o(ee)g(main)g(aspects)e(of)j
(our)g(pr)o(oject)e(ar)o(e)h(constr)o(uct)g(the)h(envir)o(onment,)150
1420 y(integrating)e(Columbia)f(pr)o(oducts,)h(and)g(cr)o(eate)f(a)h
(\002shing)g(experience.)150 1567 y
SDict begin H.S end
 150 1567 a 150 1567
a
SDict begin 17.3749 H.A end
 150 1567 a 150 1567 a
SDict begin [/View [/XYZ H.V]/Dest (section.2) cvn /DEST pdfmark end
 150 1567 a 152 1713 a Fe(2)96
b(P)t Ff(R)s(O)t(J)t(E)t(C)t(T)33 b Fe(S)t Ff(E)t(C)t(T)t(I)t(O)t(N)t
(S)150 1741 y
SDict begin H.S end
 150 1741 a 150 1741 a
SDict begin 17.3749 H.A end
 150 1741 a 150 1741
a
SDict begin [/View [/XYZ H.V]/Dest (subsection.2.1) cvn /DEST pdfmark
end
 150 1741 a 142 x Fc(2.1)79 b(En)m(vir)n(onment)150
1910 y
SDict begin H.S end
 150 1910 a 150 1910 a
SDict begin 17.3749 H.A end
 150 1910 a 150 1910 a
SDict begin [/View [/XYZ H.V]/Dest (subsubsection.2.1.1) cvn /DEST
pdfmark end
 150
1910 a 143 x Fb(2.1.1)g(Create)23 b(Static)e(En)n(vironment)150
2215 y Fh(T)-7 b(o)25 b(begin)h(any)f(virtual)g(r)o(eality)g
(development,)g(one)h(must)e(\002rst)h(cr)o(eate)g(a)h(basic)e(static)h
(envir)o(onment)g(to)h(work)g(in.)150 2360 y(This)20
b(generally)i(involves)e(a)h(couple)g(major)g(steps,)e(and)i(every)h
(legitimate)e(game)h(development)f(platform)h(can)g(do)150
2504 y(these)f(basic)f(things.)g(That)h(means)f(that)g(in)i(or)o(der)g
(to)f(r)o(esear)o(ch)f(which)i(platform)f(is)f(best,)g(we)i(need)f(to)g
(look)h(not)f(just)150 2648 y(at)f(whether)g(basic)f(envir)o(onment)h
(cr)o(eation)g(is)g(possible,)f(but)g(how)i(easy)e(and)i(smooth)f(it)g
(is.)g(Ther)o(e)f(ar)o(e)h(many)g(game)150 2792 y(engines)28
b(out)g(ther)o(e,)f(and)h(many)g(facets)g(involved)g(in)g(cr)o(eating)g
(a)f(static)h(envir)o(onment,)f(but)h(we)g(had)g(to)g(narr)o(ow)150
2937 y(down)d(our)f(r)o(esear)o(ch)g(to)g(just)f(thr)o(ee)h(engines)g
(and)g(a)g(handful)g(of)h(the)f(most)g(important)g(featur)o(es.)e(In)j
(the)f(simplest)150 3081 y(sense,)g(ther)o(e)h(ar)o(e)f(thr)o(ee)h
(steps)f(to)h(cr)o(eating)f(a)h(static)f(envir)o(onment)h(in)g(most)g
(game)f(engines.)h(First,)g(one)g(needs)g(to)150 3225
y(be)f(able)g(to)h(explor)o(e)f(an)g(empty)g(landscape)f(thr)o(ough)h
(a)h(virtual)e(r)o(eality)h(headset.)g(In)g(our)h(case,)e(we)i(alr)o
(eady)f(have)150 3369 y(been)e(given)f(an)h(HTC)f(V)l(ive)g(so)h(that)f
(will)h(be)g(our)g(headset)f(of)h(choice.)h(Second,)e(one)i(needs)e(to)
h(place)f(static)g(objects)150 3514 y(in)k(the)f(empty)g(landscape.)f
(Thir)o(d,)i(it)f(is)g(important)g(to)h(look)g(at)f(how)h(easy)f(and)g
(intuitive)g(it)h(is)f(to)g(work)i(with)e(the)150 3658
y(camera)29 b(because)f(that)g(is)h(very)h(important)e(to)i(any)f
(virtual)f(r)o(eality)h(experience.)g(The)f(thr)o(ee)h(game)g(engines)g
(we)150 3802 y(will)g(look)g(at)g(ar)o(e)f(the)h(Unity)f(game)g
(engine,)h(the)g(Unr)o(eal)f(Engine,)h(and)g(Amazon)f(W)-7
b(eb)28 b(Services')g(Lumberyar)o(d)150 3946 y(game)22
b(engine.)269 4090 y(T)-7 b(o)29 b(cr)o(eate)g(a)h(static)f(envir)o
(onment)g(in)h(Lumberyar)o(d,)f(one)i(starts)d(with)i(cr)o(eating)f(a)h
(new)g(level.)f(These)g(levels)150 4235 y(ar)o(e)f(the)h(basis)f(for)h
(game)g(development)f(in)h(Lumberyar)o(d.)g([)p 0 1 0
TeXcolorrgb 2083 4235 a
SDict begin H.S end
 2083 4235 a 0 1 0 TeXcolorrgb
Fh(1)p 0 1 0 TeXcolorrgb 2123 4179 a
SDict begin H.R end
 2123 4179 a 2123
4235 a
SDict begin [/Color [0 1 0]/H /I/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (cite.lumberyard_levels_environment) cvn H.B /ANN pdfmark
end
 2123 4235 a 0 TeXcolorgray Fh(])g(On)g(cr)o(eation,)g(a)f
(developer)h(is)g(asked)f(to)h(\002ll)g(out)150 4379
y(information)h(about)f(heightmaps,)f(terrain)i(textur)o(e,)e(and)i
(color)g(multipliers.)f(Once)h(a)f(level)g(has)g(been)h(cr)o(eated,)150
4523 y(the)k(next)f(step)g(is)h(to)g(populate)e(the)i(envir)o(onment)f
(with)h(static)f(objects.)g(Lumberyar)o(d)h(br)o(eaks)e(objects)h(into)
h(a)150 4667 y(couple)e(categories.)f(These)h(can)g(include,)g(among)g
(other)h(things,)e(br)o(ushes)h(and)g(entities.)f(Br)o(ushes)h(ar)o(e)g
(objects)150 4812 y(that)22 b(the)h(user)g(cannot)g(interact)g(with,)g
(while)g(entities)f(have)g(the)h(ability)g(to)g(be)g(interacted)g(with)
g(dynamically)-9 b(.)23 b([)p 0 1 0 TeXcolorrgb 3684
4812 a
SDict begin H.S end
 3684 4812 a 0 1 0 TeXcolorrgb Fh(2)p 0 1 0 TeXcolorrgb
3724 4757 a
SDict begin H.R end
 3724 4757 a 3724 4812 a
SDict begin [/Color [0 1 0]/H /I/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (cite.lumberyard_object_system) cvn H.B /ANN pdfmark end
 3724 4812 a 0 TeXcolorgray
Fh(])150 4956 y(Lumberyar)o(d)e(handles)f(camera)g(cr)o(eation,)g
(views,)g(and)h(movement)f(like)h(the)f(developer)h(is)f(shooting)h(a)f
(cinematic)150 5100 y(scene)g(\(which)h(sometimes)f(they)g(ar)o(e\).)g
(A)g(camera)g(is)g(an)h(object)f(itself,)g(and)g(can)h(be)f(selected)g
(and)h(moved)f(about)g(in)p 0 TeXcolorgray 0 TeXcolorgray
eop end
%%Page: 3 4
TeXDict begin 3 3 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray
142 -164 a
SDict begin H.S end
 142 -164 a 142 -164 a
SDict begin H.R end
 142 -164 a 142 -164
a
SDict begin [/View [/XYZ H.V]/Dest (page.3) cvn /DEST pdfmark end
 142 -164 a 0 TeXcolorgray 0 TeXcolorgray 3718 -56 a
Fg(3)p 0 TeXcolorgray 150 96 a Fh(the)21 b(T)-7 b(rack)20
b(V)l(iew)h(editor)-6 b(.)22 b(T)-7 b(o)20 b(move)h(a)g(camera,)f
(simply)g(unlock)h(it)g(and)g(use)f(the)h(mouse)f(and)i(keyboar)o(d)e
(to)h(move)g(it)150 240 y(as)g(it)h(r)o(ecor)o(ds.)g([)p
0 1 0 TeXcolorrgb 642 240 a
SDict begin H.S end
 642 240 a 0 1 0 TeXcolorrgb
Fh(2)p 0 1 0 TeXcolorrgb 682 186 a
SDict begin H.R end
 682 186 a 682 240
a
SDict begin [/Color [0 1 0]/H /I/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (cite.lumberyard_object_system) cvn H.B /ANN pdfmark end
 682 240 a 0 TeXcolorgray Fh(])269 385 y(If)i(one)h(instead)e(wants)h
(to)g(go)g(about)g(cr)o(eating)f(an)h(envir)o(onment)g(in)h(the)f
(Unity)g(game)f(engine,)h(simply)g(cr)o(eate)150 529
y(a)31 b(new)g(pr)o(oject)g(and)g(a)g(basic)g(empty)f(scene)h(will)h
(be)f(generated.)g(Adding)h(objects)e(to)i(the)f(scene)g(can)g(be)g
(done)150 673 y(thr)o(ough)20 b(the)h(Object)e(menu,)h(wher)o(e)h(ther)
o(e)f(is)g(a)g(list)g(of)h(3D)f(objects)g(to)g(choose)h(fr)o(om.)f([)p
0 1 0 TeXcolorrgb 2823 674 a
SDict begin H.S end
 2823 674 a 0 1 0 TeXcolorrgb
-1 x Fh(3)p 0 1 0 TeXcolorrgb 2863 619 a
SDict begin H.R end
 2863 619 a 2863
673 a
SDict begin [/Color [0 1 0]/H /I/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (cite.unity_getting_started) cvn H.B /ANN pdfmark end
 2863 673 a 0 TeXcolorgray Fh(])h(In)f(or)o(der)h(to)g(interact)f
(with)150 817 y(a)i(basic)f(camera)g(object)g(in)i(Unity)-9
b(,)21 b(one)h(simply)f(makes)g(a)h(par)o(ent)f(object)g(fr)o(om)h(the)
g(basic)f(object)h(class)f(and)h(moves)150 962 y(that)d(object,)h
(bringing)g(the)g(camera)f(with)h(it.)g(This)f(way)-9
b(,)20 b(all)g(the)f(same)g(movement)h(and)g(animation)f(pr)o(ocesses)g
(that)150 1106 y(apply)i(to)h(normal)g(objects)g(apply)f(to)h(cameras)f
(as)g(well.)h([)p 0 1 0 TeXcolorrgb 1938 1107 a
SDict begin H.S end
 1938
1107 a 0 1 0 TeXcolorrgb -1 x Fh(3)p 0 1 0 TeXcolorrgb
1978 1052 a
SDict begin H.R end
 1978 1052 a 1978 1106 a
SDict begin [/Color [0 1 0]/H /I/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (cite.unity_getting_started) cvn H.B /ANN pdfmark end
 1978 1106 a 0 TeXcolorgray
Fh(])269 1250 y(Finally)-9 b(,)24 b(if)h(one)g(wants)e(to)i(cr)o(eate)f
(a)g(static)g(envir)o(onment)g(in)g(the)h(Unr)o(eal)e(Engine,)i(they)g
(cr)o(eate)e(a)i(pr)o(oject)e(and,)150 1394 y(like)34
b(Lumberyar)o(d,)f(add)i(a)e(new)h(level.)f(Ther)o(e)h(is)f(a)h
(speci\002c)f(empty)g(level)h(for)g(virtual)g(r)o(eality)f
(development,)150 1539 y(which)22 b(adds)f(certain)g(basic)f(settings)g
(and)h(capabilities)e(automatically)-9 b(.)20 b([)p 0 1 0
TeXcolorrgb 2435 1539 a
SDict begin H.S end
 2435 1539 a 0 1 0 TeXcolorrgb
Fh(4)p 0 1 0 TeXcolorrgb 2475 1483 a
SDict begin H.R end
 2475 1483 a 2475
1539 a
SDict begin [/Color [0 1 0]/H /I/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (cite.unreal_editor_manual) cvn H.B /ANN pdfmark end
 2475 1539 a 0 TeXcolorgray Fh(])i(T)-7 b(o)20
b(add)i(static)e(objects)g(to)h(the)g(r)o(ecently)150
1683 y(cr)o(eated)h(level,)f(one)h(should)g(add)h(actors.)e(Actors)h
(ar)o(e)f(any)h(objects)f(that)g(can)h(be)g(placed)g(into)g(a)g(level.)
f(Speci\002cally)-9 b(,)150 1827 y(geometry)30 b(br)o(ush)f(actors)g
(ar)o(e)g(the)g(simplest)f(way)h(to)h(add)g(geometry)f(to)h(a)f(level.)
g([)p 0 1 0 TeXcolorrgb 2800 1827 a
SDict begin H.S end
 2800 1827 a 0 1 0
TeXcolorrgb Fh(4)p 0 1 0 TeXcolorrgb 2840 1772 a
SDict begin H.R end
 2840
1772 a 2840 1827 a
SDict begin [/Color [0 1 0]/H /I/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (cite.unreal_editor_manual) cvn H.B /ANN pdfmark end
 2840 1827 a 0 TeXcolorgray Fh(])h(Cameras)e(ar)o(e)h
(just)g(a)g(type)150 1971 y(of)h(actor)f(that)g(can)g(be)g(added)h(to)f
(a)g(scene)g(in)g(Unr)o(eal)f(Engine.)i(Once)f(added,)h(cameras)e(have)
h(their)g(own)h(set)e(of)150 2116 y(attributes)20 b(and)j(methods)f
(that)f(allow)h(interaction.)269 2260 y(All)f(thr)o(ee)g(game)f
(engines)h(have)g(certain)g(appealing)e(qualities)i(for)h(our)f(pr)o
(oject.)f(However)-6 b(,)22 b(the)f(scene)g(that)f(we)150
2404 y(ar)o(e)j(cr)o(eating)g(is)h(r)o(elatively)e(simple)h(in)h(the)g
(sense)e(that)i(ther)o(e)f(will)h(not)g(be)f(signi\002cant)g(character)
h(movement)f(and)150 2548 y(most)k(objects)f(won't)i(need)g(to)f(be)h
(interacted)f(with.)g(Also,)g(we)g(will)h(most)f(likely)h(only)f(need)h
(one)g(scene,)f(so)g(the)150 2693 y(ability)21 b(to)h(easily)f(work)h
(with)g(multiple)e(levels)h(does)h(not)g(have)f(much)h(appeal.)d(W)l
(ith)j(those)f(constraints)g(in)h(mind,)150 2837 y(the)h(Unity)f(game)g
(engine)h(would)g(be)g(best)f(for)i(simple)e(static)f(object)i(cr)o
(eation)f(because)g(of)h(its)f(simplicity)g(and)h(the)150
2981 y(universal)e(handling)i(of)f(3D)g(objects.)150
3096 y
SDict begin H.S end
 150 3096 a 150 3096 a
SDict begin 17.3749 H.A end
 150 3096 a 150 3096 a
SDict begin [/View [/XYZ H.V]/Dest (subsubsection.2.1.2) cvn /DEST
pdfmark end
 150
3096 a 122 x Fb(2.1.2)79 b(Animate)22 b(En)n(vironment)150
3381 y Fh(Animating)30 b(objects)g(and)i(characters)e(in)h(an)g(envir)o
(onment)g(is)g(a)f(key)h(aspect)f(of)i(virtual)e(r)o(eality)h
(development,)150 3525 y(just)h(as)g(with)h(any)g(game)g(development.)f
(Unr)o(esponsive)f(objects)h(or)i(unr)o(ealistic)e(animations)g(can)h
(negatively)150 3670 y(ef)o(fect)25 b(how)h(r)o(eal)f(a)g(virtual)f(r)o
(eality)h(experience)g(feels.)g(Again)f(looking)i(at)f(dif)o(fer)o(ent)
g(game)g(engines,)g(we)g(wanted)150 3814 y(to)k(\002gur)o(e)g(out)f
(which)i(engines)f(ar)o(e)f(the)h(most)f(intuitive)h(and)g(powerful.)g
(W)-7 b(e)29 b(chose)g(two)g(ar)o(eas)e(to)i(focus)h(on)f(in)150
3958 y(r)o(egar)o(ds)e(to)g(animation,)f(so)i(that)e(we)i(could)g(narr)
o(ow)f(our)h(comparisons.)e(The)h(\002rst)g(is)g(linear)g(animation,)g
(which)150 4102 y(is)h(pr)o(eset,)e(and)j(r)o(uns)f(like)g(a)g(movie.)g
(User)f(interaction)h(does)h(not)f(ef)o(fect)g(linear)g(animation.)g(W)
-7 b(e)28 b(will)g(use)f(some)150 4247 y(linear)c(animation)f(for)i
(the)f(parts)f(of)i(our)f(scene)g(that)f(the)h(user)f(cannot)h(af)o
(fect,)g(such)g(as)f(swaying)g(tr)o(ees)g(or)i(distant)150
4391 y(water)h(movement.)g(Second,)h(we)f(want)g(to)h(look)g(at)f
(interactive)g(animation,)g(which)h(is)f(a)g(set)g(of)h(animations)f
(that)150 4535 y(ar)o(e)e(performed)h(based)e(on)h(user)g(input.)f
(This)h(is)f(a)h(huge)g(section)g(for)h(virtual)e(r)o(eality)h
(development,)f(because)g(the)150 4679 y(basis)f(for)i(a)e(r)o(eal)h
(experience)g(is)g(whether)g(the)g(world)h(feels)f(interactive.)269
4824 y(For)27 b(each)g(engine)g(listed)g(in)g(the)g(table)g(below)-7
b(,)26 b(we)h(will)h(compar)o(e)e(how)h(the)g(engine)g(handles)g(both)g
(kinds)g(of)150 4968 y(animation.)p 0 TeXcolorgray 0
TeXcolorgray eop end
%%Page: 4 5
TeXDict begin 4 4 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray
142 -164 a
SDict begin H.S end
 142 -164 a 142 -164 a
SDict begin H.R end
 142 -164 a 142 -164
a
SDict begin [/View [/XYZ H.V]/Dest (page.4) cvn /DEST pdfmark end
 142 -164 a 0 TeXcolorgray 0 TeXcolorgray 3718 -56 a
Fg(4)p 0 TeXcolorgray 0 TeXcolorgray 150 3 3601 4 v 150
116 4 113 v 203 82 a Fa(Engine)19 b(Name)p 1342 116 V
1362 116 V 1088 w(Linear)g(Animation)p 2554 116 V 603
w(Interactive)g(Animation)p 3747 116 V 150 119 3601 4
v 150 232 4 113 v 203 198 a(Unity)p 1342 232 V 1362 232
V 1313 w(Animation)h(Curves)p 2554 232 V 650 w(Animation)f(Events)p
3747 232 V 150 344 V 203 310 a(Unr)o(eal)g(Engine)p 1342
344 V 1362 344 V 1101 w(AnimMontages)p 2554 344 V 769
w(EventGraphs)p 3747 344 V 150 457 V 203 423 a(Lumberyar)o(d)p
1342 457 V 1362 457 V 885 w(T)-6 b(rack)19 b(V)l(iew)g(and)f(LimbIK)i
(T)-6 b(echnical)p 2554 457 V 241 w(AnimationEvent)18
b(and)h(XML)g(\002le)p 3747 457 V 150 460 3601 4 v 0
TeXcolorgray 269 780 a Fh(When)35 b(looking)i(to)e(animate)f(objects)h
(in)g(Lumberyar)o(d,)h(ther)o(e)f(is)g(the)g(clear)o(est)f(split)h
(between)g(linear)g(and)150 924 y(interactive)18 b(animation.)g(For)i
(linear)f(animation,)f(developers)g(use)g(the)h(T)-7
b(rack)18 b(V)l(iew)h(to)g(work)g(thr)o(ough)g(animations)150
1068 y(frame)e(by)f(frame.)h(When)g(animating)f(people,)g(Lumberyar)o
(d)h(developers)f(can)h(utilize)f(Limb)g(IK)h(to)g(set)f(an)h(endpoint)
150 1212 y(for)28 b(a)f(hand)g(or)h(foot)g(and)g(have)e(the)h(engine)h
(calculate)e(limb)h(movement)g(that)f(achieves)h(that)f(end)i(goal.)f
([)p 0 1 0 TeXcolorrgb 3538 1213 a
SDict begin H.S end
 3538 1213 a 0 1 0
TeXcolorrgb -1 x Fh(5)p 0 1 0 TeXcolorrgb 3578 1158 a
SDict begin H.R end

3578 1158 a 3578 1212 a
SDict begin [/Color [0 1 0]/H /I/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (cite.lumberyard_animation) cvn H.B /ANN pdfmark end
 3578 1212 a 0 TeXcolorgray Fh(])g(For)150
1357 y(interactive)c(animation,)g(Lumberyar)o(d)h(has)f(two)h
(categories)f(to)h(handle)g(dynamic)g(animated)f(r)o(esponses.)f(A)-7
b(vatar)150 1501 y(contr)o(ols)24 b(deal)g(with)f(the)h(character)g
(that)f(a)h(user)f(is)g(going)i(to)f(contr)o(ol.)g(This)f(means)g(that)
g(movement)g(commands)150 1645 y(come)h(mostly)f(fr)o(om)h(outside)g
(the)f(game)g(code.)h(AI)f(contr)o(ols)h(deal)g(with)f(non-user)h
(contr)o(olled)h(characters.)e(Every)150 1789 y(movement)i(and)g
(decision)g(made)g(by)g(these)f(contr)o(ols)h(is)g(housed)g(in)g(game)g
(code.)g(Both)h(of)f(these)g(ar)o(e)f(part)h(of)g(the)150
1934 y(bigger)g(pictur)o(e)f(for)h(interactive)f(animation)g(in)h
(Lumberyar)o(d)g(that)f(attempts)e(to)j(implement)f(automatic)g(motion)
150 2078 y(synthesis.)d([)p 0 1 0 TeXcolorrgb 542 2079
a
SDict begin H.S end
 542 2079 a 0 1 0 TeXcolorrgb -1 x Fh(5)p 0 1 0 TeXcolorrgb
582 2024 a
SDict begin H.R end
 582 2024 a 582 2078 a
SDict begin [/Color [0 1 0]/H /I/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (cite.lumberyard_animation) cvn H.B /ANN pdfmark end
 582 2078 a 0 TeXcolorgray
Fh(])269 2222 y(Animation)38 b(in)h(Unity)f(is)g(based)g(on)h(a)g
(collection)g(of)g(clips)g(that)f(can)g(be)h(combined)g(in)g(complex)f
(ways,)150 2366 y(contr)o(olled)c(using)f(animation)g(curves,)f(and)i
(trigger)o(ed)f(by)h(animation)e(events.)h(For)h(linear)f(animation,)f
(Unity)150 2511 y(pr)o(ovides)20 b(a)f(\003owchart-style)i(window)g(to)
f(manage)f(animation)h(clips)f(and)i(their)f(interaction)g(with)g(each)
g(other)-6 b(.)21 b([)p 0 1 0 TeXcolorrgb 3684 2512 a
SDict begin H.S end

3684 2512 a 0 1 0 TeXcolorrgb -1 x Fh(6)p 0 1 0 TeXcolorrgb
3724 2457 a
SDict begin H.R end
 3724 2457 a 3724 2511 a
SDict begin [/Color [0 1 0]/H /I/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (cite.unity_animation) cvn H.B /ANN pdfmark end
 3724 2511 a 0 TeXcolorgray
Fh(])150 2655 y(Once)28 b(a)g(set)f(of)i(animations)d(has)i(been)f
(combined,)h(Unity)g(developers)f(can)h(use)f(animation)g(curves)h(to)g
(connect)150 2799 y(other)d(game)g(content)g(and)g(parameters)e(with)i
(an)g(object)f(in)h(motion.)g([)p 0 1 0 TeXcolorrgb 2381
2799 a
SDict begin H.S end
 2381 2799 a 0 1 0 TeXcolorrgb Fh(7)p 0 1 0 TeXcolorrgb
2421 2745 a
SDict begin H.R end
 2421 2745 a 2421 2799 a
SDict begin [/Color [0 1 0]/H /I/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (cite.unity_animation_tutorial) cvn H.B /ANN pdfmark end
 2421 2799 a 0 TeXcolorgray
Fh(])g(When)h(an)e(object)h(needs)f(to)h(r)o(espond)g(to)150
2943 y(user)e(interaction,)f(animation)h(events)f(come)h(into)g(play)-9
b(.)22 b(These)h(ar)o(e)f(simple)g(functions)h(with)g(triggers)g(that)f
(set)h(up)150 3088 y(a)f(speci\002c)f(animated)h(r)o(esponse)f(for)i
(an)e(input)h(action.)g([)p 0 1 0 TeXcolorrgb 1903 3089
a
SDict begin H.S end
 1903 3089 a 0 1 0 TeXcolorrgb -1 x Fh(6)p 0 1 0 TeXcolorrgb
1943 3034 a
SDict begin H.R end
 1943 3034 a 1943 3088 a
SDict begin [/Color [0 1 0]/H /I/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (cite.unity_animation) cvn H.B /ANN pdfmark end
 1943 3088 a 0 TeXcolorgray
Fh(])269 3232 y(The)30 b(Unr)o(eal)g(Engine)h(handles)g(animation)f
(with)g(a)h(combination)f(of)i(skeletal)d(and)i(vertex)f(morphs,)h
(which)150 3376 y(ar)o(e)21 b(contr)o(olled)h(thr)o(ough)g(a)f(visual)f
(graph)h(of)h(animation)f(events.)g(Linear)h(and)f(interactive)g
(animation)g(events)g(ar)o(e)150 3520 y(handled)h(in)g(somewhat)e(the)h
(same)g(way)-9 b(,)21 b(by)g(adding)h(interactions)f(between)g(events)g
(to)g(the)h(EventGraph.)f(Devel-)150 3665 y(opers)k(can)g(manage)g
(events)f(themselves,)g(their)i(ef)o(fects)f(on)h(the)f(overall)g
(animation)g(blueprint,)g(and)g(interaction)150 3809
y(between)d(events)f(all)h(in)g(one)g(place.)g([)p 0 1 0
TeXcolorrgb 1316 3810 a
SDict begin H.S end
 1316 3810 a 0 1 0 TeXcolorrgb
-1 x Fh(8)p 0 1 0 TeXcolorrgb 1355 3755 a
SDict begin H.R end
 1355 3755 a
1355 3809 a
SDict begin [/Color [0 1 0]/H /I/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (cite.unreal_animation) cvn H.B /ANN pdfmark end
 1355 3809 a 0 TeXcolorgray Fh(])269 3953
y(For)c(our)g(pr)o(oject,)e(the)i(animation)f(needs)g(in)h(the)g
(general)f(envir)o(onment)g(ar)o(e)g(br)o(oken)h(into)g(these)f(two)h
(categories)150 4097 y(equally)-9 b(.)29 b(W)-7 b(e)29
b(will)h(have)e(linear)i(animation)e(used)h(to)h(make)f(the)g(envir)o
(onment)g(ar)o(ound)g(the)g(user)g(come)g(to)h(life.)150
4242 y(Also,)d(we)h(will)g(utilize)f(interactive)g(animation)g(both)h
(to)f(make)h(close)f(objects)g(r)o(eact)g(to)h(the)g(user)6
b('s)26 b(pr)o(esence,)h(as)150 4386 y(well)19 b(as)f(handle)h(item)g
(selection)g(and)g(manipulation)f(by)h(the)g(user)-6
b(.)18 b(After)h(learning)g(about)g(all)f(thr)o(ee)h(game)f(engines)150
4530 y(and)j(how)h(they)f(handle)g(animation,)g(it)g(seems)f(that)h
(the)g(Unity)f(game)h(engine)g(\002ts)g(our)h(needs)f(the)g(best.)f
(The)h(other)150 4674 y(two)g(engines)f(ar)o(e)h(focused)g(heavily)f
(on)h(complex)g(human)f(animation)g(and)h(interaction,)g(and)g(we)g(do)
g(not)g(need)g(all)150 4819 y(that)g(for)i(our)f(game.)f(The)g(Unity)g
(engine)h(br)o(eaks)e(every)i(animation)f(down)i(into)f(manageable)e
(and)h(r)o(eusable)g(clips)150 4963 y(that)g(we)i(can)f(populate)e(our)
j(entir)o(e)e(envir)o(onment)h(with.)p 0 TeXcolorgray
0 TeXcolorgray eop end
%%Page: 5 6
TeXDict begin 5 5 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray
142 -164 a
SDict begin H.S end
 142 -164 a 142 -164 a
SDict begin H.R end
 142 -164 a 142 -164
a
SDict begin [/View [/XYZ H.V]/Dest (page.5) cvn /DEST pdfmark end
 142 -164 a 0 TeXcolorgray 0 TeXcolorgray 3718 -56 a
Fg(5)p 0 TeXcolorgray 150 0 a
SDict begin H.S end
 150 0 a 150 0 a
SDict begin 17.3749 H.A end
 150 0 a
150 0 a
SDict begin [/View [/XYZ H.V]/Dest (subsubsection.2.1.3) cvn /DEST
pdfmark end
 150 0 a 96 x Fb(2.1.3)79 b(Add)22 b(A)n(udio)150
259 y Fh(Another)g(key)f(aspect)g(of)h(cr)o(eating)f(an)h(immersive)f
(virtual)g(r)o(eality)g(experience)g(is)h(adding)g(audio)f(ef)o(fects.)
h(A)f(static)150 403 y(soundtrack)f(works)g(well)h(for)g(2D)f(video,)g
(but)g(for)h(a)f(virtual)f(r)o(eality)h(experience)g(the)g(audio)g(has)
g(to)g(be)g(much)g(mor)o(e)150 547 y(complex)g(and)f(dynamic.)h(As)f
(Mona)h(Lalwani)f(mentions)h(in)g(her)g(article)2426
529 y(\250)2417 547 y(For)g(VR)g(to)g(be)f(tr)o(uly)i(immersive,)d(it)i
(needs)150 692 y(convincing)29 b(sound)f(to)g(match)1123
720 y(\250)1126 692 y(,)g(the)g(biggest)f(keys)h(to)g(r)o(ealistic)g
(3D)g(sound)g(with)g(the)g(technology)h(we)f(curr)o(ently)150
836 y(have)18 b(ar)o(e)g(sound)g(cues)g(and)h(thr)o(ee-dimensional)f
(sound.)g([)p 0 1 0 TeXcolorrgb 1965 837 a
SDict begin H.S end
 1965 837 a
0 1 0 TeXcolorrgb -1 x Fh(9)p 0 1 0 TeXcolorrgb 2005
782 a
SDict begin H.R end
 2005 782 a 2005 836 a
SDict begin [/Color [0 1 0]/H /I/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (cite.engadget_immersive_sound) cvn H.B /ANN pdfmark end
 2005 836 a 0 TeXcolorgray
Fh(])h(Sound)g(cues)f(ar)o(e)f(audio)i(events)e(that)h(r)o(eact)g(to)h
(speci\002c)150 980 y(triggers.)j(For)h(example,)e(if)i(I)f(move)h(my)f
(foot)h(thr)o(ough)g(water)f(that)f(should)i(elicit)f(some)h(sort)f(of)
h(sound)g(r)o(esponse.)150 1124 y(3D)e(audio)h(can)f(be)g(cr)o(eated)g
(in)g(a)g(couple)g(dif)o(fer)o(ent)h(ways,)e(including)i(sound)f
(attention)g(and)g(occlusion.)h(Basically)-9 b(,)150
1269 y(this)21 b(just)f(means)g(changing)i(the)f(audio)g(in)h(an)f
(experience)g(based)g(on)g(user)g(location)h(and)f(the)h(other)f
(objects)g(in)g(the)150 1413 y(ar)o(ea.)i(Finally)-9
b(,)25 b(another)f(key)h(to)f(developing)h(audio)f(in)h(a)f(game)g
(engine)h(is)f(how)h(sound)g(data)e(is)i(managed.)f(Most)150
1557 y(engines)e(have)f(various)h(ways)f(to)h(manage)f(their)i(sound)f
(data,)f(each)h(with)g(bene\002ts)f(and)h(drawbacks.)269
1701 y(W)-7 b(e)22 b(will)g(compar)o(e)f(the)h(usual)f(thr)o(ee)h(game)
g(engines:)f(Unity)-9 b(,)22 b(Unr)o(eal)f(Engine,)h(and)h(Lumberyar)o
(d.)p 0 TeXcolorgray 150 1897 3601 4 v 150 2009 4 113
v 203 1976 a Fa(Engine)c(Name)p 1045 2009 V 1065 2009
V 727 w(Sound)g(Cues)p 1960 2009 V 570 w(3D)f(Sound)p
2855 2009 V 413 w(Managing)i(Sound)f(Data)p 150 2013
3601 4 v 150 2125 4 113 v 203 2092 a(Unity)p 1045 2125
V 1065 2125 V 842 w(AudioSour)o(ce)g(Ef)o(fects)p 1960
2125 V 265 w(AudioSour)o(ce)g(Matrices)p 2855 2125 V
225 w(Audio)g(Spacializer)i(SDK)p 150 2238 V 203 2204
a(Unr)o(eal)e(Engine)p 1045 2238 V 1065 2238 V 513 w(V)l(isual)i(Sound)
d(Cue)i(Nodes)p 1960 2238 V 232 w(Attenuation)f(Shapes)p
2855 2238 V 314 w(Audio)h(Node)f(Graph)p 150 2350 V 203
2317 a(Lumberyar)o(d)p 1045 2350 V 1065 2350 V 555 w(Audio)g(Play/Stop)
h(T)-6 b(riggers)p 1960 2350 V 350 w(Raycasting)p 2855
2350 V 360 w(Audiokinetic)19 b(Wwise)f(L)-5 b(TX)p 150
2354 3601 4 v 0 TeXcolorgray 269 2645 a Fh(In)32 b(Lumberyar)o(d,)g(3D)
g(audio)g(is)g(handled)h(by)f(using)f(raycasting)h(thr)o(ough)g(the)g
(Audiokinetic)g(Wwise)g(L)-6 b(TX)150 2790 y(audio)19
b(system.)f(Attenuation)g(and)i(occlusion)f(ar)o(e)g(calculated)g(by)g
(tracking)h(a)f(sound)g(vector)-6 b(.)19 b(This)g(means)g(that)f(the)
150 2934 y(path)i(fr)o(om)h(a)f(sound)h(sour)o(ce)f(to)h(the)g(user)f
(is)h(calculated,)f(and)g(objects)g(and)h(distances)f(in)h(between)f
(af)o(fect)h(the)f(\002nal)150 3078 y(sound.)i(In)f(or)o(der)h(to)g
(implement)f(r)o(esponsive)f(sounds,)i(Lumberyar)o(d)f(has)g(Audio)h
(PlayT)-7 b(rigger)21 b(and)h(StopT)-7 b(rigger)150 3222
y(methods.)22 b(This)f(allows)h(sounds)g(with)g(all)f(of)i(their)g(pr)o
(operties)d(to)j(be)e(trigger)o(ed)i(dynamically)-9 b(.)22
b([)p 0 1 0 TeXcolorrgb 3179 3223 a
SDict begin H.S end
 3179 3223 a 0 1 0
TeXcolorrgb -1 x Fh(10)p 0 1 0 TeXcolorrgb 3258 3167
a
SDict begin H.R end
 3258 3167 a 3258 3222 a
SDict begin [/Color [0 1 0]/H /I/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (cite.lumberyard_audio_system) cvn H.B /ANN pdfmark end
 3258 3222 a 0 TeXcolorgray
Fh(])269 3367 y(Audio)30 b(in)g(the)f(Unr)o(eal)g(Engine)i(is)e
(handled)i(like)f(many)f(other)h(things)g(in)g(the)g(engine,)f(with)h
(a)g(node-based)150 3511 y(visual)22 b(map.)g(This)g(map)g(allows)g
(audio)h(clips)g(to)g(play)f(in)h(any)g(or)o(der)-6 b(,)23
b(and)h(interact)e(with)h(each)g(other)g(in)g(complex)150
3655 y(ways.)c(Each)g(individual)h(sound)g(is)f(a)g(node)h(on)g(the)g
(chart)f(that)g(r)o(epr)o(esents)f(an)h(audio)h(clip)f(bound)h(to)f(a)h
(Sound)f(Cue)150 3799 y(Node.)i(These)f(sounds)h(can)g(then)g(be)g
(made)f(r)o(ealistic)h(by)f(adding)i(attenuation)e(thr)o(ough)h(either)
g(a)f(simple)g(distance)150 3944 y(algorithm)h(or)h(attenuation)e
(shapes.)g(Attenuation)g(shapes)g(help)h(cr)o(eate)f(consistent,)h(r)o
(ealistic)f(soundscapes)g(in)h(an)150 4088 y(envir)o(onment)29
b(by)h(calculating)f(attenuation)f(based)h(on)h(a)g(geometric)f(shape)g
(that)g(might)h(\002t)f(a)g(certain)h(location)150 4232
y(better)22 b(than)f(a)h(simple)f(distance)h(calculation.)f([)p
0 1 0 TeXcolorrgb 1634 4232 a
SDict begin H.S end
 1634 4232 a 0 1 0 TeXcolorrgb
Fh(11)p 0 1 0 TeXcolorrgb 1714 4177 a
SDict begin H.R end
 1714 4177 a 1714
4232 a
SDict begin [/Color [0 1 0]/H /I/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (cite.unreal_audio) cvn H.B /ANN pdfmark end
 1714 4232 a 0 TeXcolorgray Fh(])269 4376 y(Unity)26
b(audio)g(is)g(a)g(system)g(of)h(audio)f(clips)g(that)g(ar)o(e)f(sent)h
(fr)o(om)h(an)f(Audio)h(Sour)o(ce)f(to)g(and)h(Audio)f(Listener)-6
b(.)150 4521 y(Both)35 b(ar)o(e)g(attached)f(to)h(objects,)e(the)i
(latter)g(usually)e(to)i(the)g(main)f(camera)h(object.)f(Audio)h(Sour)o
(ces)e(generate)150 4665 y(sounds)19 b(when)h(audio)f(clips)g(ar)o(e)g
(trigger)o(ed)h(thr)o(ough)g(AudioSour)o(ce)f(Ef)o(fects,)g(allowing)h
(for)g(dynamic)g(sound)g(cues.)150 4809 y(T)-7 b(o)22
b(make)g(those)g(sounds)h(mor)o(e)f(r)o(ealistic,)g(Unity)g(uses)f(the)
i(Audio)f(Spacializer)f(SDK)i(to)g(handle)g(attenuation)e(and)150
4953 y(other)i(audio)g(ef)o(fects)f(like)h(echoing)g(and)g(the)f
(Doppler)h(Ef)o(fect.)g(A)g(system)e(of)i(matrices)f(handles)h(how)g
(the)f(listener)p 0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 6 7
TeXDict begin 6 6 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray
142 -164 a
SDict begin H.S end
 142 -164 a 142 -164 a
SDict begin H.R end
 142 -164 a 142 -164
a
SDict begin [/View [/XYZ H.V]/Dest (page.6) cvn /DEST pdfmark end
 142 -164 a 0 TeXcolorgray 0 TeXcolorgray 3718 -56 a
Fg(6)p 0 TeXcolorgray 150 96 a Fh(and)21 b(sour)o(ce)f(handle)h
(complex)g(audio,)f(although)h(the)f(spacializer)g(performs)h(good)g
(portions)g(of)h(the)e(calculations.)150 240 y([)p 0 1 0
TeXcolorrgb 176 240 a
SDict begin H.S end
 176 240 a 0 1 0 TeXcolorrgb Fh(12)p
0 1 0 TeXcolorrgb 256 185 a
SDict begin H.R end
 256 185 a 256 240 a
SDict begin [/Color [0 1 0]/H /I/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (cite.unity_audio) cvn H.B /ANN pdfmark end
 256 240
a 0 TeXcolorgray Fh(])269 385 y(In)32 b(the)f(end,)i(our)f(choice)h(in)
f(game)f(engine)h(for)h(audio)f(comes)g(down)h(to)f(choosing)g(a)g
(simple)f(system)g(and)150 529 y(choosing)c(a)g(system)e(that)h(will)h
(most)f(help)h(bring)g(r)o(ealism)e(to)i(the)g(soundscape)e(of)j(our)f
(envir)o(onment.)f(This)g(is)g(a)150 673 y(har)o(d)f(balance,)f(but)h
(it)g(seems)f(like)h(the)g(Unr)o(eal)f(Engine)i(\002nds)f(the)g(best)f
(middle)i(gr)o(ound.)f(In)g(the)g(Unr)o(eal)g(Engine)150
817 y(ther)o(e)17 b(is)g(no)g(added)h(outside)f(softwar)o(e)f(to)h
(handle)h(complex)f(sound)g(manipulation.)e(Also,)i(the)g(attenuation)f
(shapes)150 962 y(featur)o(e)31 b(of)g(the)h(Unr)o(eal)e(Engine)i
(might)f(be)g(extr)o(emely)g(useful)f(to)i(r)o(elatively)e(quickly)i
(cr)o(eate)e(a)h(r)o(eal)g(sounding)150 1106 y(landscape.)150
1221 y
SDict begin H.S end
 150 1221 a 150 1221 a
SDict begin 17.3749 H.A end
 150 1221 a 150 1221 a
SDict begin [/View [/XYZ H.V]/Dest (subsubsection.2.1.4) cvn /DEST
pdfmark end
 150
1221 a 122 x Fb(2.1.4)79 b(Impro)o(v)n(e)22 b(Realism)f(and)h
(Immersion)150 1506 y Fh(The)36 b(goal)g(of)h(our)g(pr)o(oject)e(is)h
(cr)o(eate)f(a)h(r)o(ealistic,)g(virtual,)f(outdoor)i(experience)f
(that)g(makes)f(users)g(feel)i(like)150 1650 y(theyve)22
b(been)f(transported)h(to)g(a)g(dif)o(fer)o(ent)g(location.)g(After)g
(weve)g(cr)o(eated)f(the)h(envir)o(onment,)g(animated)f(objects,)150
1794 y(and)35 b(added)h(audio,)e(the)h(next)g(step)e(is)i(to)g(impr)o
(ove)f(the)h(visual)f(r)o(ealism.)f(The)i(\002rst)f(thing)h(that)f
(came)h(to)g(our)150 1939 y(mind)g(was)f(to)g(incr)o(ease)g(the)h
(detail)f(of)h(the)g(objects)e(in)i(the)f(envir)o(onment)g(but)g(this)g
(may)h(actually)e(make)h(the)150 2083 y(experience)22
b(less)g(r)o(ealistic)g(fr)o(om)g(the)h(perspective)e(of)i(the)g(user)
-6 b(.)22 b(It)g(turns)g(out)g(this)g(is)g(only)h(one)g(aspect)e(of)j
(cr)o(eating)150 2227 y(a)g(visually)f(successful)g(game.)h(The)f
(other)i(two)f(ar)o(e)g(frames)g(per)g(second)g(and)h(r)o(esolution.)e
(These)h(thr)o(ee)g(concepts)150 2371 y(make)18 b(up)h(what)f(is)h
(called)g(the)g(graphical)f(\002delity)h(triangle.)g(Accor)o(ding)g(to)
g(a)g(study)f(done)i(by)e(Intel)h(and)g(Thug[)p 0 1 0
TeXcolorrgb 3625 2372 a
SDict begin H.S end
 3625 2372 a 0 1 0 TeXcolorrgb
-1 x Fh(13)p 0 1 0 TeXcolorrgb 3704 2316 a
SDict begin H.R end
 3704 2316
a 3704 2371 a
SDict begin [/Color [0 1 0]/H /I/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (cite.michalak_lind_round1) cvn H.B /ANN pdfmark end
 3704 2371 a 0 TeXcolorgray Fh(],)150 2516
y(immersion)g(needs)g(graphical)f(\002delity)-9 b(,)19
b(not)g(r)o(ealism.)e(They)i(found)h(that)e(what)g(was)g(important)g
(was)h(that)f(graphics)150 2660 y(wer)o(e)25 b(crisp)f(and)h(clean)g
(at)g(all)f(times.)g(They)h(found)h(that)e(a)g(smooth)h(experience,)g
(one)g(without)g(glitches)f(and)h(lost)150 2804 y(frames,)32
b(was)g(the)h(most)f(important)g(aspect)g(of)h(immersion.)g(They)f
(even)h(went)f(a)h(step)f(further)h(to)g(ar)o(gue)f(that)150
2948 y(photo-r)o(ealism)21 b(is)h(often)h(times)e(worse)h(because)f(it)
h(makes)f(inaccuracies)h(mor)o(e)g(obvious.)269 3093
y(In)30 b(or)o(der)g(to)h(\002nd)f(out)g(which)h(of)f(these)g(tools)g
(will)g(be)g(the)g(most)f(ef)o(fective)h(we)h(will)f(be)g(looking)g(at)
g(simple)150 3237 y(particle)e(systems,)e(textur)o(e)h(libraries,)h
(and)h(clean)f(textur)o(e)f(mapping.)g(Its)g(important)h(that)f(which)i
(game)f(engine)150 3381 y(we)22 b(use)g(that)f(the)h(asset)f(stor)o(e)h
(contains)g(a)g(wide)g(variety)g(of)h(simple)e(textur)o(es)g(and)h
(materials)f(so)h(that)g(we)g(ar)o(e)g(able)150 3525
y(to)g(cr)o(eate)e(r)o(ealistic)h(envir)o(onment)g(objects.)f(Ther)o(e)
h(ar)o(e)g(also)g(going)g(to)h(be)f(a)g(lot)h(of)g(moving)f(parts)g
(such)g(as)f(animals)150 3670 y(and)i(river)g(water)-6
b(.)21 b(These)g(need)h(to)g(be)f(r)o(ealistic)g(enough)h(to)g(cr)o
(eate)f(immersion)g(but)g(not)h(too)g(detailed)g(as)f(to)h(cr)o(eate)
150 3814 y(graphical)f(lag.)h(The)g(thr)o(ee)g(tools)g(I)f(will)i(be)f
(looking)g(at)g(ar)o(e)f(Unity)-9 b(,)22 b(Unr)o(eal)f(Engine,)i(and)f
(Lumberyar)o(d.)p 0 TeXcolorgray 150 4009 3600 4 v 150
4122 4 113 v 203 4088 a Fa(Engine)d(Name)p 1044 4122
V 1064 4122 V 664 w(Particle)h(Systems)p 1958 4122 V
402 w(T)-6 b(extur)o(e)19 b(Libraries)p 2852 4122 V 295
w(Clean)h(T)-6 b(extur)o(e)18 b(Mapping)p 3747 4122 V
150 4125 3600 4 v 150 4238 4 113 v 203 4204 a(Unity)p
1044 4238 V 1064 4238 V 1092 w(Y)-6 b(es)p 1958 4238
V 796 w(Y)g(es)p 2852 4238 V 796 w(Y)g(es)p 3747 4238
V 150 4350 V 203 4316 a(Unr)o(eal)19 b(Engine)p 1044
4350 V 1064 4350 V 835 w(Y)-6 b(es)p 1958 4350 V 796
w(Y)g(es)p 2852 4350 V 796 w(Y)g(es)p 3747 4350 V 150
4463 V 203 4429 a(Lumberyar)o(d)p 1044 4463 V 1064 4463
V 890 w(Y)g(es)p 1958 4463 V 719 w(Minimal)p 2852 4463
V 720 w(Y)g(es)p 3747 4463 V 150 4466 3600 4 v 0 TeXcolorgray
269 4758 a Fh(Unity)19 b(is)f(an)h(incr)o(edibly)h(common)f(tool)h(for)
g(building)f(in)h(virtual)e(r)o(eality)-9 b(,)19 b(especially)f(for)i
(the)f(HTC)g(V)l(ive.)f(It)h(has)150 4902 y(managed)24
b(to)h(\002nd)g(a)g(good)g(balance)f(of)i(r)o(ealism)d(thr)o(oughout)i
(the)g(asset)e(library)-9 b(.)25 b(This)f(asset)f(stor)o(e)h(of)o(fers)
h(a)g(wide)150 5046 y(range)19 b(of)g(particle)g(ef)o(fects,)f(textur)o
(es,)f(and)i(materials.)e(W)l(ithin)i(the)g(Unity)f(development)h
(envir)o(onment,)f(they)h(have)p 0 TeXcolorgray 0 TeXcolorgray
eop end
%%Page: 7 8
TeXDict begin 7 7 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray
142 -164 a
SDict begin H.S end
 142 -164 a 142 -164 a
SDict begin H.R end
 142 -164 a 142 -164
a
SDict begin [/View [/XYZ H.V]/Dest (page.7) cvn /DEST pdfmark end
 142 -164 a 0 TeXcolorgray 0 TeXcolorgray 3718 -56 a
Fg(7)p 0 TeXcolorgray 150 96 a Fh(made)22 b(it)g(easy)f(to)i(map)e
(textur)o(e)g(on)i(to)f(objects)f(to)h(cr)o(eate)g(a)g(tr)o(uly)g
(crisp)g(experience.)g(They)f(also)h(of)o(fer)h(a)f(variety)f(of)150
240 y(lighting)j(options)f(to)h(add)h(even)e(mor)o(e)h(outdoor)h(r)o
(ealism.)e(Unr)o(eal)g(Engine)h(also)f(of)o(fers)h(a)g(wide)g(range)g
(of)h(particle)150 385 y(animations)e(and)i(textur)o(e)e(packages.)g
(Unr)o(eal)h(engine)g(looks)h(like)f(it)h(would)g(be)f(a)g(much)h(mor)o
(e)f(ef)o(fective)g(tool)h(for)150 529 y(cr)o(eating)f(high)g(end)h
(virtual)e(r)o(eality)h(games)f(but)h(for)h(our)f(usage)f(it)h(may)g
(be)g(overkill.)g(Overall)h(it)f(has)f(a)h(lot)g(of)h(the)150
673 y(same)e(capabilities)f(if)i(not)g(mor)o(e)g(but)g(they)f(also)h
(come)g(at)f(a)h(price.)g(Most)f(of)i(the)e(asset)g(stor)o(e)g(costs)h
(money)g(which)150 817 y(is)i(not)g(what)g(we)g(ar)o(e)f(looking)i(for)
-6 b(.)27 b(Lumberyar)o(d)f(has)f(a)h(good)h(variety)f(of)h(particle)e
(ef)o(fects)h(but)f(str)o(uggles)h(when)150 962 y(it)e(comes)f(to)h
(textur)o(es)f(and)g(textur)o(e)g(mapping.)g(Developer)g(fr)o(eedom)i
(within)f(the)f(envir)o(onment)h(is)f(easy)g(to)h(learn)150
1106 y(but)d(limited.)269 1250 y(The)g(best)f(tool)i(to)f(cr)o(eate)g
(an)g(immerse,)g(r)o(ealistic)f(envir)o(onment)h(would)h(be)f(Unity)-9
b(.)21 b(It)g(of)o(fers)h(a)f(wide)h(variety)e(of)150
1394 y(fr)o(ee)j(assets)e(that)h(can)h(be)g(used)f(thr)o(oughout)h(pr)o
(ojects)e(to)i(add)h(that)e(extra)g(bit)h(of)g(r)o(ealism.)f(The)h
(Unity)f(community)150 1539 y(also)27 b(strives)f(to)h(cr)o(eate)f
(simple,)g(crisp)h(designs)g(that)f(dont)i(have)e(unnecessary)g
(details.)h(They)f(have)h(r)o(ecognized)150 1683 y(that)21
b(these)h(details)f(can)h(actual)f(hinder)i(the)f(immersive)g
(experience)g(instead)f(of)i(help)f(it.)150 1882 y
SDict begin H.S end
 150
1882 a 150 1882 a
SDict begin 17.3749 H.A end
 150 1882 a 150 1882 a
SDict begin [/View [/XYZ H.V]/Dest (subsection.2.2) cvn /DEST pdfmark
end
 150 1882 a 122
x Fc(2.2)79 b(Fishing)24 b(Activity)150 2048 y
SDict begin H.S end
 150 2048
a 150 2048 a
SDict begin 17.3749 H.A end
 150 2048 a 150 2048 a
SDict begin [/View [/XYZ H.V]/Dest (subsubsection.2.2.1) cvn /DEST
pdfmark end
 150 2048 a 127 x Fb(2.2.1)79
b(Process)21 b(User)h(W)m(and)g(Mo)o(v)n(ement)150 2337
y Fh(The)e(\002rst)h(step)e(to)i(cr)o(eating)g(an)f(immersive)g
(\002shing)h(experience)f(will)h(be)g(collecting)g(the)g(users's)e
(movement)i(fr)o(om)150 2482 y(the)g(virtual)g(r)o(eality)g(contr)o
(ollers.)g(Since)g(this)g(is)g(an)g(essential)f(compement)h(of)h(the)f
(pr)o(oject,)f(we)i(will)f(be)h(examining)150 2626 y(how)j(thr)o(ee)f
(dif)o(fer)o(ent)h(gaming)g(engines)f(go)h(about)f(doing)i(this.)e(For)
h(this)f(speci\002c)g(pr)o(oject)g(we)h(will)g(be)f(using)g(the)150
2770 y(HTC)e(V)l(ive)g(so)g(we)g(ar)o(e)g(concer)o(end)h(with)g
(capturing)e(the)i(input)e(fr)o(om)i(the)f(two)h(HTC)f(V)l(ive)g(W)-7
b(ands.)21 b(This)h(is)g(a)g(cor)o(e)150 2914 y(component)e(of)g(our)g
(system)f(that)g(other)h(parts)f(of)h(the)f(pr)o(oduct)h(will)g(r)o
(ely)g(on)g(so)f(it)h(should)g(be)f(simple)g(and)h(r)o(eliable)150
3059 y(at)i(the)g(same)f(time.)269 3203 y(W)-7 b(e)22
b(will)h(consider)h(thr)o(ee)e(dif)o(fer)o(ent)h(gaming)g(engines)f(to)
h(accomplish)f(this)g(task,)g(Unity)-9 b(,)22 b(Unr)o(eal)g(Engine,)h
(and)150 3347 y(Amazon's)c(Lumberyar)o(d)h(gaming)g(engine.)h(T)-7
b(wo)20 b(dif)o(fer)o(ent)h(aspects)d(of)j(each)f(engine)h(will)g(be)f
(compar)o(ed)g(in)g(or)o(der)150 3491 y(to)g(r)o(each)g(a)g(\002nal)f
(ver)o(dict)h(on)h(which)f(is)g(the)g(most)g(useful)f(for)i(the)f
(task.)f(First)h(ther)o(e)g(is)f(the)h(consideration)h(of)g(which)150
3636 y(language,)k(and)h(tools)g(ar)o(e)f(used)h(to)g(complete)g(the)g
(task.)f(Second,)h(since)g(this)f(is)h(a)f(cor)o(e)i(function)f(of)h
(our)f(system)150 3780 y(we)c(will)g(consider)h(if)g(the)f(gaming)g
(engine)g(has)f(native)g(virtual)h(r)o(eality)f(support)g(or)i(not.)p
0 TeXcolorgray 1045 3975 1810 4 v 1045 4088 4 113 v 1098
4054 a Fa(Engine)c(Name)p 1574 4088 V 1594 4088 V 239
w(Language)p 2179 4088 V 198 w(Native)h(VR)e(Support)p
2851 4088 V 1045 4091 1810 4 v 1045 4204 4 113 v 1098
4170 a(Unity)p 1574 4204 V 1594 4204 V 581 w(C#)p 2179
4204 V 540 w(Y)-6 b(es)p 2851 4204 V 1045 4207 1810 4
v 1045 4320 4 113 v 1098 4286 a(Unr)o(eal)19 b(Engine)p
1574 4320 V 1594 4320 V 123 w(Blueprint)g(V)l(isual)p
2179 4320 V 341 w(Y)-6 b(es)p 2851 4320 V 1045 4323 1810
4 v 1045 4435 4 113 v 1098 4402 a(Lumberyar)o(d)p 1574
4435 V 1594 4435 V 362 w(Lua)p 2179 4435 V 526 w(No)p
2851 4435 V 1045 4439 1810 4 v 1045 4459 V 0 TeXcolorgray
269 4750 a Fh(First)19 b(we)h(will)g(consider)g(the)f(Unity)g(engine.)h
(Scripting)f(in)h(Unity)f(is)g(primarily)h(done)g(in)g(C#.)f(Most)g(of)
h(the)g(team)150 4895 y(working)e(on)h(this)e(pr)o(oject)g(has)g
(experience)g(in)h(C#,)f(so)h(that)f(is)h(an)f(easy)g(bene\002t)g(of)i
(using)e(Unity)-9 b(.)17 b(Even)h(for)h(members)150 5039
y(of)28 b(the)g(team)f(who)i(do)f(not)g(have)f(experience,)h(C#)f(is)h
(a)f(fairly)h(easy)f(language)g(to)h(pick)g(up.)f(In)g(or)o(der)i(to)f
(handle)p 0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 8 9
TeXDict begin 8 8 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray
142 -164 a
SDict begin H.S end
 142 -164 a 142 -164 a
SDict begin H.R end
 142 -164 a 142 -164
a
SDict begin [/View [/XYZ H.V]/Dest (page.8) cvn /DEST pdfmark end
 142 -164 a 0 TeXcolorgray 0 TeXcolorgray 3718 -56 a
Fg(8)p 0 TeXcolorgray 150 96 a Fh(contr)o(oller)25 b(input)f(in)g
(Unity)h(one)f(can)h(make)f(use)f(of)i(built)f(in)h(SteamVR)e(calls.)h
(For)h(example)e(ther)o(e)h(ar)o(e)g(SteamVR)150 240
y(callls)g(to)g(access)g(the)g(contr)o(oller)h(itself,)f(as)g(well)h
(as)e(various)h(buttons)f(on)i(the)g(contr)o(oller)g([)p
0 1 0 TeXcolorrgb 2982 240 a
SDict begin H.S end
 2982 240 a 0 1 0 TeXcolorrgb
Fh(14)p 0 1 0 TeXcolorrgb 3061 185 a
SDict begin H.R end
 3061 185 a 3061
240 a
SDict begin [/Color [0 1 0]/H /I/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (cite.steamvr_controllers) cvn H.B /ANN pdfmark end
 3061 240 a 0 TeXcolorgray Fh(].)g(This)f(abstracts)e(the)150
385 y(pr)o(ocess)e(of)h(r)o(etrieving)g(contr)o(oller)g(input)g(gr)o
(eatly)-9 b(,)20 b(which)h(is)g(a)f(good)i(thing)f(in)g(this)f(case.)g
(The)h(generally)g(accepted)150 529 y(appr)o(oach)h(to)i(captur)o(e)e
(the)h(contr)o(oller)h(input)f(in)h(Unity)f(is)g(to)g(cr)o(eate)g(a)g
(contr)o(oller)h(class)f(that)f(makes)h(use)g(of)h(these)150
673 y(calls.)d(Unity)h(is)f(of)o(\002cially)h(supported)f(for)i
(development)f(for)h(the)e(V)l(ive.)h(Ther)o(efor)o(e)f(much)h
(documentation)g(exists)150 817 y(on)g(the)g(subject)f(of)i(capturing)e
(contr)o(oller)i(movement.)269 961 y(The)36 b(next)h(engine)g(to)f
(consider)i(for)g(this)e(task)g(is)g(the)h(Unr)o(eal)f(Engine.)h
(Unlike)g(Unity)-9 b(,)36 b(Unr)o(eal)g(does)h(not)150
1105 y(make)29 b(use)g(of)h(a)f(traditional)h(pr)o(ogramming)f
(language.)f(Instead,)g(as)h(a)g(developer)h(you)f(use)g(Blueprint)g(V)
l(isual.)150 1249 y(Similar)24 b(to)g(C#,)g(it)g(is)f(used)h(to)g
(de\002ne)h(object)e(oriented)i(classes.)d(The)i(only)h(dif)o(fer)o
(ence)f(is)g(that)g(it)g(is)f(done)i(visually)150 1394
y(instead)19 b(of)g(with)h(code.)f(The)g(pr)o(ocess)f(for)i(working)g
(with)f(Motion)h(Contr)o(ollers)f(in)h(Unr)o(eal)e(is)h(much)g(dif)o
(fer)o(ent)g(than)150 1538 y(Unity)-9 b(.)26 b(The)g(developer)h(picks)
e(fr)o(om)i(a)f(list)g(of)h(Motion)g(Contr)o(oller)o(-speci\002c)g
(inputs)e(in)h(the)h(Pallete)e(panel)h(of)h(the)150 1682
y(Blueprint)d(Editor[)p 0 1 0 TeXcolorrgb 750 1683 a
SDict begin H.S end

750 1683 a 0 1 0 TeXcolorrgb -1 x Fh(15)p 0 1 0 TeXcolorrgb
831 1627 a
SDict begin H.R end
 831 1627 a 831 1682 a
SDict begin [/Color [0 1 0]/H /I/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (cite.unreal_controller) cvn H.B /ANN pdfmark end
 831 1682 a 0 TeXcolorgray
Fh(].)g(Fr)o(om)h(her)o(e)f(you)g(can)g(simply)g(drag)g(and)h(dr)o(op)f
(to)g(attatch)g(a)g(certain)g(contr)o(oller)h(action)f(to)150
1826 y(an)g(action)h(within)g(the)f(game.)g(This)g(simpli\002es)g(the)g
(pr)o(ocess)g(gr)o(eatly)-9 b(,)24 b(but)g(also)g(has)g(the)g(drawback)
h(of)g(not)g(being)150 1971 y(as)g(customizable)e(as)i(if)h(we)f(wer)o
(e)h(writing)f(this)g(in)h(code.)g(The)f(Unr)o(eal)g(Engine)h(has)e
(support)h(for)h(SteamVR,)e(and)150 2115 y(ther)o(efor)o(e)e(the)h(V)l
(ive.)f(That)f(being)i(said,)e(the)i(documentation)f(available)f(for)i
(VR)g(r)o(elated)f(topics)g(is)g(not)h(pletiful)f(as)150
2259 y(with)g(Unity)-9 b(.)269 2403 y(The)28 b(\002nal)g(option)g(for)h
(this)f(task)g(is)g(Amazon's)f(Lumberyar)o(d)h(Engine.)g(What)h(makes)e
(Lumberyar)o(d)h(unique)150 2547 y(is)k(that)f(you)h(can)g(choose)h(to)
f(use)f(the)h(Flow)h(Graph)f(System)f(for)i(visual)e(scripting)h(on)g
(the)g(Lua)g(language)f(for)150 2691 y(code)i(based)f(scripting.)g(As)g
(far)h(as)f(capturing)g(contr)o(oller)h(input,)f(it)g(is)h(possible)e
(with)i(both.)f(Using)g(the)h(Flow)150 2835 y(Graph)h(one)h(can)f(cr)o
(eate)f(a)h(VR:Contr)o(ollerT)-7 b(racking)34 b(node)h(which)g(pr)o
(ovides)e(up)h(to)g(date)g(info)h(r)o(egar)o(ding)f(the)150
2980 y(contr)o(oller)6 b('s)23 b(curr)o(ent)g(position)f(and)h(status)e
([)p 0 1 0 TeXcolorrgb 1570 2981 a
SDict begin H.S end
 1570 2981 a 0 1 0
TeXcolorrgb -1 x Fh(16)p 0 1 0 TeXcolorrgb 1650 2924
a
SDict begin H.R end
 1650 2924 a 1650 2980 a
SDict begin [/Color [0 1 0]/H /I/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (cite.lumberyard_controller_flow) cvn H.B /ANN pdfmark end
 1650 2980 a 0 TeXcolorgray
Fh(].)i(Alternatively)-9 b(,)22 b(one)h(can)g(use)f(Lua)h(to)g(access)f
(the)h(T)-7 b(rackingState)150 3124 y(str)o(uct)32 b(which)h(contains)g
(the)f(linear)h(velocity)-9 b(,)32 b(acceleration,)h(and)f(all)h(other)
g(tracking)f(info)i(of)f(each)f(contr)o(oller)150 3268
y([)p 0 1 0 TeXcolorrgb 176 3268 a
SDict begin H.S end
 176 3268 a 0 1 0 TeXcolorrgb
Fh(17)p 0 1 0 TeXcolorrgb 256 3213 a
SDict begin H.R end
 256 3213 a 256 3268
a
SDict begin [/Color [0 1 0]/H /I/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (cite.lumberyard_controller_lua) cvn H.B /ANN pdfmark end
 256 3268 a 0 TeXcolorgray Fh(].)22 b(Lumberyar)o(d)h(has)f(this)g
(bene\002t)h(of)g(being)g(\003exible)f(in)h(the)g(implementation.)e
(However)-6 b(,)23 b(Lumberyar)o(d's)f(VR)150 3412 y(support)f(is)h
(curr)o(ently)g(still)f(in)i(beta)e(and)h(the)g(documentation)g(is)g
(lacking.)269 3556 y(After)27 b(considering)h(the)f(above)f(options,)g
(Unity)h(stands)f(out)h(as)f(the)h(best)f(option)i(to)f(captur)o(e)e
(the)i(contr)o(oller)150 3700 y(movement.)36 b(First)h(of)g(all,)f(the)
h(language,)e(C#,)i(that)f(Unity)g(uses)g(for)h(scripting)g(is)f
(ideal.)h(Most)f(of)h(the)g(team)150 3844 y(members)31
b(ar)o(e)g(familiar)h(with)g(the)f(language)g(so)h(ther)o(e)f(will)h
(be)f(no)i(time)e(wasted)g(learning)h(a)f(new)h(language.)150
3989 y(Also,)j(compar)o(ed)h(to)g(Blueprint)g(V)l(isual)f(and)h(the)g
(Flow)g(Graph)g(of)h(Unr)o(eal)e(and)h(Lumberyar)o(d,)f(r)o
(espectively)-9 b(,)150 4133 y(scripting)26 b(in)h(C#,)f(of)o(fers)h
(mor)o(e)f(\003exibility)h(for)g(capturing)f(contr)o(oller)h(movement.)
f(Unity)g(has)g(the)h(best)e(support)150 4277 y(for)e(the)e(HTC)g(V)l
(ive.)g(This)g(is)h(important)f(for)h(the)g(pr)o(oject)f
(speci\002cally)f(because)h(as)f(it)i(will)g(be)f(in)h(a)f(r)o(etail)g
(setting,)g(it)150 4421 y(needs)h(to)h(be)f(as)f(r)o(eliable)h(as)f
(possible.)g(Finally)-9 b(,)22 b(Unity)g(is)g(the)g(best)g(option)g(in)
h(terms)e(of)i(documentation)g(which)f(is)150 4566 y(important)f(for)i
(development.)150 4673 y
SDict begin H.S end
 150 4673 a 150 4673 a
SDict begin 17.3749 H.A end
 150 4673
a 150 4673 a
SDict begin [/View [/XYZ H.V]/Dest (subsubsection.2.2.2) cvn /DEST
pdfmark end
 150 4673 a 121 x Fb(2.2.2)79 b(Impor)s(t)23
b(Fishing)e(Assets)150 4956 y Fh(As)j(none)h(of)h(the)f(members)f(of)i
(this)e(team)h(ar)o(e)f(artists,)f(the)i(pr)o(oject)f(will)h(r)o(ely)g
(heavily)g(on)g(downloadable)g(assets.)150 5100 y(These)g(assets)f
(will)i(be)g(used)f(to)h(cr)o(eate)g(nearly)g(all)f(aspects)f(of)j(the)
f(virtual)f(r)o(eality)g(envir)o(onment.)h(Ther)o(efor)o(e)f(the)p
0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 9 10
TeXDict begin 9 9 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray
142 -164 a
SDict begin H.S end
 142 -164 a 142 -164 a
SDict begin H.R end
 142 -164 a 142 -164
a
SDict begin [/View [/XYZ H.V]/Dest (page.9) cvn /DEST pdfmark end
 142 -164 a 0 TeXcolorgray 0 TeXcolorgray 3718 -56 a
Fg(9)p 0 TeXcolorgray 150 96 a Fh(assets)19 b(used)i(play)g(an)g
(essential)f(r)o(ole)h(in)g(cr)o(eating)g(the)g(most)g(r)o(ealistic)f
(envir)o(onment)h(possible.)f(A)h(wide)h(variety)e(of)150
240 y(assets)f(will)i(be)f(used)h(to)g(cr)o(eate)f(the)g(envir)o
(onment.)h(Ther)o(e)f(is)g(not)h(a)g(de\002ned)g(list)f(of)i(dif)o(fer)
o(ent)f(medias)f(that)g(will)h(be)150 385 y(used)h(but)f(a)h(few)g
(likely)h(ones)f(ar)o(e)f(still)h(images)f(\(textur)o(es\),)g
(animations,)g(and)h(audio.)269 529 y(As)17 b(in)g(other)h(sections,)f
(the)h(ability)f(to)g(handle)h(assets)e(in)i(thr)o(ee)f(dif)o(fer)o
(ent)h(gaming)f(engines,)g(Unity)-9 b(,)17 b(Unr)o(eal,)g(and)150
673 y(Amazon's)26 b(Lumberyar)o(d)i(engine)g(will)g(be)g(compar)o(ed.)f
(Thr)o(ee)g(main)h(categories)f(will)h(be)g(consider)o(ed)g(in)g
(detail.)150 817 y(Firstly)-9 b(,)24 b(the)f(access)g(to)h(a)f(native)g
(asset)f(stor)o(e.)h(This)g(is)h(pr)o(eferable)f(to)g(sear)o(ching)g
(for)i(assets)d(elsewher)o(e.)h(Secondly)-9 b(,)150 962
y(the)22 b(types)f(of)i(\002les)e(that)h(ar)o(e)f(supported)g(for)i
(import.)f(Since)g(we)g(ar)o(e)g(not)g(certain)g(of)h(which)f(assets)e
(we)i(would)h(like)150 1106 y(to)c(use,)g(the)g(engine)g(which)h(has)f
(the)g(widest)g(support)f(for)i(\002le)f(types)g(is)f(pr)o(eferr)o(ed)i
(her)o(e.)f(Finally)-9 b(,)19 b(we)g(will)h(examine)150
1250 y(each)h(engine's)f(method)h(of)h(or)o(ganizing)e(and)h(importing)
g(assets.)e(This)h(pr)o(oject)g(will)h(make)f(use)g(of)i(many)e(assets)
f(so)150 1394 y(an)j(or)o(ganized)g(system)f(is)g(cr)o(ucial.)p
0 TeXcolorgray 305 1590 3291 4 v 305 1702 4 113 v 358
1669 a Fa(Engine)d(Name)p 834 1702 V 854 1702 V 145 w(Asset)g(Stor)o(e)
p 1287 1702 V 507 w(File)h(Support)p 2563 1702 V 507
w(Asset)g(Or)o(ganization)i(and)d(Import)p 3592 1702
V 305 1706 3291 4 v 305 1818 4 113 v 358 1784 a(Unity)p
834 1818 V 854 1818 V 496 w(Y)-6 b(es)p 1287 1818 V 220
w(Images,)19 b(3D)f(models,)h(Animations,)h(Audio)p 2563
1818 V 462 w(Robust)p 3592 1818 V 305 1822 3291 4 v 305
1934 4 113 v 358 1900 a(Unr)o(eal)f(Engine)p 834 1934
V 854 1934 V 154 w(Y)-6 b(es\(new\))p 1287 1934 V 134
w(Images,)19 b(3D)f(models,)h(Animations,)h(Audio)p 2563
1934 V 410 w(Supported)p 3592 1934 V 305 1937 3291 4
v 305 2050 4 113 v 358 2016 a(Lumberyar)o(d)p 834 2050
V 854 2050 V 297 w(No)p 1287 2050 V 679 w(FBX)f(\002les)p
2563 2050 V 897 w(Minimal)p 3592 2050 V 305 2053 3291
4 v 0 TeXcolorgray 269 2345 a Fh(First)25 b(we)g(will)g(consider)h
(Unity)-9 b(.)24 b(One)i(of)f(Unity's)g(selling)f(points)h(is)f(its)h
(Asset)f(Stor)o(e.)g(The)g(Unity)h(Asset)f(stor)o(e)150
2489 y(launched)h(in)g(2010,)f(making)h(the)f(oldest)i(and)f(most)f
(matur)o(e)g(of)i(the)f(thr)o(ee)g(gaming)g(engines)g(in)g(discussion)f
([)p 0 1 0 TeXcolorrgb 3624 2490 a
SDict begin H.S end
 3624 2490 a 0 1 0
TeXcolorrgb -1 x Fh(18)p 0 1 0 TeXcolorrgb 3704 2434
a
SDict begin H.R end
 3704 2434 a 3704 2489 a
SDict begin [/Color [0 1 0]/H /I/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (cite.unity_store_age) cvn H.B /ANN pdfmark end
 3704 2489 a 0 TeXcolorgray
Fh(].)150 2633 y(The)i(asset)g(stor)o(e)g(curr)o(ently)h(has)f(over)h
(15000)d(fr)o(ee)j(and)g(paid)f(3D)h(assets)e(to)i(choose)g(fr)o(om.)g
(While)g(br)o(owsing)f(the)150 2778 y(stor)o(e)e(it)g(becomes)g(appar)o
(ent)e(that)h(ther)o(e)h(has)g(been)g(an)g(asset)e(cr)o(eated)i(for)h
(just)e(about)h(everything)g(that)g(the)g(mind)150 2922
y(can)30 b(imagine.)f(Importing)h(an)f(asset)g(into)h(Unity)f(fr)o(om)h
(outside)g(of)h(the)e(asset)g(stor)o(e)g(is)h(as)f(simple)g(as)g(drag)h
(and)150 3066 y(dr)o(opping)d(the)f(asset)f(into)i(the)g(Unity)f(pr)o
(oject)g(window)-7 b(.)27 b(Assets)e(ar)o(e)h(or)o(ganized)g(in)h
(Unity)g(in)f(the)h(Assets)e(folder)150 3210 y(of)34
b(the)f(Pr)o(oject)g(windows.)g(W)l(ithin)g(the)g(Assets)e(folder)k
(assets)c(ar)o(e)i(or)o(ganized)g(into)g(subgr)o(oups)f(of)i
(materials,)150 3355 y(textur)o(es,)26 b(etc.)h(This)g(makes)f
(\002nding)i(assets)e(a)h(painless)f(pr)o(ocess.)g(Unity)h(supports)f
(all)h(major)g(types)f(of)j(Images,)150 3499 y(3D)22
b(models,)g(Animations,)f(and)h(Audio)g(\002les.)269
3643 y(Second)27 b(we)f(will)h(consider)g(the)g(Unr)o(eal)e(Engine.)i
(Like)g(Unity)-9 b(,)26 b(the)g(Unr)o(eal)g(engine)h(also)f(has)g(an)g
(asset)f(stor)o(e,)150 3787 y(called)j(the)f(Unr)o(eal)f(Engine)i(4)f
(Marketplace.)f(The)h(Marketplace,)f(however)-6 b(,)27
b(is)g(much)h(younger)f(than)g(the)h(Asset)150 3932 y(Stor)o(e)k(of)h
(Unity)-9 b(.)32 b(The)g(Marketplace)f(opened)i(to)f(developers)g
(during)h(2014)e([)p Fd(?)q Fh(].)h(This)g(means)f(that)h(number)g(of)
150 4076 y(available)18 b(assets)f(is)i(signi\002catly)f(smaller)h
(than)g(the)g(Unity)g(Asset)f(Stor)o(e.)g(As)h(far)g(as)g(importing)g
(assets,)e(the)i(pr)o(ocess)150 4220 y(in)26 b(Unr)o(eal)f(is)g
(straightforwar)o(d,)h(and)g(guided)g(by)f(a)h(GUI.)f(Or)o(ganizing)g
(assets)f(in)i(Unr)o(eal)f(is)h(a)f(bit)g(mor)o(e)h(manual)150
4364 y(than)h(Unity)-9 b(.)27 b(One)h(must)f(manual)g(manage)f(the)i
(folders)g(wher)o(e)g(assets)d(ar)o(e)i(stor)o(ed,)h(and)f(ther)o(e)h
(is)f(not)h(an)f(assets)150 4509 y(folder)e(by)f(default.)g(Unr)o(eal)f
(supports)f(all)i(major)f(types)g(of)i(Images,)d(3D)i(models,)g
(animations,)f(and)h(Audio)g(\002les.)150 4653 y(The)h(pr)o(efer)o(ed)g
(\002le)g(format)g(for)h(importing)f(assets)f(FBX)h(\002les,)f(which)i
(is)f(slightly)g(limiting,)f(as)h(not)g(all)g(assets)e(can)150
4797 y(be)f(found)h(in)f(this)g(format.)269 4941 y(Finally)32
b(we)g(have)g(Amazon's)f(Lumberyar)o(d)h(Engine.)h(Unlike)f(Unity)g
(and)g(Unr)o(eal,)f(Lumbeyar)o(d)h(does)h(not)150 5086
y(have)g(a)h(place)f(to)i(download)g(assets)d(fr)o(om)i(within)g(the)g
(engine.)g(This)f(means)g(that)h(you)g(must)f(look)i(to)f(other)p
0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 10 11
TeXDict begin 10 10 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0
TeXcolorgray 142 -164 a
SDict begin H.S end
 142 -164 a 142 -164 a
SDict begin H.R end
 142 -164
a 142 -164 a
SDict begin [/View [/XYZ H.V]/Dest (page.10) cvn /DEST pdfmark end
 142 -164 a 0 TeXcolorgray 0 TeXcolorgray
3685 -56 a Fg(10)p 0 TeXcolorgray 150 96 a Fh(sour)o(ces)32
b(for)i(assets,)d(such)i(as)f(Unity's)g(Asset)g(Stor)o(e,)g(Unr)o
(eal's)g(Marketplace,)g(or)h(other)h(websites.)d(Like)j(other)150
240 y(parts)19 b(of)i(Lumberyar)o(d,)f(the)g(Asset)f(Importer)h(is)f
(still)h(in)h(pr)o(eview)e(r)o(elease)g([)p Fd(?)p Fh(].)i(Curr)o
(ently)f(it)g(only)h(suports)e(FBX)h(by)150 385 y(default.)e(If)g(you)f
(would)i(like)f(to)g(import)g(other)g(\002les)f(you)h(need)g(to)g(need)
g(to)g(manually)f(implement)g(a)h(new)g(importer)150
529 y(that)k(will)h(generate)f(a)g(SceneGraph)g(for)i(that)e
(particular)g(\002le)g(type)g([)p Fd(?)q Fh(].)g(Importing)h(\002les)f
(r)o(equir)o(es)g(navigating)f(the)150 673 y(instalation)g(location)h
(of)h(Lumberyar)o(d)f(and)g(manually)f(copying)i(and)f(pasting)f(the)h
(\002les)f(to)h(the)g(corr)o(ect)h(location.)269 817
y(After)g(considering)i(the)e(thr)o(ee)g(engines,)g(Unity)h(seems)e
(like)i(the)f(clear)h(choice)g(for)g(importing)g(and)g(managing)150
962 y(the)f(assets)e(needed)j(to)f(cr)o(eate)f(our)h(V)l(irtual)g
(Reality)f(envir)o(onment.)h(While)g(both)g(Unity)g(and)g(Unr)o(eal)f
(have)g(places)150 1106 y(to)e(download)i(assets,)c(Unity's)h(Asset)g
(Stor)o(e)h(has)f(the)h(most)g(assets)f(by)h(a)g(long)g(shot.)g(Unity)g
(also)g(has)g(the)g(bene\002t)f(of)150 1250 y(having)25
b(simple)f(work\003ow)h(for)h(importing)f(assets)e(compar)o(ed)i(to)g
(Lumberyar)o(d.)f(Unity)h(has)f(native)g(support)g(for)150
1394 y(importing)g(many)f(dif)o(fer)o(ent)h(\002le)f(types,)f(which)i
(is)g(bene\002cial)f(as)f(it)i(is)f(not)h(clear)f(which)h(assets)e(we)i
(will)f(be)h(using)150 1539 y(yet.)k(Finally)-9 b(,)29
b(the)g(pr)o(ocess)f(of)h(importing)g(and)g(managing)g(assets)d(is)j
(or)o(ganized)g(and)g(stable,)e(which)i(cannot)g(be)150
1683 y(said)22 b(about)f(Lumberyar)o(d.)150 1798 y
SDict begin H.S end
 150
1798 a 150 1798 a
SDict begin 17.3749 H.A end
 150 1798 a 150 1798 a
SDict begin [/View [/XYZ H.V]/Dest (subsubsection.2.2.3) cvn /DEST
pdfmark end
 150 1798 a 122
x Fb(2.2.3)79 b(Fishing)21 b(Rod)i(Inter)o(action)e(and)h(Mechanics)150
2083 y Fh(W)l(ithin)f(the)g(outdoor)h(virtual)f(r)o(eality)f
(experience)h(ther)o(e)g(will)h(be)e(the)i(opportunity)e(for)i(users)f
(to)g(go)h(\003y)f(\002shing)g(in)150 2227 y(the)h(virtual)g(river)-6
b(.)22 b(In)g(or)o(der)h(to)g(achieve)f(this)f(capability)-9
b(,)21 b(we)i(will)f(need)h(to)f(allow)h(the)f(user)g(to)g(\002rst)g
(interact)g(with)150 2371 y(a)g(\002shing)g(r)o(od.)g(The)g(mechanics)f
(of)i(this)f(pr)o(ocess)f(can)h(get)g(quite)g(complicated)g(and)g(ther)
o(efor)o(e)g(it)g(is)g(important)f(for)150 2516 y(us)f(to)g(decide)i
(on)f(the)f(corr)o(ect)h(tool)g(to)f(build)h(this)f(functionality)-9
b(.)21 b(Not)f(only)h(will)g(the)f(user)g(need)h(to)f(be)h(able)f(to)g
(pick)150 2660 y(up)f(the)g(\002shing)g(r)o(od)h(but)f(they)h(will)f
(also)g(need)h(the)f(ability)g(to)h(cast)e(and)i(r)o(eal)f(the)g(line)h
(back)f(in.)g(These)g(ar)o(e)g(the)g(basic)150 2804 y(functionality)i
(of)h(the)g(\002shing)f(r)o(od)h(and)f(will)h(need)f(to)h(be)f(as)g(r)o
(ealistic)f(as)h(possible)f(to)h(cr)o(eate)g(the)g(illusion)g(they)h
(ar)o(e)150 2948 y(actually)f(participating)f(in)i(the)f(activity)-9
b(.)21 b(In)g(this)g(document)h(I)g(will)f(be)h(comparing)f(the)h
(virtual)e(object)i(mechanics)150 3093 y(within)g(dif)o(fer)o(ent,)g
(fr)o(ee)h(gaming)e(engines:)h(Unity3D,)f(Unr)o(eal)h(Engine,)g(and)g
(Lumberyar)o(d.)269 3237 y(In)g(or)o(der)i(to)f(\002nd)g(out)f(which)i
(of)f(these)f(tools)h(will)g(be)f(the)h(most)f(ef)o(fective)h(we)g
(will)g(be)f(looking)i(at)e(the)h(ease)e(of)150 3381
y(scripting)26 b(mechanics)f(and)h(pr)o(ogramming)g(haptic)f(feedback.)
h(Fly)g(\002shing)g(is)f(all)h(about)f(the)h(smooth)g(motion)g(of)150
3525 y(the)e(r)o(od.)g(In)g(or)o(der)h(to)f(cr)o(eate)g(a)f(similar)h
(experience)g(in)g(virtual)f(r)o(eality)h(ther)o(e)g(needs)g(to)g(be)g
(some)f(kind)i(of)g(haptic)150 3670 y(feedback)e(\(contr)o(oller)h
(vibration\).)f(Fortunately)-9 b(,)23 b(my)g(team)f(has)h(been)g(given)
g(an)g(HTC)f(V)l(ive)h(setup)f(which)h(comes)150 3814
y(with)31 b(two)f(wir)o(eless)g(contr)o(ollers.)g(These)g(contr)o
(ollers)h(of)o(fer)g(HD)g(haptic)f(feedback)g(with)h(24)f(sensors)f(to)
i(ensur)o(e)150 3958 y(accurate)21 b(movement)h(tracking)g([ONE].)h
(This)f(then)g(brings)g(up)f(the)h(question)g(of)h(softwar)o(e.)p
0 TeXcolorgray 150 4154 3600 4 v 150 4266 4 113 v 203
4232 a Fa(Engine)c(Name)p 865 4266 V 885 4266 V 490 w(Language)p
1601 4266 V 346 w(Physics)h(Engine)p 2316 4266 V 248
w(Haptic)g(Scripting)p 3031 4266 V 243 w(Documentation)p
3747 4266 V 150 4269 3600 4 v 150 4382 4 113 v 203 4348
a(Unity)p 865 4382 V 885 4382 V 832 w(C#)p 1601 4382
V 627 w(Y)-6 b(es)p 2316 4382 V 617 w(Y)g(es)p 3031 4382
V 617 w(Y)g(es)p 3747 4382 V 150 4494 V 203 4461 a(Unr)o(eal)19
b(Engine)p 865 4494 V 885 4494 V 374 w(Blueprint)h(V)l(isual)p
1601 4494 V 427 w(Y)-6 b(es)p 2316 4494 V 617 w(Y)g(es)p
3031 4494 V 617 w(Y)g(es)p 3747 4494 V 150 4607 V 203
4573 a(Lumberyar)o(d)p 865 4607 V 885 4607 V 613 w(Lua)p
1601 4607 V 533 w(Minimal)p 2316 4607 V 464 w(Minimal)p
3031 4607 V 541 w(Y)g(es)p 3747 4607 V 150 4610 3600
4 v 0 TeXcolorgray 269 4902 a Fh(The)18 b(\002rst)g(engine)g(to)g
(discuss)g(in)g(Unity)g(which)h(is)f(one)h(of)g(the)f(most)g(common)h
(tools)f(for)h(beginners)f(developing)150 5046 y(virtual)h(r)o(eality)g
(applications.)f(Unity)i(tools)g(r)o(elated)f(to)h(the)g(physics)f
(engine)h(and)g(haptic)f(feedback)h(ar)o(e)g(incr)o(edibly)p
0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 11 12
TeXDict begin 11 11 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0
TeXcolorgray 142 -164 a
SDict begin H.S end
 142 -164 a 142 -164 a
SDict begin H.R end
 142 -164
a 142 -164 a
SDict begin [/View [/XYZ H.V]/Dest (page.11) cvn /DEST pdfmark end
 142 -164 a 0 TeXcolorgray 0 TeXcolorgray
3685 -56 a Fg(11)p 0 TeXcolorgray 150 96 a Fh(easy)25
b(to)g(use)g(for)h(developers)f(familiar)h(with)f(C#.)g(Ther)o(e)g(ar)o
(e)g(extensive)f(built-in)i(libraries)f(and)g(a)g(very)h(intuitive)150
240 y(str)o(uctur)o(e.)17 b(Documentation)h(and)h(support)e(is)h(also)f
(str)o(ong)h(for)h(Unity)f(pr)o(ogramming)g(which)g(explains)f(why)h
(Unity)150 385 y(is)f(a)g(gr)o(eat)g(choice)h(for)g(people)f(new)h(to)f
(physics)g(engines)g(and)g(virtual)g(object)g(mechanics.)g(The)g(next)g
(tool)g(to)h(discuss)150 529 y(in)f(Unr)o(eal)f(Engine)i(which)f(uses)f
(Blueprint)h(V)l(isual.)e(This)i(is)f(an)h(incr)o(edibly)g(powerful)h
(engine)f(and)g(ther)o(efor)o(e)g(of)o(fers)150 673 y(an)29
b(extensive)f(physics)h(engine.)g(The)g(Blueprint)g(V)l(isual)g
(interface)g(for)i(developers)e(makes)f(development)h(easy)150
817 y(and)c(visually)f(clear)-6 b(.)25 b(This)f(could)i(make)e(the)h
(pr)o(ocess)f(of)i(implementing)e(physics)g(simple)g(and)h
(straightforwar)o(d.)150 962 y(Haptic)e(feedback)h(is)g(implemented)f
(in)i(a)e(similar)h(fashion)g(with)g(check)g(boxes)f(and)i(dr)o(op)f
(down)g(menus)g(instead)150 1106 y(of)j(having)g(to)g(write)g(a)f
(single)h(line)g(of)g(code.)h(This)e(would)h(be)g(gr)o(eat)f(for)i
(those)e(unfamiliar)h(with)g(pr)o(ogramming)150 1250
y(fundamentals.)33 b(The)h(last)g(engine)g(is)g(Lumberyar)o(d)g(which)h
(uses)e(the)i(Lua)f(scripting)g(language.)f(The)h(physics)150
1394 y(engine)26 b(and)g(haptic)g(feedback)g(pr)o(ogramming)g(ar)o(e)f
(still)h(in)g(their)g(infancy)h(but)e(do)i(of)o(fer)g(some)e
(capabilities.)f(For)150 1539 y(a)h(virtual)f(r)o(eality)g(pr)o(oject)g
(with)h(a)f(lot)h(of)h(moving)f(pieces,)f(the)h(simplicity)f(of)h
(lumberyar)o(d)g(may)f(be)h(a)f(hindrance)150 1683 y(and)e(not)g(of)o
(fer)h(enough)g(fr)o(eedom)f(to)g(developers.)269 1827
y(For)32 b(our)g(pr)o(oject,)f(the)g(best)g(tool)h(to)g(use)f(is)g
(going)h(to)g(be)f(easy)g(to)h(learn)g(yet)f(still)g(have)g(extensive)g
(physics)150 1971 y(functionality)38 b(to)g(give)g(us)f(enough)i(fr)o
(eedom)f(while)g(developing.)g(Based)g(pur)o(ely)f(on)i(the)f(ease)f
(of)i(use)e(and)150 2116 y(capabilities)22 b(of)i(the)f(physics)g
(engine)h(and)f(haptic)g(feedback)h(contr)o(ol,)g(the)f(best)g(tool)h
(would)g(be)f(Unity)-9 b(.)23 b(The)g(main)150 2260 y(r)o(eason)30
b(for)i(this)f(is)f(that)h(Unity)f(is)h(easier)f(to)h(get)g(started)g
(on)g(and)g(given)g(the)g(timeframe)g(of)g(our)h(pr)o(oject,)d(it)i(is)
150 2404 y(important)20 b(we)h(ar)o(e)f(able)g(to)h(cr)o(eate)f(a)g
(fundamental)h(application)e(as)h(quickly)h(as)f(possible.)f(The)i
(physics)f(engine)g(is)150 2548 y(clean)i(and)g(should)g(give)g(us)g
(enough)g(fr)o(eedom)h(to)f(cr)o(eate)f(a)h(r)o(ealistic)f(\003y)h
(\002shing)g(experience.)150 2711 y
SDict begin H.S end
 150 2711 a 150 2711
a
SDict begin 17.3749 H.A end
 150 2711 a 150 2711 a
SDict begin [/View [/XYZ H.V]/Dest (subsubsection.2.2.4) cvn /DEST
pdfmark end
 150 2711 a 122 x Fb(2.2.4)79
b(Integ)o(r)o(ate)23 b(Usage)f(with)g(En)n(vironment)150
2996 y Fh(Cr)o(eating)36 b(a)h(r)o(ealistic)f(\002shing)h(r)o(od)g
(that)g(users)f(ar)o(e)g(able)h(to)g(pick)g(up)f(and)h(move)g(ar)o
(ound)g(is)f(one)i(thing)f(but)150 3140 y(to)g(integrate)g(these)f
(movements)h(with)g(the)g(envir)o(onment)g(is)f(incr)o(edibly)i
(important)e(to)i(cr)o(eating)e(a)h(r)o(ealistic)150
3284 y(experience.)27 b(Accor)o(ding)i(to)e(user)h(studies)f(done)h(by)
g(Intel)f(and)h(Thug[ONE],)g(r)o(ealistic)f(interaction)g(is)h(the)f
(most)150 3428 y(important)33 b(heuristic)g(when)h(it)g(comes)f(to)h
(overall)g(enjoyment)f(and)h(feeling)g(of)g(immersion)g(with)g(corr)o
(elation)150 3573 y(coef)o(\002cients)27 b(of)h(.49)e(and)h(.57)g(r)o
(espectively)f(\(1.0)g(is)h(a)g(perfect)g(corr)o(elation\).)h(If)f
(these)g(ar)o(e)g(the)g(two)g(standar)o(ds)f(we)150 3717
y(ar)o(e)f(looking)i(at,)e(in)g(or)o(der)i(to)f(have)f(a)g(successful)g
(application)f(we)i(will)g(need)g(to)g(allow)g(users)f(to)g(easily)g
(interact)150 3861 y(with)20 b(all)g(aspects)e(of)j(the)f(\002shing)g
(envir)o(onment.)f(While)h(\003y)h(\002shing,)e(people)h(stand)f
(either)h(in)h(the)e(water)h(or)h(on)f(the)150 4005 y(bank.)f(These)g
(locations)g(have)g(speci\002c)h(characteristics)e(such)i(as)f(certain)
g(insects,)g(\002sh,)g(plants,)f(water)i(movement,)150
4150 y(and)25 b(sounds.)f(The)h(user)f(will)i(then)e(need)i(to)f(be)g
(able)f(to)h(interact)g(with)g(these)f(objects)g(as)g(well)h(as)f(the)h
(other)g(way)150 4294 y(ar)o(ound.)18 b(In)h(this)f(document)h(I)g
(will)g(be)f(comparing)h(the)f(virtual)g(object)h(mechanics)f(within)h
(dif)o(fer)o(ent,)g(fr)o(ee)f(gaming)150 4438 y(engines:)k(Unity3D,)f
(Unr)o(eal)g(Engine,)i(and)f(Lumberyar)o(d.)269 4582
y(In)27 b(or)o(der)h(to)g(\002nd)f(out)h(which)f(of)h(these)f(tools)g
(will)h(be)f(the)g(most)g(ef)o(fective)h(we)f(will)h(be)f(looking)h(at)
f(the)g(ease)150 4727 y(of)e(importing)f(animals,)f(of)h(triggering)h
(sounds,)e(and)h(of)h(animating)e(these)h(objects.)f(The)g(animation)h
(is)g(the)f(most)150 4871 y(important)29 b(as)h(it)f(needs)h(to)g(not)h
(only)f(give)g(the)f(illusion)h(of)h(r)o(ealism)e(but)g(also)h(r)o
(eact)f(to)h(user)g(movements.)e(For)150 5015 y(example,)k(if)i(the)g
(user)f(steps)f(into)h(the)h(water)f(then)g(not)h(only)g(will)g(sounds)
f(need)h(to)f(occur)h(but)f(also)g(certain)p 0 TeXcolorgray
0 TeXcolorgray eop end
%%Page: 12 13
TeXDict begin 12 12 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0
TeXcolorgray 142 -164 a
SDict begin H.S end
 142 -164 a 142 -164 a
SDict begin H.R end
 142 -164
a 142 -164 a
SDict begin [/View [/XYZ H.V]/Dest (page.12) cvn /DEST pdfmark end
 142 -164 a 0 TeXcolorgray 0 TeXcolorgray
3685 -56 a Fg(12)p 0 TeXcolorgray 150 96 a Fh(\002sh)31
b(animations)f(may)h(need)h(to)f(get)g(trigger)o(ed)h(such)e(as)h
(swimming)g(away)f(fr)o(om)i(the)f(user)-6 b(.)31 b(Sounds)g(have)f(an)
150 240 y(incr)o(edible)22 b(power)g(of)h(cr)o(eating)e(immersion)h
(and)g(ther)o(efor)o(e)g(need)h(to)f(be)f(compr)o(ehensive)g(yet)h
(subtle.)f(Subtlety)f(is)150 385 y(a)i(big)g(part)f(of)i(immersion)f
(as)f(users)h(should)g(never)g(feel)g(overwhelmed)h(by)f(noises)f(or)i
(animations.)p 0 TeXcolorgray 150 570 3600 4 v 150 682
4 113 v 203 648 a Fa(Engine)c(Name)p 865 682 V 885 682
V 421 w(Animal)h(Assets)p 1601 682 V 236 w(Animation)f(Assets)p
2316 682 V 252 w(Sound)g(Assets)p 3031 682 V 317 w(Object)f(Assets)p
3747 682 V 150 685 3600 4 v 150 798 4 113 v 203 764 a(Unity)p
865 798 V 885 798 V 823 w(Y)-6 b(es)p 1601 798 V 618
w(Y)g(es)p 2316 798 V 617 w(Y)g(es)p 3031 798 V 617 w(Y)g(es)p
3747 798 V 150 910 V 203 877 a(Unr)o(eal)19 b(Engine)p
865 910 V 885 910 V 477 w(Y)-6 b(es\(Paid\))p 1601 910
V 441 w(Y)g(es\(Paid\))p 2316 910 V 440 w(Y)g(es\(Paid\))p
3031 910 V 440 w(Y)g(es\(Paid\))p 3747 910 V 150 1023
V 203 989 a(Lumberyar)o(d)p 865 1023 V 885 1023 V 625
w(No)p 1601 1023 V 544 w(Minimal)p 2316 1023 V 464 w(Minimal)p
3031 1023 V 465 w(Minimal)p 3747 1023 V 150 1026 3600
4 v 0 TeXcolorgray 269 1307 a Fh(One)27 b(of)h(the)f(biggest)f(ar)o
(eas)f(to)i(look)h(at)f(her)o(e)f(is)h(the)g(availability)e(of)j(fr)o
(ee)f(assets.)e(This)h(scope)h(of)g(this)g(pr)o(oject)150
1452 y(is)d(quite)h(small)f(so)g(it)g(is)h(important)f(to)g(join)h(a)f
(game)g(engine)h(community)f(that)g(supports)f(this.)h(Upon)g(looking)i
(at)150 1596 y(Unity)c(we)h(found)h(that)e(ther)o(e)h(is)f(a)h(wide)g
(range)g(of)g(support)f(for)h(cr)o(eating)g(interactive)f(games.)g
(Objects)g(ar)o(e)g(easily)150 1740 y(importable)17 b(and)h
(interaction)g(is)g(easily)f(pr)o(ogrammable.)g(Objects)g(interactive)g
(well)h(and)h(ar)o(e)e(able)g(to)i(demonstrate)150 1884
y(accurate)27 b(collision)g(mechanics.)g(Ther)o(e)f(is)h(also)g(a)g
(lot)g(of)h(\003exibility)f(when)h(it)f(comes)g(to)g(detected)h(user)f
(location)150 2029 y(and)20 b(movements.)g(Unr)o(eal)f(engine)h(is)g
(equally)g(as)g(powerful)g(but)g(it)g(doesnt)g(pr)o(ovide)g(nearly)g
(as)g(many)g(fr)o(ee)g(assets.)150 2173 y(Realistic)f(interactions)g(r)
o(equir)o(e)g(a)g(lot)h(of)g(subtle)f(objects)g(which)h(wont)f(be)h
(possible)e(in)i(our)g(time)f(frame)h(if)g(we)g(have)150
2317 y(to)g(cr)o(eate)e(everything)i(fr)o(om)g(scratch.)f(Lumberyar)o
(d)g(is)g(an)g(incr)o(edibly)h(simple)f(piece)g(of)h(softwar)o(e)f(and)
g(of)o(fers)h(very)150 2461 y(little)i(when)g(it)g(comes)g(generating)g
(r)o(ealistic)f(user)h(interactions.)269 2604 y(The)35
b(amount)h(of)h(support)e(behind)h(Unity)g(makes)f(this)h(tool)g(much)g
(mor)o(e)g(ef)o(fective)g(for)h(our)g(needs.)e(The)150
2749 y(community)27 b(is)g(made)f(up)h(of)g(mor)o(e)g(enthusiasts)e
(and)i(hobbyists)f(which)i(generates)e(mor)o(e)h(fr)o(ee,)g(quality)f
(assets.)150 2893 y(The)j(\003exibility)g(and)g(simplicity)g(when)g(pr)
o(ogramming)g(user)g(interaction)g(will)h(also)e(give)i(us)e(a)h(lot)h
(of)f(fr)o(eedom)150 3037 y(and)22 b(the)g(ability)g(to)g(cr)o(eate)f
(rapid)h(activity)g(pr)o(ototypes.)150 3216 y
SDict begin H.S end
 150 3216
a 150 3216 a
SDict begin 17.3749 H.A end
 150 3216 a 150 3216 a
SDict begin [/View [/XYZ H.V]/Dest (subsection.2.3) cvn /DEST pdfmark
end
 150 3216 a 121 x Fc(2.3)79
b(Columbia)24 b(Pr)n(oducts)150 3364 y
SDict begin H.S end
 150 3364 a 150
3364 a
SDict begin 17.3749 H.A end
 150 3364 a 150 3364 a
SDict begin [/View [/XYZ H.V]/Dest (subsubsection.2.3.1) cvn /DEST
pdfmark end
 150 3364 a 142 x Fb(2.3.1)79
b(Create)23 b(A)m(v)n(atars)150 3526 y
SDict begin H.S end
 150 3526 a 150
3526 a
SDict begin 17.3749 H.A end
 150 3526 a 150 3526 a
SDict begin [/View [/XYZ H.V]/Dest (subsubsection.2.3.2) cvn /DEST
pdfmark end
 150 3526 a 141 x Fb(2.3.2)79
b(Impor)s(t)23 b(Columbia)e(Gear)150 3702 y
SDict begin H.S end
 150 3702
a 150 3702 a
SDict begin 17.3749 H.A end
 150 3702 a 150 3702 a
SDict begin [/View [/XYZ H.V]/Dest (subsubsection.2.3.3) cvn /DEST
pdfmark end
 150 3702 a 127 x Fb(2.3.3)79
b(Animate)22 b(Clothing)f(on)h(A)m(v)n(atars)150 3865
y
SDict begin H.S end
 150 3865 a 150 3865 a
SDict begin 17.3749 H.A end
 150 3865 a 150 3865 a
SDict begin [/View [/XYZ H.V]/Dest (subsubsection.2.3.4) cvn /DEST
pdfmark end
 150 3865
a 125 x Fb(2.3.4)79 b(Allo)o(w)21 b(User)h(Inter)o(action)g(with)g
(Products)150 4010 y
SDict begin H.S end
 150 4010 a 150 4010 a
SDict begin 17.3749 H.A end
 150 4010 a
150 4010 a
SDict begin [/View [/XYZ H.V]/Dest (section.3) cvn /DEST pdfmark end
 150 4010 a 152 4176 a Fe(3)96 b(C)t Ff(O)t(N)t(C)t(L)t(U)t
(S)t(I)t(O)t(N)150 4369 y
SDict begin H.S end
 150 4369 a 150 4369 a
SDict begin 20.32591 H.A end
 150 4369
a 150 4369 a
SDict begin [/View [/XYZ H.V]/Dest (section*.2) cvn /DEST pdfmark end
 150 4369 a 2 w Fe(R)t Ff(E)t(F)t(E)t(R)t(E)t(N)t(C)t(E)t
(S)150 4427 y
SDict begin H.S end
 150 4427 a 150 4427 a
SDict begin 13.5506 H.A end
 150 4427 a 150 4427
a
SDict begin [/View [/XYZ H.V]/Dest (cite.lumberyard_levels_environment)
cvn /DEST pdfmark end
 150 4427 a 0 TeXcolorgray 111 x Fa([1])p 0 TeXcolorgray
74 w(A.)135 b(W)-6 b(.)136 b(Services,)g(\223Lumberyar)o(d)h(levels)f
(and)g(envir)o(onment,\224)g(2016.)h([Online].)g(A)-6
b(vailable:)p 0 TeXcolorgray 301 4669 a
SDict begin H.S end
 301 4669 a 0
TeXcolorgray -19 x Fa(http://docs.aws.amazon.com/lumberyar)o
(d/latest/user)o(guide/level-)t(intr)o(o.html)p 0 TeXcolorgray
2608 4601 a
SDict begin H.R end
 2608 4601 a 2608 4650 a
SDict begin [/H /I/Border [0 0 0]BorderArrayPatch/Color [0 1 1]/Action
<</Subtype/URI/URI(http://docs.aws.amazon.com/lumberyard/latest/userguide/level-intro.html)>>/Subtype
/Link H.B /ANN pdfmark end
 2608 4650 a 0 TeXcolorgray
150 4669 a
SDict begin H.S end
 150 4669 a 150 4669 a
SDict begin 13.5506 H.A end
 150 4669 a 150 4669
a
SDict begin [/View [/XYZ H.V]/Dest (cite.lumberyard_object_system)
cvn /DEST pdfmark end
 150 4669 a 0 TeXcolorgray 94 x Fa([2])p 0 TeXcolorgray
74 w(\227\227,)183 b(\223Lumberyar)o(d)j(object)d(and)i(entity)f
(system,\224)h(2016.)h([Online].)f(A)-6 b(vailable:)p
0 TeXcolorgray 301 4894 a
SDict begin H.S end
 301 4894 a 0 TeXcolorgray -19
x Fa(http://docs.aws.amazon.com/lumberyar)o(d/latest/user)o
(guide/entities-)t(intr)o(o.html)p 0 TeXcolorgray 2681
4826 a
SDict begin H.R end
 2681 4826 a 2681 4875 a
SDict begin [/H /I/Border [0 0 0]BorderArrayPatch/Color [0 1 1]/Action
<</Subtype/URI/URI(http://docs.aws.amazon.com/lumberyard/latest/userguide/entities-intro.html)>>/Subtype
/Link H.B /ANN pdfmark end
 2681 4875 a 0 TeXcolorgray
150 4894 a
SDict begin H.S end
 150 4894 a 150 4894 a
SDict begin 13.5506 H.A end
 150 4894 a 150 4894
a
SDict begin [/View [/XYZ H.V]/Dest (cite.unity_getting_started) cvn
/DEST pdfmark end
 150 4894 a 0 TeXcolorgray 94 x Fa([3])p 0 TeXcolorgray
74 w(U.)101 b(T)-6 b(echnologies,)103 b(\223Unity)g(getting)f(started)g
(with)g(vr)g(development,\224)g(2016.)h([Online].)g(A)-6
b(vailable:)p 0 TeXcolorgray 301 5119 a
SDict begin H.S end
 301 5119 a 0
TeXcolorgray -19 x Fa
(https://unity3d.com/learn/tutorials/topics/virtual-)t(r)o(eali)q
(ty/getting-)t(star)q(ted-)t(vr)o(-)t(development)p 0
TeXcolorgray 3051 5051 a
SDict begin H.R end
 3051 5051 a 3051 5100 a
SDict begin [/H /I/Border [0 0 0]BorderArrayPatch/Color [0 1 1]/Action
<</Subtype/URI/URI(https://unity3d.com/learn/tutorials/topics/virtual-reality/getting-started-vr-development)>>/Subtype
/Link H.B /ANN pdfmark end
 3051
5100 a 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray eop
end
%%Page: 13 14
TeXDict begin 13 13 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0
TeXcolorgray 142 -164 a
SDict begin H.S end
 142 -164 a 142 -164 a
SDict begin H.R end
 142 -164
a 142 -164 a
SDict begin [/View [/XYZ H.V]/Dest (page.13) cvn /DEST pdfmark end
 142 -164 a 0 TeXcolorgray 0 TeXcolorgray
3685 -56 a Fg(13)p 0 TeXcolorgray 150 0 a
SDict begin H.S end
 150 0 a 150
0 a
SDict begin 13.5506 H.A end
 150 0 a 150 0 a
SDict begin [/View [/XYZ H.V]/Dest (cite.unreal_editor_manual) cvn
/DEST pdfmark end
 150 0 a 0 TeXcolorgray 96 x Fa([4])p
0 TeXcolorgray 74 w(E.)197 b(Games,)h(\223Unr)o(eal)h(engine)f(editor)g
(manual,\224)h(2016.)g([Online].)g(A)-6 b(vailable:)p
0 TeXcolorgray 301 227 a
SDict begin H.S end
 301 227 a 0 TeXcolorgray -18
x Fa(https://docs.unr)o
(ealengine.com/latest/INT/Engine/Editor/index.html)p
0 TeXcolorgray 2419 160 a
SDict begin H.R end
 2419 160 a 2419 209 a
SDict begin [/H /I/Border [0 0 0]BorderArrayPatch/Color [0 1 1]/Action
<</Subtype/URI/URI(https://docs.unrealengine.com/latest/INT/Engine/Editor/index.html)>>/Subtype
/Link H.B /ANN pdfmark end
 2419
209 a 0 TeXcolorgray 150 227 a
SDict begin H.S end
 150 227 a 150 227 a
SDict begin 13.5506 H.A end
 150
227 a 150 227 a
SDict begin [/View [/XYZ H.V]/Dest (cite.lumberyard_animation) cvn
/DEST pdfmark end
 150 227 a 0 TeXcolorgray 94 x Fa([5])p
0 TeXcolorgray 74 w(A.)226 b(W)-6 b(.)226 b(Services,)g(\223Lumberyar)o
(d)h(animation,\224)h(2016.)g([Online].)f(A)-6 b(vailable:)p
0 TeXcolorgray 301 452 a
SDict begin H.S end
 301 452 a 0 TeXcolorgray -18
x Fa(http://docs.aws.amazon.com/lumberyar)o(d/latest/developer)o
(guide/animation-)t(intr)o(o.html)p 0 TeXcolorgray 2937
385 a
SDict begin H.R end
 2937 385 a 2937 434 a
SDict begin [/H /I/Border [0 0 0]BorderArrayPatch/Color [0 1 1]/Action
<</Subtype/URI/URI(http://docs.aws.amazon.com/lumberyard/latest/developerguide/animation-intro.html)>>/Subtype
/Link H.B /ANN pdfmark end
 2937 434 a 0 TeXcolorgray
150 452 a
SDict begin H.S end
 150 452 a 150 452 a
SDict begin 13.5506 H.A end
 150 452 a 150 452 a
SDict begin [/View [/XYZ H.V]/Dest (cite.unity_animation) cvn /DEST
pdfmark end
 150
452 a 0 TeXcolorgray 94 x Fa([6])p 0 TeXcolorgray 74
w(U.)286 b(T)-6 b(echnologies,)288 b(\223Unity)g(animation,\224)g
(2016.)g([Online].)g(A)-6 b(vailable:)p 0 TeXcolorgray
301 677 a
SDict begin H.S end
 301 677 a 0 TeXcolorgray -18 x Fa
(https://docs.unity3d.com/Manual/AnimationSection.html)p
0 TeXcolorgray 2069 610 a
SDict begin H.R end
 2069 610 a 2069 659 a
SDict begin [/H /I/Border [0 0 0]BorderArrayPatch/Color [0 1 1]/Action
<</Subtype/URI/URI(https://docs.unity3d.com/Manual/AnimationSection.html)>>/Subtype
/Link H.B /ANN pdfmark end
 2069
659 a 0 TeXcolorgray 150 677 a
SDict begin H.S end
 150 677 a 150 677 a
SDict begin 13.5506 H.A end
 150
677 a 150 677 a
SDict begin [/View [/XYZ H.V]/Dest (cite.unity_animation_tutorial)
cvn /DEST pdfmark end
 150 677 a 0 TeXcolorgray 94 x Fa([7])p
0 TeXcolorgray 74 w(\227\227,)17 b(\223Unity)i(animation)h
(tutorial,\224)g(2016.)g([Online].)f(A)-6 b(vailable:)p
0 TeXcolorgray 2058 790 a
SDict begin H.S end
 2058 790 a 0 TeXcolorgray -19
x Fa(https://unity3d.com/learn/tutorials/topics/animation)p
0 TeXcolorgray 3712 723 a
SDict begin H.R end
 3712 723 a 3712 771 a
SDict begin [/H /I/Border [0 0 0]BorderArrayPatch/Color [0 1 1]/Action
<</Subtype/URI/URI(https://unity3d.com/learn/tutorials/topics/animation)>>/Subtype
/Link H.B /ANN pdfmark end
 3712
771 a 0 TeXcolorgray 150 790 a
SDict begin H.S end
 150 790 a 150 790 a
SDict begin 13.5506 H.A end
 150
790 a 150 790 a
SDict begin [/View [/XYZ H.V]/Dest (cite.unreal_animation) cvn /DEST
pdfmark end
 150 790 a 0 TeXcolorgray 94 x Fa([8])p
0 TeXcolorgray 74 w(E.)144 b(Games,)h(\223Unr)o(eal)g(engine)g
(skeletal)h(mesh)f(animation,\224)h(2016.)g([Online].)f(A)-6
b(vailable:)p 0 TeXcolorgray 301 1015 a
SDict begin H.S end
 301 1015 a 0
TeXcolorgray -19 x Fa(https://docs.unr)o
(ealengine.com/latest/INT/Engine/Animation/index.html)p
0 TeXcolorgray 2552 948 a
SDict begin H.R end
 2552 948 a 2552 996 a
SDict begin [/H /I/Border [0 0 0]BorderArrayPatch/Color [0 1 1]/Action
<</Subtype/URI/URI(https://docs.unrealengine.com/latest/INT/Engine/Animation/index.html)>>/Subtype
/Link H.B /ANN pdfmark end
 2552
996 a 0 TeXcolorgray 150 1015 a
SDict begin H.S end
 150 1015 a 150 1015 a
SDict begin 13.5506 H.A end

150 1015 a 150 1015 a
SDict begin [/View [/XYZ H.V]/Dest (cite.engadget_immersive_sound)
cvn /DEST pdfmark end
 150 1015 a 0 TeXcolorgray 94 x
Fa([9])p 0 TeXcolorgray 74 w(M.)21 b(Lalwani,)h(\223For)g(vr)g(to)f(be)
g(tr)o(uly)i(immersive,)f(it)f(needs)h(convincing)f(sound)g(to)h
(match,\224)f(January)i(2016.)f([Online].)g(A)-6 b(vailable:)p
0 TeXcolorgray 301 1240 a
SDict begin H.S end
 301 1240 a 0 TeXcolorgray -19
x Fa(https://www)g(.engadget.com/2016/01/22/vr)o(-)t(needs-)t(3d-)t
(audio/)p 0 TeXcolorgray 2166 1173 a
SDict begin H.R end
 2166 1173 a 2166
1221 a
SDict begin [/H /I/Border [0 0 0]BorderArrayPatch/Color [0 1 1]/Action
<</Subtype/URI/URI(https://www.engadget.com/2016/01/22/vr-needs-3d-audio/)>>/Subtype
/Link H.B /ANN pdfmark end
 2166 1221 a 0 TeXcolorgray 150 1240 a
SDict begin H.S end
 150 1240
a 150 1240 a
SDict begin 13.5506 H.A end
 150 1240 a 150 1240 a
SDict begin [/View [/XYZ H.V]/Dest (cite.lumberyard_audio_system) cvn
/DEST pdfmark end
 150 1240 a 0 TeXcolorgray
94 x Fa([10])p 0 TeXcolorgray 41 w(A.)188 b(W)-6 b(.)188
b(Services,)h(\223Lumberyar)o(d)g(audio)h(system,\224)f(2016.)h
([Online].)f(A)-6 b(vailable:)p 0 TeXcolorgray 301 1465
a
SDict begin H.S end
 301 1465 a 0 TeXcolorgray -19 x Fa
(http://docs.aws.amazon.com/lumberyar)o(d/latest/user)o(guide/audio-)t
(intr)o(o.html)p 0 TeXcolorgray 2638 1398 a
SDict begin H.R end
 2638 1398
a 2638 1446 a
SDict begin [/H /I/Border [0 0 0]BorderArrayPatch/Color [0 1 1]/Action
<</Subtype/URI/URI(http://docs.aws.amazon.com/lumberyard/latest/userguide/audio-intro.html)>>/Subtype
/Link H.B /ANN pdfmark end
 2638 1446 a 0 TeXcolorgray 150 1465 a
SDict begin H.S end
 150
1465 a 150 1465 a
SDict begin 13.5506 H.A end
 150 1465 a 150 1465 a
SDict begin [/View [/XYZ H.V]/Dest (cite.unreal_audio) cvn /DEST pdfmark
end
 150 1465 a 0
TeXcolorgray 94 x Fa([11])p 0 TeXcolorgray 41 w(E.)168
b(Games,)g(\223Unr)o(eal)i(engine)e(audio)i(and)e(sound,\224)h(2016.)h
([Online].)f(A)-6 b(vailable:)p 0 TeXcolorgray 301 1690
a
SDict begin H.S end
 301 1690 a 0 TeXcolorgray -19 x Fa(https://docs.unr)o
(ealengine.com/latest/INT/Engine/Audio/index.html)p 0
TeXcolorgray 2422 1623 a
SDict begin H.R end
 2422 1623 a 2422 1671 a
SDict begin [/H /I/Border [0 0 0]BorderArrayPatch/Color [0 1 1]/Action
<</Subtype/URI/URI(https://docs.unrealengine.com/latest/INT/Engine/Audio/index.html)>>/Subtype
/Link H.B /ANN pdfmark end
 2422
1671 a 0 TeXcolorgray 150 1690 a
SDict begin H.S end
 150 1690 a 150 1690
a
SDict begin 13.5506 H.A end
 150 1690 a 150 1690 a
SDict begin [/View [/XYZ H.V]/Dest (cite.unity_audio) cvn /DEST pdfmark
end
 150 1690 a 0 TeXcolorgray 94
x Fa([12])p 0 TeXcolorgray 41 w(U.)18 b(T)-6 b(echnologies,)19
b(\223Unity)g(audio,\224)h(2016.)f([Online].)h(A)-6 b(vailable:)p
0 TeXcolorgray 2027 1802 a
SDict begin H.S end
 2027 1802 a 0 TeXcolorgray
-18 x Fa(https://docs.unity3d.com/Manual/Audio.html)p
0 TeXcolorgray 3453 1735 a
SDict begin H.R end
 3453 1735 a 3453 1784 a
SDict begin [/H /I/Border [0 0 0]BorderArrayPatch/Color [0 1 1]/Action
<</Subtype/URI/URI(https://docs.unity3d.com/Manual/Audio.html)>>/Subtype
/Link H.B /ANN pdfmark end
 3453
1784 a 0 TeXcolorgray 150 1802 a
SDict begin H.S end
 150 1802 a 150 1802
a
SDict begin 13.5506 H.A end
 150 1802 a 150 1802 a
SDict begin [/View [/XYZ H.V]/Dest (cite.michalak_lind_round1) cvn
/DEST pdfmark end
 150 1802 a 0 TeXcolorgray 94
x Fa([13])p 0 TeXcolorgray 41 w(S.)16 b(Michalak)i(and)f(E.)f(Lind,)h
(\223V)l(irtual)i(r)o(eality)f(heuristics,)f(r)o(esults)h(fr)o(om)f
(user)h(testing)f(for)h(prioritization)i(and)d(development,\224)f(Sep)
301 2009 y(2016.)150 2010 y
SDict begin H.S end
 150 2010 a 150 2010 a
SDict begin 13.5506 H.A end
 150
2010 a 150 2010 a
SDict begin [/View [/XYZ H.V]/Dest (cite.steamvr_controllers) cvn /DEST
pdfmark end
 150 2010 a 0 TeXcolorgray 111 x Fa([14])p
0 TeXcolorgray 41 w(R.)96 b(Reddy)-7 b(,)96 b(\223Steamvr:)h(Handling)h
(vive)f(contr)o(oller)i(input)e(in)h(unity)-7 b(,\224)97
b(2016.)h([Online].)g(A)-6 b(vailable:)p 0 TeXcolorgray
301 2252 a
SDict begin H.S end
 301 2252 a 0 TeXcolorgray -18 x Fa(http://www)g
(.leadingones.com/articles/vive-)t(dev-)t(unity-)t(4.html)p
0 TeXcolorgray 2148 2185 a
SDict begin H.R end
 2148 2185 a 2148 2234 a
SDict begin [/H /I/Border [0 0 0]BorderArrayPatch/Color [0 1 1]/Action
<</Subtype/URI/URI(http://www.leadingones.com/articles/vive-dev-unity-4.html)>>/Subtype
/Link H.B /ANN pdfmark end
 2148
2234 a 0 TeXcolorgray 150 2252 a
SDict begin H.S end
 150 2252 a 150 2252
a
SDict begin 13.5506 H.A end
 150 2252 a 150 2252 a
SDict begin [/View [/XYZ H.V]/Dest (cite.unreal_controller) cvn /DEST
pdfmark end
 150 2252 a 0 TeXcolorgray 94
x Fa([15])p 0 TeXcolorgray 41 w(I.)178 b(Epic)g(Games,)g(\223Motion)i
(contr)o(oller)f(component)f(setup.\224)g([Online].)h(A)-6
b(vailable:)p 0 TeXcolorgray 301 2477 a
SDict begin H.S end
 301 2477 a 0
TeXcolorgray -18 x Fa(https://docs.unr)o
(ealengine.com/latest/INT/Platforms/VR/MotionContr)o(oll)q(er/)p
0 TeXcolorgray 2644 2410 a
SDict begin H.R end
 2644 2410 a 2644 2459 a
SDict begin [/H /I/Border [0 0 0]BorderArrayPatch/Color [0 1 1]/Action
<</Subtype/URI/URI(https://docs.unrealengine.com/latest/INT/Platforms/VR/MotionController/)>>/Subtype
/Link H.B /ANN pdfmark end
 2644
2459 a 0 TeXcolorgray 150 2477 a
SDict begin H.S end
 150 2477 a 150 2477
a
SDict begin 13.5506 H.A end
 150 2477 a 150 2477 a
SDict begin [/View [/XYZ H.V]/Dest (cite.lumberyard_controller_flow)
cvn /DEST pdfmark end
 150 2477 a 0 TeXcolorgray 94
x Fa([16])p 0 TeXcolorgray 41 w(A.)84 b(W)-6 b(.)83 b(Services,)h
(\223Setting)h(up)f(a)h(basic)g(virtual)g(r)o(eality)h(\003ow)e
(graph,\224)h(2016.)g([Online].)g(A)-6 b(vailable:)p
0 TeXcolorgray 301 2702 a
SDict begin H.S end
 301 2702 a 0 TeXcolorgray -18
x Fa(http://docs.aws.amazon.com/lumberyar)o(d/latest/user)o
(guide/virtual-)t(r)o(eality-)t(\003owgraph-)5 b(setup.html)p
0 TeXcolorgray 3235 2635 a
SDict begin H.R end
 3235 2635 a 3235 2684 a
SDict begin [/H /I/Border [0 0 0]BorderArrayPatch/Color [0 1 1]/Action
<</Subtype/URI/URI(http://docs.aws.amazon.com/lumberyard/latest/userguide/virtual-reality-flowgraph-setup.html)>>/Subtype
/Link H.B /ANN pdfmark end
 3235
2684 a 0 TeXcolorgray 150 2702 a
SDict begin H.S end
 150 2702 a 150 2702
a
SDict begin 13.5506 H.A end
 150 2702 a 150 2702 a
SDict begin [/View [/XYZ H.V]/Dest (cite.lumberyard_controller_lua)
cvn /DEST pdfmark end
 150 2702 a 0 TeXcolorgray 94
x Fa([17])p 0 TeXcolorgray 41 w(\227\227,)344 b(\223V)-6
b(r)347 b(lua)f(functions,\224)g(2016.)h([Online].)f(A)-6
b(vailable:)p 0 TeXcolorgray 301 2927 a
SDict begin H.S end
 301 2927 a 0
TeXcolorgray -18 x Fa(http://docs.aws.amazon.com/lumberyar)o
(d/latest/developer)o(guide/lua-)t(scripting-)t(r)o(ef-)t(vr)h(.html)p
0 TeXcolorgray 3040 2860 a
SDict begin H.R end
 3040 2860 a 3040 2909 a
SDict begin [/H /I/Border [0 0 0]BorderArrayPatch/Color [0 1 1]/Action
<</Subtype/URI/URI(http://docs.aws.amazon.com/lumberyard/latest/developerguide/lua-scripting-ref-vr.html)>>/Subtype
/Link H.B /ANN pdfmark end
 3040
2909 a 0 TeXcolorgray 150 2927 a
SDict begin H.S end
 150 2927 a 150 2927
a
SDict begin 13.5506 H.A end
 150 2927 a 150 2927 a
SDict begin [/View [/XYZ H.V]/Dest (cite.unity_store_age) cvn /DEST
pdfmark end
 150 2927 a 0 TeXcolorgray 94
x Fa([18])p 0 TeXcolorgray 41 w(W)f(.)111 b(Fr)o(eeman,)h(\223Unity)g
(launches)g(unity)h(asset)f(stor)o(e,\224)h(November)f(2010.)h
([Online].)g(A)-6 b(vailable:)p 0 TeXcolorgray 301 3152
a
SDict begin H.S end
 301 3152 a 0 TeXcolorgray -18 x Fa(http://www)g(.develop-)t
(online.net/news/unity-)t(launches-)t(unity-)t(asset-)t(stor)o
(e/0108154)p 0 TeXcolorgray 2732 3085 a
SDict begin H.R end
 2732 3085 a 2732
3134 a
SDict begin [/H /I/Border [0 0 0]BorderArrayPatch/Color [0 1 1]/Action
<</Subtype/URI/URI(http://www.develop-online.net/news/unity-launches-unity-asset-store/0108154)>>/Subtype
/Link H.B /ANN pdfmark end
 2732 3134 a 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
